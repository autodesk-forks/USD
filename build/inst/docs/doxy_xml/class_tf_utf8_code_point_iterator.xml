<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_tf_utf8_code_point_iterator" kind="class" language="C++" prot="public" final="yes">
    <compoundname>TfUtf8CodePointIterator</compoundname>
    <includes refid="unicode_utils_8h" local="no">unicodeUtils.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_tf_utf8_code_point_iterator_1a6b137a24d9328a60aef01d0f938cf0c3" prot="public" static="no">
        <type>std::forward_iterator_tag</type>
        <definition>using iterator_category =  std::forward_iterator_tag</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/unicodeUtils.h" line="110" column="1" bodyfile="pxr/base/tf/unicodeUtils.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_tf_utf8_code_point_iterator_1a287f7e7013674a46931292044af4477f" prot="public" static="no">
        <type>uint32_t</type>
        <definition>using value_type =  uint32_t</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/unicodeUtils.h" line="111" column="1" bodyfile="pxr/base/tf/unicodeUtils.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_tf_utf8_code_point_iterator_1ace405568d0b2f3fad4990044252c7732" prot="public" static="no">
        <type>std::ptrdiff_t</type>
        <definition>using difference_type =  std::ptrdiff_t</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/unicodeUtils.h" line="112" column="1" bodyfile="pxr/base/tf/unicodeUtils.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_tf_utf8_code_point_iterator_1a1c8ba3b7a92a01249bfab95d9c274c59" prot="public" static="no">
        <type>void</type>
        <definition>using pointer =  void</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/unicodeUtils.h" line="113" column="1" bodyfile="pxr/base/tf/unicodeUtils.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_tf_utf8_code_point_iterator_1a9460a69be4a94b34999d431bc7f2c899" prot="public" static="no">
        <type>uint32_t</type>
        <definition>using reference =  uint32_t</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/unicodeUtils.h" line="114" column="1" bodyfile="pxr/base/tf/unicodeUtils.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_tf_utf8_code_point_iterator_1a012c49bf59eb29a5e466fd09a7188cb9" prot="private" static="no">
        <type>unsigned char</type>
        <definition>using _EncodingLength =  unsigned char</definition>
        <argsstring></argsstring>
        <name>_EncodingLength</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/unicodeUtils.h" line="231" column="1" bodyfile="pxr/base/tf/unicodeUtils.h" bodystart="231" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_tf_utf8_code_point_iterator_1aea0ba4bff0a82e3fb9120389c4ed4661" prot="public" static="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t INVALID_CODE_POINT</definition>
        <argsstring></argsstring>
        <name>INVALID_CODE_POINT</name>
        <initializer>= 0xFFFD</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/unicodeUtils.h" line="116" column="1" bodyfile="pxr/base/tf/unicodeUtils.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_tf_utf8_code_point_iterator_1abe8da9e845d84eb12de56d56ac45383e" prot="private" static="no" mutable="no">
        <type>std::string_view::const_iterator</type>
        <definition>std::string_view::const_iterator _it</definition>
        <argsstring></argsstring>
        <name>_it</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/unicodeUtils.h" line="287" column="1" bodyfile="pxr/base/tf/unicodeUtils.h" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tf_utf8_code_point_iterator_1aa74da512b292cf14db69b53cd70897fd" prot="private" static="no" mutable="no">
        <type>std::string_view::const_iterator</type>
        <definition>std::string_view::const_iterator _end</definition>
        <argsstring></argsstring>
        <name>_end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/unicodeUtils.h" line="288" column="1" bodyfile="pxr/base/tf/unicodeUtils.h" bodystart="288" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_tf_utf8_code_point_iterator_1abebb04ffe482e0ac242b7695c1ecc952" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class TfUtf8CodePointView</definition>
        <argsstring></argsstring>
        <name>TfUtf8CodePointView</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/unicodeUtils.h" line="290" column="1" bodyfile="pxr/base/tf/unicodeUtils.h" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_tf_utf8_code_point_iterator_1ac160ac9860a1b17342979618920dd99d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const TfUtf8CodePointIterator &amp;lhs, TfUtf8CodePointView::PastTheEndSentinel)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_tf_utf8_code_point_iterator" kindref="compound">TfUtf8CodePointIterator</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="class_tf_utf8_code_point_view_1_1_past_the_end_sentinel" kindref="compound">TfUtf8CodePointView::PastTheEndSentinel</ref></type>
        </param>
        <briefdescription>
<para>Checks if the <computeroutput>lhs</computeroutput> iterator is at or past the end for the underlying string_view. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/unicodeUtils.h" line="198" column="1" bodyfile="pxr/base/tf/unicodeUtils.h" bodystart="198" bodyend="202"/>
      </memberdef>
      <memberdef kind="friend" id="class_tf_utf8_code_point_iterator_1af502bcb93cc9c7519495cba02906488e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(TfUtf8CodePointView::PastTheEndSentinel lhs, const TfUtf8CodePointIterator &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="class_tf_utf8_code_point_view_1_1_past_the_end_sentinel" kindref="compound">TfUtf8CodePointView::PastTheEndSentinel</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_utf8_code_point_iterator" kindref="compound">TfUtf8CodePointIterator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/unicodeUtils.h" line="204" column="1" bodyfile="pxr/base/tf/unicodeUtils.h" bodystart="204" bodyend="208"/>
      </memberdef>
      <memberdef kind="friend" id="class_tf_utf8_code_point_iterator_1a047bbaa38da507ffdf1c6224ad1772dd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const TfUtf8CodePointIterator &amp;lhs, TfUtf8CodePointView::PastTheEndSentinel rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_tf_utf8_code_point_iterator" kindref="compound">TfUtf8CodePointIterator</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="class_tf_utf8_code_point_view_1_1_past_the_end_sentinel" kindref="compound">TfUtf8CodePointView::PastTheEndSentinel</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/unicodeUtils.h" line="210" column="1" bodyfile="pxr/base/tf/unicodeUtils.h" bodystart="210" bodyend="214"/>
      </memberdef>
      <memberdef kind="friend" id="class_tf_utf8_code_point_iterator_1ab79a0c3bb767bdfb97e827a4ce9661e2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(TfUtf8CodePointView::PastTheEndSentinel lhs, TfUtf8CodePointIterator rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="class_tf_utf8_code_point_view_1_1_past_the_end_sentinel" kindref="compound">TfUtf8CodePointView::PastTheEndSentinel</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="class_tf_utf8_code_point_iterator" kindref="compound">TfUtf8CodePointIterator</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/unicodeUtils.h" line="215" column="1" bodyfile="pxr/base/tf/unicodeUtils.h" bodystart="215" bodyend="219"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_tf_utf8_code_point_iterator_1ab0a1444ac70487f1481c0453645309e8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t operator *</definition>
        <argsstring>() const</argsstring>
        <name>operator *</name>
        <briefdescription>
<para>Retrieves the next UTF-8 character in the sequence as its Unicode code point value. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns INVALID_CODE_POINT when the byte sequence pointed to by the iterator cannot be decoded.</para>
<para>If during read of the UTF-8 character sequence the underlying string iterator would go beyond <emphasis>end</emphasis> defined at construction time, a std::out_of_range exception will be thrown. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/unicodeUtils.h" line="125" column="1" bodyfile="pxr/base/tf/unicodeUtils.h" bodystart="125" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_utf8_code_point_iterator_1af646b4a93cb14c0821f76687d3b56040" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string_view::const_iterator</type>
        <definition>std::string_view::const_iterator GetBase</definition>
        <argsstring>() const</argsstring>
        <name>GetBase</name>
        <briefdescription>
<para>Retrieves the wrapped string iterator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/unicodeUtils.h" line="142" column="1" bodyfile="pxr/base/tf/unicodeUtils.h" bodystart="142" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_utf8_code_point_iterator_1a87c16adafe70220153dcc44a5a1c50ee" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const TfUtf8CodePointIterator &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_tf_utf8_code_point_iterator" kindref="compound">TfUtf8CodePointIterator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Determines if two iterators are equal. </para>
        </briefdescription>
        <detaileddescription>
<para>This intentionally does not consider the end iterator to allow for comparison of iterators between substring views. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/unicodeUtils.h" line="150" column="1" bodyfile="pxr/base/tf/unicodeUtils.h" bodystart="150" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_utf8_code_point_iterator_1a8bf4506e3ec15e71cee8a34a8543ed98" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const TfUtf8CodePointIterator &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_tf_utf8_code_point_iterator" kindref="compound">TfUtf8CodePointIterator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Determines if two iterators are unequal. </para>
        </briefdescription>
        <detaileddescription>
<para>This intentionally does not consider the end iterator to allow for comparison of iterators between substring views. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/unicodeUtils.h" line="158" column="1" bodyfile="pxr/base/tf/unicodeUtils.h" bodystart="158" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_utf8_code_point_iterator_1a31f93b9c570c5f8a578983062afa7fad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_tf_utf8_code_point_iterator" kindref="compound">TfUtf8CodePointIterator</ref> &amp;</type>
        <definition>TfUtf8CodePointIterator&amp; operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
<para>Advances the iterator logically one UTF-8 character sequence in the string. </para>
        </briefdescription>
        <detaileddescription>
<para>The underlying string iterator will be advanced according to the variable length encoding of the next UTF-8 character. Invalid leading bytes will increment until the end of the range is reached. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/unicodeUtils.h" line="168" column="1" bodyfile="pxr/base/tf/unicodeUtils.h" bodystart="168" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_utf8_code_point_iterator_1a458d6e834881ff329f678bb9f85e42c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_tf_utf8_code_point_iterator" kindref="compound">TfUtf8CodePointIterator</ref></type>
        <definition>TfUtf8CodePointIterator operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
<para>Advances the iterator logically one UTF-8 character sequence in the string. </para>
        </briefdescription>
        <detaileddescription>
<para>The underlying string iterator will be advanced according to the variable length encoding of the next UTF-8 character. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/unicodeUtils.h" line="185" column="1" bodyfile="pxr/base/tf/unicodeUtils.h" bodystart="185" bodyend="194"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_tf_utf8_code_point_iterator_1ae8a6cdc5097366728d9c286c8e2c5898" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TfUtf8CodePointIterator</definition>
        <argsstring>(const std::string_view::const_iterator &amp;it, const std::string_view::const_iterator &amp;end)</argsstring>
        <name>TfUtf8CodePointIterator</name>
        <param>
          <type>const std::string_view::const_iterator &amp;</type>
          <declname>it</declname>
        </param>
        <param>
          <type>const std::string_view::const_iterator &amp;</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/unicodeUtils.h" line="225" column="1" bodyfile="pxr/base/tf/unicodeUtils.h" bodystart="225" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_utf8_code_point_iterator_1aed7dfecf9bcdf1810b3ace30922412e2" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>_EncodingLength</type>
        <definition>_EncodingLength _GetEncodingLength</definition>
        <argsstring>() const</argsstring>
        <name>_GetEncodingLength</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/unicodeUtils.h" line="237" column="1" bodyfile="pxr/base/tf/unicodeUtils.h" bodystart="237" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_utf8_code_point_iterator_1af319f4e5e02b0ee30675f436bdfcf601" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API uint32_t</type>
        <definition>TF_API uint32_t _GetCodePoint</definition>
        <argsstring>() const</argsstring>
        <name>_GetCodePoint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/unicodeUtils.h" line="278" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_utf8_code_point_iterator_1ab6e32fb30f277d29031693738529a336" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool _IsPastTheEnd</definition>
        <argsstring>() const</argsstring>
        <name>_IsPastTheEnd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/unicodeUtils.h" line="282" column="1" bodyfile="pxr/base/tf/unicodeUtils.h" bodystart="282" bodyend="285"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Defines an iterator over a UTF-8 encoded string that extracts unicode code point values. </para>
    </briefdescription>
    <detaileddescription>
<para>UTF-8 is a variable length encoding, meaning that one Unicode character can be encoded in UTF-8 as 1, 2, 3, or 4 bytes. This iterator takes care of iterating the necessary characters in a string and extracing the Unicode code point of each UTF-8 encoded character in the sequence. </para>
    </detaileddescription>
    <location file="pxr/base/tf/unicodeUtils.h" line="108" column="1" bodyfile="pxr/base/tf/unicodeUtils.h" bodystart="108" bodyend="291"/>
    <listofallmembers>
      <member refid="class_tf_utf8_code_point_iterator_1a012c49bf59eb29a5e466fd09a7188cb9" prot="private" virt="non-virtual"><scope>TfUtf8CodePointIterator</scope><name>_EncodingLength</name></member>
      <member refid="class_tf_utf8_code_point_iterator_1aa74da512b292cf14db69b53cd70897fd" prot="private" virt="non-virtual"><scope>TfUtf8CodePointIterator</scope><name>_end</name></member>
      <member refid="class_tf_utf8_code_point_iterator_1af319f4e5e02b0ee30675f436bdfcf601" prot="private" virt="non-virtual"><scope>TfUtf8CodePointIterator</scope><name>_GetCodePoint</name></member>
      <member refid="class_tf_utf8_code_point_iterator_1aed7dfecf9bcdf1810b3ace30922412e2" prot="private" virt="non-virtual"><scope>TfUtf8CodePointIterator</scope><name>_GetEncodingLength</name></member>
      <member refid="class_tf_utf8_code_point_iterator_1ab6e32fb30f277d29031693738529a336" prot="private" virt="non-virtual"><scope>TfUtf8CodePointIterator</scope><name>_IsPastTheEnd</name></member>
      <member refid="class_tf_utf8_code_point_iterator_1abe8da9e845d84eb12de56d56ac45383e" prot="private" virt="non-virtual"><scope>TfUtf8CodePointIterator</scope><name>_it</name></member>
      <member refid="class_tf_utf8_code_point_iterator_1ace405568d0b2f3fad4990044252c7732" prot="public" virt="non-virtual"><scope>TfUtf8CodePointIterator</scope><name>difference_type</name></member>
      <member refid="class_tf_utf8_code_point_iterator_1af646b4a93cb14c0821f76687d3b56040" prot="public" virt="non-virtual"><scope>TfUtf8CodePointIterator</scope><name>GetBase</name></member>
      <member refid="class_tf_utf8_code_point_iterator_1aea0ba4bff0a82e3fb9120389c4ed4661" prot="public" virt="non-virtual"><scope>TfUtf8CodePointIterator</scope><name>INVALID_CODE_POINT</name></member>
      <member refid="class_tf_utf8_code_point_iterator_1a6b137a24d9328a60aef01d0f938cf0c3" prot="public" virt="non-virtual"><scope>TfUtf8CodePointIterator</scope><name>iterator_category</name></member>
      <member refid="class_tf_utf8_code_point_iterator_1ab0a1444ac70487f1481c0453645309e8" prot="public" virt="non-virtual"><scope>TfUtf8CodePointIterator</scope><name>operator *</name></member>
      <member refid="class_tf_utf8_code_point_iterator_1a8bf4506e3ec15e71cee8a34a8543ed98" prot="public" virt="non-virtual"><scope>TfUtf8CodePointIterator</scope><name>operator!=</name></member>
      <member refid="class_tf_utf8_code_point_iterator_1a047bbaa38da507ffdf1c6224ad1772dd" prot="public" virt="non-virtual"><scope>TfUtf8CodePointIterator</scope><name>operator!=</name></member>
      <member refid="class_tf_utf8_code_point_iterator_1ab79a0c3bb767bdfb97e827a4ce9661e2" prot="public" virt="non-virtual"><scope>TfUtf8CodePointIterator</scope><name>operator!=</name></member>
      <member refid="class_tf_utf8_code_point_iterator_1a31f93b9c570c5f8a578983062afa7fad" prot="public" virt="non-virtual"><scope>TfUtf8CodePointIterator</scope><name>operator++</name></member>
      <member refid="class_tf_utf8_code_point_iterator_1a458d6e834881ff329f678bb9f85e42c5" prot="public" virt="non-virtual"><scope>TfUtf8CodePointIterator</scope><name>operator++</name></member>
      <member refid="class_tf_utf8_code_point_iterator_1a87c16adafe70220153dcc44a5a1c50ee" prot="public" virt="non-virtual"><scope>TfUtf8CodePointIterator</scope><name>operator==</name></member>
      <member refid="class_tf_utf8_code_point_iterator_1ac160ac9860a1b17342979618920dd99d" prot="public" virt="non-virtual"><scope>TfUtf8CodePointIterator</scope><name>operator==</name></member>
      <member refid="class_tf_utf8_code_point_iterator_1af502bcb93cc9c7519495cba02906488e" prot="public" virt="non-virtual"><scope>TfUtf8CodePointIterator</scope><name>operator==</name></member>
      <member refid="class_tf_utf8_code_point_iterator_1a1c8ba3b7a92a01249bfab95d9c274c59" prot="public" virt="non-virtual"><scope>TfUtf8CodePointIterator</scope><name>pointer</name></member>
      <member refid="class_tf_utf8_code_point_iterator_1a9460a69be4a94b34999d431bc7f2c899" prot="public" virt="non-virtual"><scope>TfUtf8CodePointIterator</scope><name>reference</name></member>
      <member refid="class_tf_utf8_code_point_iterator_1ae8a6cdc5097366728d9c286c8e2c5898" prot="private" virt="non-virtual"><scope>TfUtf8CodePointIterator</scope><name>TfUtf8CodePointIterator</name></member>
      <member refid="class_tf_utf8_code_point_iterator_1abebb04ffe482e0ac242b7695c1ecc952" prot="private" virt="non-virtual"><scope>TfUtf8CodePointIterator</scope><name>TfUtf8CodePointView</name></member>
      <member refid="class_tf_utf8_code_point_iterator_1a287f7e7013674a46931292044af4477f" prot="public" virt="non-virtual"><scope>TfUtf8CodePointIterator</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
