<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="group___usd_skel___joint_transform_utils" kind="group">
    <compoundname>UsdSkel_JointTransformUtils</compoundname>
    <title>Joint Transform Utilities</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___usd_skel___joint_transform_utils_1ga3864a18b6185a003ab1ee0f004cf5735" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelComputeJointLocalTransforms</definition>
        <argsstring>(const UsdSkelTopology &amp;topology, TfSpan&lt; const GfMatrix4d &gt; xforms, TfSpan&lt; const GfMatrix4d &gt; inverseXforms, TfSpan&lt; GfMatrix4d &gt; jointLocalXforms, const GfMatrix4d *rootInverseXform=nullptr)</argsstring>
        <name>UsdSkelComputeJointLocalTransforms</name>
        <param>
          <type>const <ref refid="class_usd_skel_topology" kindref="compound">UsdSkelTopology</ref> &amp;</type>
          <declname>topology</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> &gt;</type>
          <declname>xforms</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> &gt;</type>
          <declname>inverseXforms</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> &gt;</type>
          <declname>jointLocalXforms</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *</type>
          <declname>rootInverseXform</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Compute joint transforms in joint-local space. </para>
        </briefdescription>
        <detaileddescription>
<para>Transforms are computed from <computeroutput>xforms</computeroutput>, holding concatenated joint transforms, and <computeroutput>inverseXforms</computeroutput>, providing the inverse of each of those transforms. The resulting local space transforms are written to <computeroutput>jointLocalXforms</computeroutput>, which must be the same size as <computeroutput>topology</computeroutput>. If the root joints include an additional, external transformation <ndash/> eg., such as the skel local-to-world transformation <ndash/> then the inverse of that transform should be passed as <computeroutput>rootInverseXform</computeroutput>. If no <computeroutput>rootInverseXform</computeroutput> is provided, then <computeroutput>xform</computeroutput> and <computeroutput>inverseXforms</computeroutput> should be based on joint transforms computed in skeleton space. Each transform array must be sized to the number of joints from <computeroutput>topology</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___joint_transform_utils_1ga7834ca49f961aee3f619e34e109cd1aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelComputeJointLocalTransforms</definition>
        <argsstring>(const UsdSkelTopology &amp;topology, TfSpan&lt; const GfMatrix4f &gt; xforms, TfSpan&lt; const GfMatrix4f &gt; inverseXforms, TfSpan&lt; GfMatrix4f &gt; jointLocalXforms, const GfMatrix4f *rootInverseXform=nullptr)</argsstring>
        <name>UsdSkelComputeJointLocalTransforms</name>
        <param>
          <type>const <ref refid="class_usd_skel_topology" kindref="compound">UsdSkelTopology</ref> &amp;</type>
          <declname>topology</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_matrix4f" kindref="compound">GfMatrix4f</ref> &gt;</type>
          <declname>xforms</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_matrix4f" kindref="compound">GfMatrix4f</ref> &gt;</type>
          <declname>inverseXforms</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; <ref refid="class_gf_matrix4f" kindref="compound">GfMatrix4f</ref> &gt;</type>
          <declname>jointLocalXforms</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_matrix4f" kindref="compound">GfMatrix4f</ref> *</type>
          <declname>rootInverseXform</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="113" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___joint_transform_utils_1ga39a2d64ea968c3b6943162912736dfd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelComputeJointLocalTransforms</definition>
        <argsstring>(const UsdSkelTopology &amp;topology, TfSpan&lt; const GfMatrix4d &gt; xforms, TfSpan&lt; GfMatrix4d &gt; jointLocalXforms, const GfMatrix4d *rootInverseXform=nullptr)</argsstring>
        <name>UsdSkelComputeJointLocalTransforms</name>
        <param>
          <type>const <ref refid="class_usd_skel_topology" kindref="compound">UsdSkelTopology</ref> &amp;</type>
          <declname>topology</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> &gt;</type>
          <declname>xforms</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> &gt;</type>
          <declname>jointLocalXforms</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *</type>
          <declname>rootInverseXform</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Compute joint transforms in joint-local space. </para>
        </briefdescription>
        <detaileddescription>
<para>This is a convenience overload, which computes the required inverse transforms internally. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="124" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___joint_transform_utils_1ga037968083383829c2e064a2068247ea0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelComputeJointLocalTransforms</definition>
        <argsstring>(const UsdSkelTopology &amp;topology, TfSpan&lt; const GfMatrix4f &gt; xforms, TfSpan&lt; GfMatrix4f &gt; jointLocalXforms, const GfMatrix4f *rootInverseXform=nullptr)</argsstring>
        <name>UsdSkelComputeJointLocalTransforms</name>
        <param>
          <type>const <ref refid="class_usd_skel_topology" kindref="compound">UsdSkelTopology</ref> &amp;</type>
          <declname>topology</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_matrix4f" kindref="compound">GfMatrix4f</ref> &gt;</type>
          <declname>xforms</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; <ref refid="class_gf_matrix4f" kindref="compound">GfMatrix4f</ref> &gt;</type>
          <declname>jointLocalXforms</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_matrix4f" kindref="compound">GfMatrix4f</ref> *</type>
          <declname>rootInverseXform</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="131" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___joint_transform_utils_1gacab58a8d5e83ba3621b48dbbfa92378b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelComputeJointLocalTransforms</definition>
        <argsstring>(const UsdSkelTopology &amp;topology, const VtMatrix4dArray &amp;xforms, const VtMatrix4dArray &amp;inverseXforms, VtMatrix4dArray *jointLocalXforms, const GfMatrix4d *rootInverseXform=nullptr)</argsstring>
        <name>UsdSkelComputeJointLocalTransforms</name>
        <param>
          <type>const <ref refid="class_usd_skel_topology" kindref="compound">UsdSkelTopology</ref> &amp;</type>
          <declname>topology</declname>
        </param>
        <param>
          <type>const VtMatrix4dArray &amp;</type>
          <declname>xforms</declname>
        </param>
        <param>
          <type>const VtMatrix4dArray &amp;</type>
          <declname>inverseXforms</declname>
        </param>
        <param>
          <type>VtMatrix4dArray *</type>
          <declname>jointLocalXforms</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *</type>
          <declname>rootInverseXform</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000122"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use form that takes <ref refid="class_tf_span" kindref="compound">TfSpan</ref> arguments.</para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="141" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___joint_transform_utils_1ga0307b13e8f77b460acb0bdb05cc37009" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelComputeJointLocalTransforms</definition>
        <argsstring>(const UsdSkelTopology &amp;topology, const VtMatrix4dArray &amp;xforms, VtMatrix4dArray *jointLocalXforms, const GfMatrix4d *rootInverseXform=nullptr)</argsstring>
        <name>UsdSkelComputeJointLocalTransforms</name>
        <param>
          <type>const <ref refid="class_usd_skel_topology" kindref="compound">UsdSkelTopology</ref> &amp;</type>
          <declname>topology</declname>
        </param>
        <param>
          <type>const VtMatrix4dArray &amp;</type>
          <declname>xforms</declname>
        </param>
        <param>
          <type>VtMatrix4dArray *</type>
          <declname>jointLocalXforms</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *</type>
          <declname>rootInverseXform</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000123"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use form that takes <ref refid="class_tf_span" kindref="compound">TfSpan</ref> arguments.</para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="154" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___joint_transform_utils_1ga7abf3d342cbc9b6660d9fe5d7cc342cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelComputeJointLocalTransforms</definition>
        <argsstring>(const UsdSkelTopology &amp;topology, const GfMatrix4d *xforms, const GfMatrix4d *inverseXforms, GfMatrix4d *jointLocalXforms, const GfMatrix4d *rootInverseXform=nullptr)</argsstring>
        <name>UsdSkelComputeJointLocalTransforms</name>
        <param>
          <type>const <ref refid="class_usd_skel_topology" kindref="compound">UsdSkelTopology</ref> &amp;</type>
          <declname>topology</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *</type>
          <declname>xforms</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *</type>
          <declname>inverseXforms</declname>
        </param>
        <param>
          <type><ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *</type>
          <declname>jointLocalXforms</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *</type>
          <declname>rootInverseXform</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000124"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use form that takes <ref refid="class_tf_span" kindref="compound">TfSpan</ref> arguments.</para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="164" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___joint_transform_utils_1gaaf41a0c8bf481e0630a4f46478c82013" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelConcatJointTransforms</definition>
        <argsstring>(const UsdSkelTopology &amp;topology, TfSpan&lt; const GfMatrix4d &gt; jointLocalXforms, TfSpan&lt; GfMatrix4d &gt; xforms, const GfMatrix4d *rootXform=nullptr)</argsstring>
        <name>UsdSkelConcatJointTransforms</name>
        <param>
          <type>const <ref refid="class_usd_skel_topology" kindref="compound">UsdSkelTopology</ref> &amp;</type>
          <declname>topology</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> &gt;</type>
          <declname>jointLocalXforms</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> &gt;</type>
          <declname>xforms</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *</type>
          <declname>rootXform</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Compute concatenated joint transforms. </para>
        </briefdescription>
        <detaileddescription>
<para>This concatenates transforms from <computeroutput>jointLocalXforms</computeroutput>, providing joint transforms in joint-local space. The resulting transforms are written to <computeroutput>jointLocalXforms</computeroutput>, which must be the same size as <computeroutput>topology</computeroutput>. If <computeroutput>rootXform</computeroutput> is not provided, or is the identity, the resulting joint transforms will be given in skeleton space. Any additional transformations may be provided on <computeroutput>rootXform</computeroutput> if an additional level of transformation <ndash/> such as the skel local to world transform <ndash/> are desired. Each transform array must be sized to the number of joints from <computeroutput>topology</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="183" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___joint_transform_utils_1ga7c88787970633375e2c390fa3b9fe721" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelConcatJointTransforms</definition>
        <argsstring>(const UsdSkelTopology &amp;topology, TfSpan&lt; const GfMatrix4f &gt; jointLocalXforms, TfSpan&lt; GfMatrix4f &gt; xforms, const GfMatrix4f *rootXform=nullptr)</argsstring>
        <name>UsdSkelConcatJointTransforms</name>
        <param>
          <type>const <ref refid="class_usd_skel_topology" kindref="compound">UsdSkelTopology</ref> &amp;</type>
          <declname>topology</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_matrix4f" kindref="compound">GfMatrix4f</ref> &gt;</type>
          <declname>jointLocalXforms</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; <ref refid="class_gf_matrix4f" kindref="compound">GfMatrix4f</ref> &gt;</type>
          <declname>xforms</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_matrix4f" kindref="compound">GfMatrix4f</ref> *</type>
          <declname>rootXform</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="192" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___joint_transform_utils_1ga961f3a190bb4bf1f48a4a64ed48d62ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelConcatJointTransforms</definition>
        <argsstring>(const UsdSkelTopology &amp;topology, const VtMatrix4dArray &amp;jointLocalXforms, VtMatrix4dArray *xforms, const GfMatrix4d *rootXform=nullptr)</argsstring>
        <name>UsdSkelConcatJointTransforms</name>
        <param>
          <type>const <ref refid="class_usd_skel_topology" kindref="compound">UsdSkelTopology</ref> &amp;</type>
          <declname>topology</declname>
        </param>
        <param>
          <type>const VtMatrix4dArray &amp;</type>
          <declname>jointLocalXforms</declname>
        </param>
        <param>
          <type>VtMatrix4dArray *</type>
          <declname>xforms</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *</type>
          <declname>rootXform</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000125"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use the function form that takes <ref refid="class_tf_span" kindref="compound">TfSpan</ref> arguments.</para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="203" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___joint_transform_utils_1ga73b5dc5eba2805085c5f9dea2394932f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelConcatJointTransforms</definition>
        <argsstring>(const UsdSkelTopology &amp;topology, const GfMatrix4d *jointLocalXforms, GfMatrix4d *xforms, const GfMatrix4d *rootXform=nullptr)</argsstring>
        <name>UsdSkelConcatJointTransforms</name>
        <param>
          <type>const <ref refid="class_usd_skel_topology" kindref="compound">UsdSkelTopology</ref> &amp;</type>
          <declname>topology</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *</type>
          <declname>jointLocalXforms</declname>
        </param>
        <param>
          <type><ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *</type>
          <declname>xforms</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *</type>
          <declname>rootXform</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000126"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use the form that takes a <ref refid="class_tf_span" kindref="compound">TfSpan</ref> argument.</para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="213" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___joint_transform_utils_1ga10c0e53636ea27e1fabadad6580f3e64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Matrix4</type>
          </param>
        </templateparamlist>
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelComputeJointsExtent</definition>
        <argsstring>(TfSpan&lt; const Matrix4 &gt; joints, GfRange3f *extent, float pad=0.0f, const Matrix4 *rootXform=nullptr)</argsstring>
        <name>UsdSkelComputeJointsExtent</name>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const Matrix4 &gt;</type>
          <declname>joints</declname>
        </param>
        <param>
          <type><ref refid="class_gf_range3f" kindref="compound">GfRange3f</ref> *</type>
          <declname>extent</declname>
        </param>
        <param>
          <type>float</type>
          <declname>pad</declname>
          <defval>0.0f</defval>
        </param>
        <param>
          <type>const Matrix4 *</type>
          <declname>rootXform</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Compute an extent from a set of skel-space joint transform. </para>
        </briefdescription>
        <detaileddescription>
<para>The <computeroutput>rootXform</computeroutput> may also be set to provide an additional root transformation on top of all joints, which is useful for computing extent relative to a different space. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="226" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___joint_transform_utils_1gacce0c0ae59da77585712482062ca03dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelComputeJointsExtent</definition>
        <argsstring>(const VtMatrix4dArray &amp;joints, VtVec3fArray *extent, float pad=0.0f, const GfMatrix4d *rootXform=nullptr)</argsstring>
        <name>UsdSkelComputeJointsExtent</name>
        <param>
          <type>const VtMatrix4dArray &amp;</type>
          <declname>joints</declname>
        </param>
        <param>
          <type>VtVec3fArray *</type>
          <declname>extent</declname>
        </param>
        <param>
          <type>float</type>
          <declname>pad</declname>
          <defval>0.0f</defval>
        </param>
        <param>
          <type>const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *</type>
          <declname>rootXform</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000127"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use form that takes a <ref refid="class_tf_span" kindref="compound">TfSpan</ref>.</para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="237" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___joint_transform_utils_1ga7a266b9bf2d07be497e6da169791ea2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelComputeJointsExtent</definition>
        <argsstring>(const GfMatrix4d *xforms, size_t numXforms, VtVec3fArray *extent, float pad=0.0f, const GfMatrix4d *rootXform=nullptr)</argsstring>
        <name>UsdSkelComputeJointsExtent</name>
        <param>
          <type>const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *</type>
          <declname>xforms</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>numXforms</declname>
        </param>
        <param>
          <type>VtVec3fArray *</type>
          <declname>extent</declname>
        </param>
        <param>
          <type>float</type>
          <declname>pad</declname>
          <defval>0.0f</defval>
        </param>
        <param>
          <type>const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *</type>
          <declname>rootXform</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000128"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use form that takes a <ref refid="class_tf_span" kindref="compound">TfSpan</ref>.</para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="247" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Utilities for working with vectorized joint transforms. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
