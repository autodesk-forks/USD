<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_usd_hydra_generative_procedural_a_p_i" kind="class" language="C++" prot="public">
    <compoundname>UsdHydraGenerativeProceduralAPI</compoundname>
    <basecompoundref refid="class_usd_a_p_i_schema_base" prot="public" virt="non-virtual">UsdAPISchemaBase</basecompoundref>
    <includes refid="generative_procedural_a_p_i_8h" local="no">generativeProceduralAPI.h</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_usd_hydra_generative_procedural_a_p_i_1a3e5fc43aea5aea4908c3ce980fdf8908" prot="public" static="yes" mutable="no">
        <type>const <ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref></type>
        <definition>const UsdSchemaKind schemaKind</definition>
        <argsstring></argsstring>
        <name>schemaKind</name>
        <initializer>= <ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741aa02d2addc2bb693dde0851595872f1aa" kindref="member">UsdSchemaKind::SingleApplyAPI</ref></initializer>
        <briefdescription>
<para>Compile time constant representing what kind of schema this class is. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdHydra/generativeProceduralAPI.h" line="72" column="1" bodyfile="pxr/usd/usdHydra/generativeProceduralAPI.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_usd_hydra_generative_procedural_a_p_i_1aff8b8d83211f127c6c4cba48fb7d3334" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class UsdSchemaRegistry</definition>
        <argsstring></argsstring>
        <name>UsdSchemaRegistry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdHydra/generativeProceduralAPI.h" line="164" column="1" bodyfile="pxr/usd/usdHydra/generativeProceduralAPI.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_usd_hydra_generative_procedural_a_p_i_1ab8afdd01510e08ce56f2f610057f8ba0" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdHydraGenerativeProceduralAPI</definition>
        <argsstring>(const UsdPrim &amp;prim=UsdPrim())</argsstring>
        <name>UsdHydraGenerativeProceduralAPI</name>
        <param>
          <type>const <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> &amp;</type>
          <declname>prim</declname>
          <defval><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref>()</defval>
        </param>
        <briefdescription>
<para>Construct a <ref refid="class_usd_hydra_generative_procedural_a_p_i" kindref="compound">UsdHydraGenerativeProceduralAPI</ref> on <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> <computeroutput>prim</computeroutput> . </para>
        </briefdescription>
        <detaileddescription>
<para>Equivalent to <ref refid="class_usd_hydra_generative_procedural_a_p_i_1ac11ab5a0d25b14dd537faf1ae9a49963" kindref="member">UsdHydraGenerativeProceduralAPI::Get</ref>(prim.GetStage(), prim.GetPath()) for a <emphasis>valid</emphasis> <computeroutput>prim</computeroutput>, but will not immediately throw an error for an invalid <computeroutput>prim</computeroutput> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdHydra/generativeProceduralAPI.h" line="78" column="1" bodyfile="pxr/usd/usdHydra/generativeProceduralAPI.h" bodystart="78" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_hydra_generative_procedural_a_p_i_1a6c4f1a77dfad4491964c06b801ca0d38" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdHydraGenerativeProceduralAPI</definition>
        <argsstring>(const UsdSchemaBase &amp;schemaObj)</argsstring>
        <name>UsdHydraGenerativeProceduralAPI</name>
        <param>
          <type>const <ref refid="class_usd_schema_base" kindref="compound">UsdSchemaBase</ref> &amp;</type>
          <declname>schemaObj</declname>
        </param>
        <briefdescription>
<para>Construct a <ref refid="class_usd_hydra_generative_procedural_a_p_i" kindref="compound">UsdHydraGenerativeProceduralAPI</ref> on the prim held by <computeroutput>schemaObj</computeroutput> . </para>
        </briefdescription>
        <detaileddescription>
<para>Should be preferred over <ref refid="class_usd_hydra_generative_procedural_a_p_i" kindref="compound">UsdHydraGenerativeProceduralAPI</ref>(schemaObj.GetPrim()), as it preserves SchemaBase state. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdHydra/generativeProceduralAPI.h" line="86" column="1" bodyfile="pxr/usd/usdHydra/generativeProceduralAPI.h" bodystart="86" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_hydra_generative_procedural_a_p_i_1a274b57655eb498a1096fe65d53d572c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>USDHYDRA_API</type>
        <definition>virtual USDHYDRA_API ~UsdHydraGenerativeProceduralAPI</definition>
        <argsstring>()</argsstring>
        <name>~UsdHydraGenerativeProceduralAPI</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdHydra/generativeProceduralAPI.h" line="93" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_hydra_generative_procedural_a_p_i_1ab1821a0756d326f240cfba5dc1a67116" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDHYDRA_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDHYDRA_API UsdAttribute GetProceduralTypeAttr</definition>
        <argsstring>() const</argsstring>
        <name>GetProceduralTypeAttr</name>
        <briefdescription>
<para>The registered name of a <ref refid="class_hd_gp_generative_procedural_plugin" kindref="compound">HdGpGenerativeProceduralPlugin</ref> to be executed. </para>
        </briefdescription>
        <detaileddescription>
<para><table rows="4" cols="2"><row>
<entry thead="yes"><para></para>
</entry></row>
<row>
<entry thead="no"><para>Declaration  </para>
</entry><entry thead="no"><para><computeroutput>token primvars:hdGp:proceduralType</computeroutput>   </para>
</entry></row>
<row>
<entry thead="no"><para>C++ Type  </para>
</entry><entry thead="no"><para><ref refid="class_tf_token" kindref="compound">TfToken</ref>   </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="_usd__page__datatypes_1Usd_Datatypes" kindref="member">Usd Type</ref>  </para>
</entry><entry thead="no"><para>SdfValueTypeNames-&gt;Token   </para>
</entry></row>
</table>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdHydra/generativeProceduralAPI.h" line="187" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_hydra_generative_procedural_a_p_i_1a9e5ade0d47c1dec9f7b9fb4a3c33f846" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDHYDRA_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDHYDRA_API UsdAttribute CreateProceduralTypeAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const</argsstring>
        <name>CreateProceduralTypeAttr</name>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>defaultValue</declname>
          <defval><ref refid="class_vt_value" kindref="compound">VtValue</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_usd_hydra_generative_procedural_a_p_i_1ab1821a0756d326f240cfba5dc1a67116" kindref="member">GetProceduralTypeAttr()</ref>, and also <ref refid="_usd__page__common_idioms_1Usd_Create_Or_Get_Property" kindref="member">Create vs Get Property Methods</ref> for when to use Get vs Create. </para>
        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdHydra/generativeProceduralAPI.h" line="195" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_hydra_generative_procedural_a_p_i_1adcb5a921cdd2b33c1501b38343771ca7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDHYDRA_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDHYDRA_API UsdAttribute GetProceduralSystemAttr</definition>
        <argsstring>() const</argsstring>
        <name>GetProceduralSystemAttr</name>
        <briefdescription>
<para>This value should correspond to a configured instance of <ref refid="class_hd_gp_generative_procedural_resolving_scene_index" kindref="compound">HdGpGenerativeProceduralResolvingSceneIndex</ref> which will evaluate the procedural. </para>
        </briefdescription>
        <detaileddescription>
<para>The default value of &quot;hydraGenerativeProcedural&quot; matches the equivalent default of <ref refid="class_hd_gp_generative_procedural_resolving_scene_index" kindref="compound">HdGpGenerativeProceduralResolvingSceneIndex</ref>. Multiple instances of the scene index can be used to determine where within a scene index chain a given procedural will be evaluated.</para>
<para><table rows="4" cols="2"><row>
<entry thead="yes"><para></para>
</entry></row>
<row>
<entry thead="no"><para>Declaration  </para>
</entry><entry thead="no"><para><computeroutput>token proceduralSystem = &quot;hydraGenerativeProcedural&quot;</computeroutput>   </para>
</entry></row>
<row>
<entry thead="no"><para>C++ Type  </para>
</entry><entry thead="no"><para><ref refid="class_tf_token" kindref="compound">TfToken</ref>   </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="_usd__page__datatypes_1Usd_Datatypes" kindref="member">Usd Type</ref>  </para>
</entry><entry thead="no"><para>SdfValueTypeNames-&gt;Token   </para>
</entry></row>
</table>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdHydra/generativeProceduralAPI.h" line="216" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_hydra_generative_procedural_a_p_i_1ad60d4da81aa898d213d9a6db0916ed89" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDHYDRA_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDHYDRA_API UsdAttribute CreateProceduralSystemAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const</argsstring>
        <name>CreateProceduralSystemAttr</name>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>defaultValue</declname>
          <defval><ref refid="class_vt_value" kindref="compound">VtValue</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_usd_hydra_generative_procedural_a_p_i_1adcb5a921cdd2b33c1501b38343771ca7" kindref="member">GetProceduralSystemAttr()</ref>, and also <ref refid="_usd__page__common_idioms_1Usd_Create_Or_Get_Property" kindref="member">Create vs Get Property Methods</ref> for when to use Get vs Create. </para>
        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdHydra/generativeProceduralAPI.h" line="224" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_usd_hydra_generative_procedural_a_p_i_1a7db9924ead5381e43a823ba73bdb07c2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDHYDRA_API const <ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref> &amp;</type>
        <definition>static USDHYDRA_API const TfTokenVector&amp; GetSchemaAttributeNames</definition>
        <argsstring>(bool includeInherited=true)</argsstring>
        <name>GetSchemaAttributeNames</name>
        <param>
          <type>bool</type>
          <declname>includeInherited</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Return a vector of names of all pre-declared attributes for this schema class and all its ancestor classes. </para>
        </briefdescription>
        <detaileddescription>
<para>Does not include attributes that may be authored by custom/extended methods of the schemas involved. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdHydra/generativeProceduralAPI.h" line="100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_hydra_generative_procedural_a_p_i_1ac11ab5a0d25b14dd537faf1ae9a49963" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDHYDRA_API <ref refid="class_usd_hydra_generative_procedural_a_p_i" kindref="compound">UsdHydraGenerativeProceduralAPI</ref></type>
        <definition>static USDHYDRA_API UsdHydraGenerativeProceduralAPI Get</definition>
        <argsstring>(const UsdStagePtr &amp;stage, const SdfPath &amp;path)</argsstring>
        <name>Get</name>
        <param>
          <type>const UsdStagePtr &amp;</type>
          <declname>stage</declname>
        </param>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Return a <ref refid="class_usd_hydra_generative_procedural_a_p_i" kindref="compound">UsdHydraGenerativeProceduralAPI</ref> holding the prim adhering to this schema at <computeroutput>path</computeroutput> on <computeroutput>stage</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>If no prim exists at <computeroutput>path</computeroutput> on <computeroutput>stage</computeroutput>, or if the prim at that path does not adhere to this schema, return an invalid schema object. This is shorthand for the following:</para>
<para><programlisting><codeline><highlight class="normal">UsdHydraGenerativeProceduralAPI(stage-&gt;GetPrimAtPath(path));</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdHydra/generativeProceduralAPI.h" line="113" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_hydra_generative_procedural_a_p_i_1a4f0f584047426e39118f0bcaff22f2f6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDHYDRA_API bool</type>
        <definition>static USDHYDRA_API bool CanApply</definition>
        <argsstring>(const UsdPrim &amp;prim, std::string *whyNot=nullptr)</argsstring>
        <name>CanApply</name>
        <param>
          <type>const <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type>std::string *</type>
          <declname>whyNot</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Returns true if this <bold>single-apply</bold> API schema can be applied to the given <computeroutput>prim</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>If this schema can not be a applied to the prim, this returns false and, if provided, populates <computeroutput>whyNot</computeroutput> with the reason it can not be applied.</para>
<para>Note that if CanApply returns false, that does not necessarily imply that calling Apply will fail. Callers are expected to call CanApply before calling Apply if they want to ensure that it is valid to apply a schema.</para>
<para><simplesect kind="see"><para><ref refid="class_usd_prim_1a42cfbef37f98df2c20c15044c333fe4a" kindref="member">UsdPrim::GetAppliedSchemas()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_usd_prim_1a582b449631f9e073e0e04582c66ce04a" kindref="member">UsdPrim::HasAPI()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_usd_prim_1a2e4b59a7cf7fa0d677270163ea6ad029" kindref="member">UsdPrim::CanApplyAPI()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_usd_prim_1ad3ef9d2cec618a0f43fce5295b5b176e" kindref="member">UsdPrim::ApplyAPI()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_usd_prim_1aab70d4fa20d53a6675734205ded2da22" kindref="member">UsdPrim::RemoveAPI()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdHydra/generativeProceduralAPI.h" line="134" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_hydra_generative_procedural_a_p_i_1a7db70dbce61e4b6a42e939301192c789" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDHYDRA_API <ref refid="class_usd_hydra_generative_procedural_a_p_i" kindref="compound">UsdHydraGenerativeProceduralAPI</ref></type>
        <definition>static USDHYDRA_API UsdHydraGenerativeProceduralAPI Apply</definition>
        <argsstring>(const UsdPrim &amp;prim)</argsstring>
        <name>Apply</name>
        <param>
          <type>const <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> &amp;</type>
          <declname>prim</declname>
        </param>
        <briefdescription>
<para>Applies this <bold>single-apply</bold> API schema to the given <computeroutput>prim</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>This information is stored by adding &quot;HydraGenerativeProceduralAPI&quot; to the token-valued, listOp metadata <emphasis>apiSchemas</emphasis> on the prim.</para>
<para><simplesect kind="return"><para>A valid <ref refid="class_usd_hydra_generative_procedural_a_p_i" kindref="compound">UsdHydraGenerativeProceduralAPI</ref> object is returned upon success. An invalid (or empty) <ref refid="class_usd_hydra_generative_procedural_a_p_i" kindref="compound">UsdHydraGenerativeProceduralAPI</ref> object is returned upon failure. See <ref refid="class_usd_prim_1ad3ef9d2cec618a0f43fce5295b5b176e" kindref="member">UsdPrim::ApplyAPI()</ref> for conditions resulting in failure.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_usd_prim_1a42cfbef37f98df2c20c15044c333fe4a" kindref="member">UsdPrim::GetAppliedSchemas()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_usd_prim_1a582b449631f9e073e0e04582c66ce04a" kindref="member">UsdPrim::HasAPI()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_usd_prim_1a2e4b59a7cf7fa0d677270163ea6ad029" kindref="member">UsdPrim::CanApplyAPI()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_usd_prim_1ad3ef9d2cec618a0f43fce5295b5b176e" kindref="member">UsdPrim::ApplyAPI()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_usd_prim_1aab70d4fa20d53a6675734205ded2da22" kindref="member">UsdPrim::RemoveAPI()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdHydra/generativeProceduralAPI.h" line="153" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_usd_hydra_generative_procedural_a_p_i_1a113835345147dc6018981898cc88edfa" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDHYDRA_API <ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref></type>
        <definition>USDHYDRA_API UsdSchemaKind _GetSchemaKind</definition>
        <argsstring>() const override</argsstring>
        <name>_GetSchemaKind</name>
        <reimplements refid="class_usd_a_p_i_schema_base_1a408aa7d080a2672e88403126cc197095">_GetSchemaKind</reimplements>
        <briefdescription>
<para>Returns the kind of schema this class belongs to. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdHydra/generativeProceduralAPI.h" line="160" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_usd_hydra_generative_procedural_a_p_i_1a78b21e5b7333cb65c12b54fedba22d9d" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDHYDRA_API const <ref refid="class_tf_type" kindref="compound">TfType</ref> &amp;</type>
        <definition>static USDHYDRA_API const TfType&amp; _GetStaticTfType</definition>
        <argsstring>()</argsstring>
        <name>_GetStaticTfType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdHydra/generativeProceduralAPI.h" line="166" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_hydra_generative_procedural_a_p_i_1abbc02364dd87e9f147201cbd8d260d43" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool _IsTypedSchema</definition>
        <argsstring>()</argsstring>
        <name>_IsTypedSchema</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdHydra/generativeProceduralAPI.h" line="168" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_usd_hydra_generative_procedural_a_p_i_1a10fabff05825a4646fd9f5f86510ea08" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDHYDRA_API const <ref refid="class_tf_type" kindref="compound">TfType</ref> &amp;</type>
        <definition>USDHYDRA_API const TfType&amp; _GetTfType</definition>
        <argsstring>() const override</argsstring>
        <name>_GetTfType</name>
        <reimplements refid="class_usd_a_p_i_schema_base_1a6f7a3688b0129a59c6e70e925d7ac732">_GetTfType</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdHydra/generativeProceduralAPI.h" line="172" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This API extends and configures the core <ref refid="class_usd_proc_generative_procedural" kindref="compound">UsdProcGenerativeProcedural</ref> schema defined within usdProc for use with hydra generative procedurals as defined within hdGp. </para>
    </briefdescription>
    <detaileddescription>
<para>For any described attribute <emphasis>Fallback</emphasis> <emphasis>Value</emphasis> or <emphasis>Allowed</emphasis> <emphasis>Values</emphasis> below that are text/tokens, the actual token is published and defined in <ref refid="usd_2usd_hydra_2tokens_8h_1a7dc7222a0a4ebfdf11d3ca04b6d5fa61" kindref="member">UsdHydraTokens</ref>. So to set an attribute to the value &quot;rightHanded&quot;, use UsdHydraTokens-&gt;rightHanded as the value. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="6584">
        <label>UsdHydraGenerativeProceduralAPI</label>
        <link refid="class_usd_hydra_generative_procedural_a_p_i"/>
        <childnode refid="6585" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6586">
        <label>UsdSchemaBase</label>
        <link refid="class_usd_schema_base"/>
      </node>
      <node id="6585">
        <label>UsdAPISchemaBase</label>
        <link refid="class_usd_a_p_i_schema_base"/>
        <childnode refid="6586" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6587">
        <label>UsdHydraGenerativeProceduralAPI</label>
        <link refid="class_usd_hydra_generative_procedural_a_p_i"/>
        <childnode refid="6588" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6589">
        <label>UsdSchemaBase</label>
        <link refid="class_usd_schema_base"/>
      </node>
      <node id="6588">
        <label>UsdAPISchemaBase</label>
        <link refid="class_usd_a_p_i_schema_base"/>
        <childnode refid="6589" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/usd/usdHydra/generativeProceduralAPI.h" line="67" column="1" bodyfile="pxr/usd/usdHydra/generativeProceduralAPI.h" bodystart="66" bodyend="237"/>
    <listofallmembers>
      <member refid="class_usd_schema_base_1ad99ec8284868478b50e8fc3475880dab" prot="protected" virt="non-virtual"><scope>UsdHydraGenerativeProceduralAPI</scope><name>_CreateAttr</name></member>
      <member refid="class_usd_a_p_i_schema_base_1aa27e613f624c34d85fc17cbf58956245" prot="protected" virt="non-virtual"><scope>UsdHydraGenerativeProceduralAPI</scope><name>_GetInstanceName</name></member>
      <member refid="class_usd_a_p_i_schema_base_1aaf34e3836e442b3a04d517febdb69cc3" prot="protected" virt="non-virtual"><scope>UsdHydraGenerativeProceduralAPI</scope><name>_GetMultipleApplyInstanceNames</name></member>
      <member refid="class_usd_hydra_generative_procedural_a_p_i_1a113835345147dc6018981898cc88edfa" prot="protected" virt="virtual"><scope>UsdHydraGenerativeProceduralAPI</scope><name>_GetSchemaKind</name></member>
      <member refid="class_usd_schema_base_1a6c51fb3251d5fde5ffa9fe7a998ce970" prot="protected" virt="virtual"><scope>UsdHydraGenerativeProceduralAPI</scope><name>_GetSchemaType</name></member>
      <member refid="class_usd_hydra_generative_procedural_a_p_i_1a78b21e5b7333cb65c12b54fedba22d9d" prot="private" virt="non-virtual"><scope>UsdHydraGenerativeProceduralAPI</scope><name>_GetStaticTfType</name></member>
      <member refid="class_usd_hydra_generative_procedural_a_p_i_1a10fabff05825a4646fd9f5f86510ea08" prot="private" virt="virtual"><scope>UsdHydraGenerativeProceduralAPI</scope><name>_GetTfType</name></member>
      <member refid="class_usd_schema_base_1aa29ea4c951d8debfd8085a28c6aa80ca" prot="protected" virt="non-virtual"><scope>UsdHydraGenerativeProceduralAPI</scope><name>_GetType</name></member>
      <member refid="class_usd_a_p_i_schema_base_1ad91204cc9fb92f0306372e074052190f" prot="protected" virt="virtual"><scope>UsdHydraGenerativeProceduralAPI</scope><name>_IsCompatible</name></member>
      <member refid="class_usd_hydra_generative_procedural_a_p_i_1abbc02364dd87e9f147201cbd8d260d43" prot="private" virt="non-virtual"><scope>UsdHydraGenerativeProceduralAPI</scope><name>_IsTypedSchema</name></member>
      <member refid="class_usd_hydra_generative_procedural_a_p_i_1a7db70dbce61e4b6a42e939301192c789" prot="public" virt="non-virtual"><scope>UsdHydraGenerativeProceduralAPI</scope><name>Apply</name></member>
      <member refid="class_usd_hydra_generative_procedural_a_p_i_1a4f0f584047426e39118f0bcaff22f2f6" prot="public" virt="non-virtual"><scope>UsdHydraGenerativeProceduralAPI</scope><name>CanApply</name></member>
      <member refid="class_usd_hydra_generative_procedural_a_p_i_1ad60d4da81aa898d213d9a6db0916ed89" prot="public" virt="non-virtual"><scope>UsdHydraGenerativeProceduralAPI</scope><name>CreateProceduralSystemAttr</name></member>
      <member refid="class_usd_hydra_generative_procedural_a_p_i_1a9e5ade0d47c1dec9f7b9fb4a3c33f846" prot="public" virt="non-virtual"><scope>UsdHydraGenerativeProceduralAPI</scope><name>CreateProceduralTypeAttr</name></member>
      <member refid="class_usd_hydra_generative_procedural_a_p_i_1ac11ab5a0d25b14dd537faf1ae9a49963" prot="public" virt="non-virtual"><scope>UsdHydraGenerativeProceduralAPI</scope><name>Get</name></member>
      <member refid="class_usd_schema_base_1a936bfb1e341cc81184c64af44763c433" prot="public" virt="non-virtual"><scope>UsdHydraGenerativeProceduralAPI</scope><name>GetPath</name></member>
      <member refid="class_usd_schema_base_1a4ba10e023e7f3f3c93131bc7fc3146b7" prot="public" virt="non-virtual"><scope>UsdHydraGenerativeProceduralAPI</scope><name>GetPrim</name></member>
      <member refid="class_usd_hydra_generative_procedural_a_p_i_1adcb5a921cdd2b33c1501b38343771ca7" prot="public" virt="non-virtual"><scope>UsdHydraGenerativeProceduralAPI</scope><name>GetProceduralSystemAttr</name></member>
      <member refid="class_usd_hydra_generative_procedural_a_p_i_1ab1821a0756d326f240cfba5dc1a67116" prot="public" virt="non-virtual"><scope>UsdHydraGenerativeProceduralAPI</scope><name>GetProceduralTypeAttr</name></member>
      <member refid="class_usd_hydra_generative_procedural_a_p_i_1a7db9924ead5381e43a823ba73bdb07c2" prot="public" virt="non-virtual"><scope>UsdHydraGenerativeProceduralAPI</scope><name>GetSchemaAttributeNames</name></member>
      <member refid="class_usd_schema_base_1a030d03e2a9839d9c3da0fbca8c3722d4" prot="public" virt="non-virtual"><scope>UsdHydraGenerativeProceduralAPI</scope><name>GetSchemaClassPrimDefinition</name></member>
      <member refid="class_usd_schema_base_1aeac68c5514faebb20c5ae3cb930170de" prot="public" virt="non-virtual"><scope>UsdHydraGenerativeProceduralAPI</scope><name>GetSchemaKind</name></member>
      <member refid="class_usd_schema_base_1ad658b6730d4246ee1f903ce4ce18fdfe" prot="public" virt="non-virtual"><scope>UsdHydraGenerativeProceduralAPI</scope><name>IsAPISchema</name></member>
      <member refid="class_usd_schema_base_1a68e867971cc992c5b03e73725c405c05" prot="public" virt="non-virtual"><scope>UsdHydraGenerativeProceduralAPI</scope><name>IsAppliedAPISchema</name></member>
      <member refid="class_usd_schema_base_1ae2c90cefba1b2e09dc117a7d972009cb" prot="public" virt="non-virtual"><scope>UsdHydraGenerativeProceduralAPI</scope><name>IsConcrete</name></member>
      <member refid="class_usd_schema_base_1af752510dea0c7106aa89832e60dfa3d5" prot="public" virt="non-virtual"><scope>UsdHydraGenerativeProceduralAPI</scope><name>IsMultipleApplyAPISchema</name></member>
      <member refid="class_usd_schema_base_1afa15659f4fa280e4c0772173d7471920" prot="public" virt="non-virtual"><scope>UsdHydraGenerativeProceduralAPI</scope><name>IsTyped</name></member>
      <member refid="class_usd_schema_base_1a586531d84339318108c817f91367e626" prot="public" virt="non-virtual"><scope>UsdHydraGenerativeProceduralAPI</scope><name>operator bool</name></member>
      <member refid="class_usd_hydra_generative_procedural_a_p_i_1a3e5fc43aea5aea4908c3ce980fdf8908" prot="public" virt="non-virtual"><scope>UsdHydraGenerativeProceduralAPI</scope><name>schemaKind</name></member>
      <member refid="class_usd_a_p_i_schema_base_1a693760be7357b341ca92cae42af89a2a" prot="public" virt="non-virtual"><scope>UsdHydraGenerativeProceduralAPI</scope><name>UsdAPISchemaBase</name></member>
      <member refid="class_usd_a_p_i_schema_base_1aa02eade67d6ca4c0d58fe3b7e5a4cc9a" prot="public" virt="non-virtual"><scope>UsdHydraGenerativeProceduralAPI</scope><name>UsdAPISchemaBase</name></member>
      <member refid="class_usd_a_p_i_schema_base_1ae1aaced053a4cc13c21b444b27130c75" prot="protected" virt="non-virtual"><scope>UsdHydraGenerativeProceduralAPI</scope><name>UsdAPISchemaBase</name></member>
      <member refid="class_usd_a_p_i_schema_base_1ac9df31df96c3346f55ba31be7472f106" prot="protected" virt="non-virtual"><scope>UsdHydraGenerativeProceduralAPI</scope><name>UsdAPISchemaBase</name></member>
      <member refid="class_usd_hydra_generative_procedural_a_p_i_1ab8afdd01510e08ce56f2f610057f8ba0" prot="public" virt="non-virtual"><scope>UsdHydraGenerativeProceduralAPI</scope><name>UsdHydraGenerativeProceduralAPI</name></member>
      <member refid="class_usd_hydra_generative_procedural_a_p_i_1a6c4f1a77dfad4491964c06b801ca0d38" prot="public" virt="non-virtual"><scope>UsdHydraGenerativeProceduralAPI</scope><name>UsdHydraGenerativeProceduralAPI</name></member>
      <member refid="class_usd_schema_base_1a32e0a9b0465ecf201fb501753baa8587" prot="public" virt="non-virtual"><scope>UsdHydraGenerativeProceduralAPI</scope><name>UsdSchemaBase</name></member>
      <member refid="class_usd_schema_base_1a73921308189043c86867d6bd9012b4af" prot="public" virt="non-virtual"><scope>UsdHydraGenerativeProceduralAPI</scope><name>UsdSchemaBase</name></member>
      <member refid="class_usd_hydra_generative_procedural_a_p_i_1aff8b8d83211f127c6c4cba48fb7d3334" prot="private" virt="non-virtual"><scope>UsdHydraGenerativeProceduralAPI</scope><name>UsdSchemaRegistry</name></member>
      <member refid="class_usd_a_p_i_schema_base_1a426f2a53141cc3eefa43fce755f83108" prot="public" virt="pure-virtual"><scope>UsdHydraGenerativeProceduralAPI</scope><name>~UsdAPISchemaBase</name></member>
      <member refid="class_usd_hydra_generative_procedural_a_p_i_1a274b57655eb498a1096fe65d53d572c2" prot="public" virt="virtual"><scope>UsdHydraGenerativeProceduralAPI</scope><name>~UsdHydraGenerativeProceduralAPI</name></member>
      <member refid="class_usd_schema_base_1a3e97b9a7311478da9f2d168bea29560e" prot="public" virt="virtual"><scope>UsdHydraGenerativeProceduralAPI</scope><name>~UsdSchemaBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
