<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hd_st_asset_uv_subtexture_identifier" kind="class" language="C++" prot="public" final="yes">
    <compoundname>HdStAssetUvSubtextureIdentifier</compoundname>
    <basecompoundref refid="class_hd_st_subtexture_identifier" prot="public" virt="non-virtual">HdStSubtextureIdentifier</basecompoundref>
    <includes refid="subtexture_identifier_8h" local="no">subtextureIdentifier.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hd_st_asset_uv_subtexture_identifier_1a2c04c926bc60a2748318ffbd66810b9c" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool _flipVertically</definition>
        <argsstring></argsstring>
        <name>_flipVertically</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/subtextureIdentifier.h" line="143" column="1" bodyfile="pxr/imaging/hdSt/subtextureIdentifier.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_asset_uv_subtexture_identifier_1ac09ebb8f65740695b52c8c369b3c42de" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool _premultiplyAlpha</definition>
        <argsstring></argsstring>
        <name>_premultiplyAlpha</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/subtextureIdentifier.h" line="144" column="1" bodyfile="pxr/imaging/hdSt/subtextureIdentifier.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_asset_uv_subtexture_identifier_1a06420e4c6e6b7f5be261c51abe0a59a3" prot="private" static="no" mutable="no">
        <type><ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>TfToken _sourceColorSpace</definition>
        <argsstring></argsstring>
        <name>_sourceColorSpace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/subtextureIdentifier.h" line="145" column="1" bodyfile="pxr/imaging/hdSt/subtextureIdentifier.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hd_st_asset_uv_subtexture_identifier_1ac2c6ef033a1ed3eed5e6d60de3a19acf" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type>HDST_API</type>
        <definition>HDST_API HdStAssetUvSubtextureIdentifier</definition>
        <argsstring>(bool flipVertically, bool premultiplyAlpha, const TfToken &amp;sourceColorSpace)</argsstring>
        <name>HdStAssetUvSubtextureIdentifier</name>
        <param>
          <type>bool</type>
          <declname>flipVertically</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>premultiplyAlpha</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>sourceColorSpace</declname>
        </param>
        <briefdescription>
<para>C&apos;tor takes bool whether flipping vertically, whether to pre-multiply by alpha, and the texture&apos;s source color space. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/subtextureIdentifier.h" line="119" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_asset_uv_subtexture_identifier_1a1f28e7cc26dd1d7edd81289379c3c599" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HDST_API std::unique_ptr&lt; <ref refid="class_hd_st_subtexture_identifier" kindref="compound">HdStSubtextureIdentifier</ref> &gt;</type>
        <definition>HDST_API std::unique_ptr&lt;HdStSubtextureIdentifier&gt; Clone</definition>
        <argsstring>() const override</argsstring>
        <name>Clone</name>
        <reimplements refid="class_hd_st_subtexture_identifier_1af49544adeb8be4e8841163d358aa6c43">Clone</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/subtextureIdentifier.h" line="124" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_asset_uv_subtexture_identifier_1a8bfd6ff13fae56060b80a63db6c9d53e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>HDST_API bool</type>
        <definition>HDST_API bool GetFlipVertically</definition>
        <argsstring>() const</argsstring>
        <name>GetFlipVertically</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/subtextureIdentifier.h" line="127" column="1" bodyfile="pxr/imaging/hdSt/subtextureIdentifier.h" bodystart="127" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_asset_uv_subtexture_identifier_1a79427ce61526882f10cd354ced6ff2df" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>HDST_API bool</type>
        <definition>HDST_API bool GetPremultiplyAlpha</definition>
        <argsstring>() const</argsstring>
        <name>GetPremultiplyAlpha</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/subtextureIdentifier.h" line="130" column="1" bodyfile="pxr/imaging/hdSt/subtextureIdentifier.h" bodystart="130" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_asset_uv_subtexture_identifier_1ac3a10cb466023a00c874c3ad6712843e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>HDST_API <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>HDST_API TfToken GetSourceColorSpace</definition>
        <argsstring>() const</argsstring>
        <name>GetSourceColorSpace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/subtextureIdentifier.h" line="133" column="1" bodyfile="pxr/imaging/hdSt/subtextureIdentifier.h" bodystart="133" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_asset_uv_subtexture_identifier_1a520e17e0205cbe285393eee4842c47d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API</type>
        <definition>HDST_API ~HdStAssetUvSubtextureIdentifier</definition>
        <argsstring>() override</argsstring>
        <name>~HdStAssetUvSubtextureIdentifier</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/subtextureIdentifier.h" line="136" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_hd_st_asset_uv_subtexture_identifier_1a551e0c2533c544abb36bd29707937524" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HDST_API ID</type>
        <definition>HDST_API ID _Hash</definition>
        <argsstring>() const override</argsstring>
        <name>_Hash</name>
        <reimplements refid="class_hd_st_subtexture_identifier_1a8571a114981ab1f6ac98a5ff79842e39">_Hash</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/subtextureIdentifier.h" line="140" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Specifies whether a UV texture should be loaded flipped vertically, whether it should be loaded with pre-multiplied alpha values, and the color space in which the texture is encoded. </para>
    </briefdescription>
    <detaileddescription>
<para>The former functionality allows the texture system to support both the legacy HwUvTexture_1 (flipVertically = true) and UsdUvTexture (flipVertically = false) which have opposite conventions for the vertical orientation. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3049">
        <label>HdStAssetUvSubtextureIdentifier</label>
        <link refid="class_hd_st_asset_uv_subtexture_identifier"/>
        <childnode refid="3050" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3050">
        <label>HdStSubtextureIdentifier</label>
        <link refid="class_hd_st_subtexture_identifier"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3051">
        <label>HdStAssetUvSubtextureIdentifier</label>
        <link refid="class_hd_st_asset_uv_subtexture_identifier"/>
        <childnode refid="3052" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3052">
        <label>HdStSubtextureIdentifier</label>
        <link refid="class_hd_st_subtexture_identifier"/>
      </node>
    </collaborationgraph>
    <location file="pxr/imaging/hdSt/subtextureIdentifier.h" line="114" column="1" bodyfile="pxr/imaging/hdSt/subtextureIdentifier.h" bodystart="112" bodyend="146"/>
    <listofallmembers>
      <member refid="class_hd_st_asset_uv_subtexture_identifier_1a2c04c926bc60a2748318ffbd66810b9c" prot="private" virt="non-virtual"><scope>HdStAssetUvSubtextureIdentifier</scope><name>_flipVertically</name></member>
      <member refid="class_hd_st_asset_uv_subtexture_identifier_1a551e0c2533c544abb36bd29707937524" prot="protected" virt="virtual"><scope>HdStAssetUvSubtextureIdentifier</scope><name>_Hash</name></member>
      <member refid="class_hd_st_asset_uv_subtexture_identifier_1ac09ebb8f65740695b52c8c369b3c42de" prot="private" virt="non-virtual"><scope>HdStAssetUvSubtextureIdentifier</scope><name>_premultiplyAlpha</name></member>
      <member refid="class_hd_st_asset_uv_subtexture_identifier_1a06420e4c6e6b7f5be261c51abe0a59a3" prot="private" virt="non-virtual"><scope>HdStAssetUvSubtextureIdentifier</scope><name>_sourceColorSpace</name></member>
      <member refid="class_hd_st_asset_uv_subtexture_identifier_1a1f28e7cc26dd1d7edd81289379c3c599" prot="public" virt="virtual"><scope>HdStAssetUvSubtextureIdentifier</scope><name>Clone</name></member>
      <member refid="class_hd_st_asset_uv_subtexture_identifier_1a8bfd6ff13fae56060b80a63db6c9d53e" prot="public" virt="non-virtual"><scope>HdStAssetUvSubtextureIdentifier</scope><name>GetFlipVertically</name></member>
      <member refid="class_hd_st_asset_uv_subtexture_identifier_1a79427ce61526882f10cd354ced6ff2df" prot="public" virt="non-virtual"><scope>HdStAssetUvSubtextureIdentifier</scope><name>GetPremultiplyAlpha</name></member>
      <member refid="class_hd_st_asset_uv_subtexture_identifier_1ac3a10cb466023a00c874c3ad6712843e" prot="public" virt="non-virtual"><scope>HdStAssetUvSubtextureIdentifier</scope><name>GetSourceColorSpace</name></member>
      <member refid="class_hd_st_asset_uv_subtexture_identifier_1ac2c6ef033a1ed3eed5e6d60de3a19acf" prot="public" virt="non-virtual"><scope>HdStAssetUvSubtextureIdentifier</scope><name>HdStAssetUvSubtextureIdentifier</name></member>
      <member refid="class_hd_st_subtexture_identifier_1ae273d2202bff0b49a83c92326b020543" prot="public" virt="non-virtual"><scope>HdStAssetUvSubtextureIdentifier</scope><name>ID</name></member>
      <member refid="class_hd_st_asset_uv_subtexture_identifier_1a520e17e0205cbe285393eee4842c47d7" prot="public" virt="non-virtual"><scope>HdStAssetUvSubtextureIdentifier</scope><name>~HdStAssetUvSubtextureIdentifier</name></member>
      <member refid="class_hd_st_subtexture_identifier_1a46c2c509ec06e5459e5191751475f122" prot="public" virt="virtual"><scope>HdStAssetUvSubtextureIdentifier</scope><name>~HdStSubtextureIdentifier</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
