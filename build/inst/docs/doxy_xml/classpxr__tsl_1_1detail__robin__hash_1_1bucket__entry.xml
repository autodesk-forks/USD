<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry" kind="class" language="C++" prot="public">
    <compoundname>pxr_tsl::detail_robin_hash::bucket_entry</compoundname>
    <basecompoundref refid="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry__hash" prot="public" virt="non-virtual">pxr_tsl::detail_robin_hash::bucket_entry_hash&lt; StoreHash &gt;</basecompoundref>
    <includes refid="robin__hash_8h" local="no">robin_hash.h</includes>
    <templateparamlist>
      <param>
        <type>typename ValueType</type>
      </param>
      <param>
        <type>bool</type>
        <declname>StoreHash</declname>
        <defname>StoreHash</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1a0f08221d36e9a628236111be3c9eaa1a" prot="private" static="no">
        <type><ref refid="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry__hash" kindref="compound">bucket_entry_hash</ref>&lt; StoreHash &gt;</type>
        <definition>using bucket_hash =  bucket_entry_hash&lt;StoreHash&gt;</definition>
        <argsstring></argsstring>
        <name>bucket_hash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="173" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_hash.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1aafe3c02438cdc31ec1f9d85f24f1d8c2" prot="private" static="no">
        <type>typename std::aligned_storage&lt; sizeof(value_type), alignof(value_type)&gt;::type</type>
        <definition>using storage =  typename std::aligned_storage&lt;sizeof(value_type), alignof(value_type)&gt;::type</definition>
        <argsstring></argsstring>
        <name>storage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="325" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_hash.h" bodystart="326" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1a52422eb0a58c3a0dbe6eadf2727e78f8" prot="public" static="no">
        <type>ValueType</type>
        <definition>using value_type =  ValueType</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="176" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_hash.h" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1a6bc9c1fb341e02884b4ec0ec38266d91" prot="public" static="no">
        <type>std::int16_t</type>
        <definition>using distance_type =  std::int16_t</definition>
        <argsstring></argsstring>
        <name>distance_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="177" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_hash.h" bodystart="177" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1ac12b80e0d34704253b52f47b3caba2cb" prot="public" static="yes" mutable="no">
        <type>const distance_type</type>
        <definition>const distance_type EMPTY_MARKER_DIST_FROM_IDEAL_BUCKET</definition>
        <argsstring></argsstring>
        <name>EMPTY_MARKER_DIST_FROM_IDEAL_BUCKET</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="317" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_hash.h" bodystart="317" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1a0274d551ea4dd94a60404101d9af93ee" prot="public" static="yes" mutable="no">
        <type>const distance_type</type>
        <definition>const distance_type DIST_FROM_IDEAL_BUCKET_LIMIT</definition>
        <argsstring></argsstring>
        <name>DIST_FROM_IDEAL_BUCKET_LIMIT</name>
        <initializer>= 4096</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="318" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_hash.h" bodystart="318" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1a838d4e53bade350f65c9ba8df73c9de6" prot="private" static="no" mutable="no">
        <type>distance_type</type>
        <definition>distance_type m_dist_from_ideal_bucket</definition>
        <argsstring></argsstring>
        <name>m_dist_from_ideal_bucket</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="328" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_hash.h" bodystart="328" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1a0daa04f9faa392a37e02a65803a6bda2" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool m_last_bucket</definition>
        <argsstring></argsstring>
        <name>m_last_bucket</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="329" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_hash.h" bodystart="329" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1a343917b8951b8d51ba619560aadcb155" prot="private" static="no" mutable="no">
        <type>storage</type>
        <definition>storage m_value</definition>
        <argsstring></argsstring>
        <name>m_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="330" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_hash.h" bodystart="330" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1a57c91c7f852c8d8ecc0ce166149c74a0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>bucket_entry</definition>
        <argsstring>() noexcept</argsstring>
        <name>bucket_entry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="179" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_hash.h" bodystart="179" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1a71d3acd23de86c4923cdd3966ee02038" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>bucket_entry</definition>
        <argsstring>(bool last_bucket) noexcept</argsstring>
        <name>bucket_entry</name>
        <param>
          <type>bool</type>
          <declname>last_bucket</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="186" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_hash.h" bodystart="186" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1ae54484f41a73034407511307973f3f58" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>bucket_entry</definition>
        <argsstring>(const bucket_entry &amp;other) noexcept(std::is_nothrow_copy_constructible&lt; value_type &gt;::value)</argsstring>
        <name>bucket_entry</name>
        <param>
          <type>const <ref refid="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry" kindref="compound">bucket_entry</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="193" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_hash.h" bodystart="193" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1a9eb8944ce0161dc255f1676a5312782e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>bucket_entry</definition>
        <argsstring>(bucket_entry &amp;&amp;other) noexcept(std::is_nothrow_move_constructible&lt; value_type &gt;::value)</argsstring>
        <name>bucket_entry</name>
        <param>
          <type><ref refid="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry" kindref="compound">bucket_entry</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Never really used, but still necessary as we must call resize on an empty <computeroutput>std::vector&lt;<ref refid="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry" kindref="compound">bucket_entry</ref>&gt;</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>and we need to support move-only types. See <ref refid="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash" kindref="compound">robin_hash</ref> constructor for details. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="210" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_hash.h" bodystart="210" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1a2ec8e62d96e50046de6ac4688750e71e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry" kindref="compound">bucket_entry</ref> &amp;</type>
        <definition>bucket_entry&amp; operator=</definition>
        <argsstring>(const bucket_entry &amp;other) noexcept(std::is_nothrow_copy_constructible&lt; value_type &gt;::value)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry" kindref="compound">bucket_entry</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="222" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_hash.h" bodystart="222" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1a36d8f24c72cdef07a7650a8177132735" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry" kindref="compound">bucket_entry</ref> &amp;</type>
        <definition>bucket_entry&amp; operator=</definition>
        <argsstring>(bucket_entry &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry" kindref="compound">bucket_entry</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="240" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1a47e4c3edd080a962cfc2758bb1eac9b0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>~bucket_entry</definition>
        <argsstring>() noexcept</argsstring>
        <name>~bucket_entry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="242" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_hash.h" bodystart="242" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1a03bfacfaaba9195e4498375659f43531" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void clear</definition>
        <argsstring>() noexcept</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="244" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_hash.h" bodystart="244" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1a3f6fc5de06a318920d84f3c3742db07f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool empty</definition>
        <argsstring>() const noexcept</argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="251" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_hash.h" bodystart="251" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1abb97c615799c16c51ad673cb83e9a407" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>value_type &amp;</type>
        <definition>value_type&amp; value</definition>
        <argsstring>() noexcept</argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="255" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_hash.h" bodystart="255" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1a7de167284b5cd33906a5e4e5f85ed7f7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const value_type &amp;</type>
        <definition>const value_type&amp; value</definition>
        <argsstring>() const noexcept</argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="260" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_hash.h" bodystart="260" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1a8cd89d88959f6bcd47dcd2cc152bd4cd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>distance_type</type>
        <definition>distance_type dist_from_ideal_bucket</definition>
        <argsstring>() const noexcept</argsstring>
        <name>dist_from_ideal_bucket</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="265" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_hash.h" bodystart="265" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1a98baae7b7b3a1fabc6817b89a6533dd3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool last_bucket</definition>
        <argsstring>() const noexcept</argsstring>
        <name>last_bucket</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="269" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_hash.h" bodystart="269" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1ab71915d62a4759368ef22fe3503f067a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void set_as_last_bucket</definition>
        <argsstring>() noexcept</argsstring>
        <name>set_as_last_bucket</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="271" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_hash.h" bodystart="271" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1a061a5b10b4fd9ed7bd0a3dff37c8e365" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void set_value_of_empty_bucket</definition>
        <argsstring>(distance_type dist_from_ideal_bucket, truncated_hash_type hash, Args &amp;&amp;... value_type_args)</argsstring>
        <name>set_value_of_empty_bucket</name>
        <param>
          <type>distance_type</type>
          <declname>dist_from_ideal_bucket</declname>
        </param>
        <param>
          <type>truncated_hash_type</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>value_type_args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="274" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_hash.h" bodystart="274" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1a4c1a5c787b54fe7709201eaad57a84f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void swap_with_value_in_bucket</definition>
        <argsstring>(distance_type &amp;dist_from_ideal_bucket, truncated_hash_type &amp;hash, value_type &amp;value)</argsstring>
        <name>swap_with_value_in_bucket</name>
        <param>
          <type>distance_type &amp;</type>
          <declname>dist_from_ideal_bucket</declname>
        </param>
        <param>
          <type>truncated_hash_type &amp;</type>
          <declname>hash</declname>
        </param>
        <param>
          <type>value_type &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="288" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_hash.h" bodystart="288" bodyend="304"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1afbf897ecf0135d5511c68f22d83d4242" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>truncated_hash_type</type>
        <definition>static truncated_hash_type truncate_hash</definition>
        <argsstring>(std::size_t hash) noexcept</argsstring>
        <name>truncate_hash</name>
        <param>
          <type>std::size_t</type>
          <declname>hash</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="306" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_hash.h" bodystart="306" bodyend="308"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1ae182613c8d32b368e5e7fd61484003d0" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void destroy_value</definition>
        <argsstring>() noexcept</argsstring>
        <name>destroy_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="311" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_hash.h" bodystart="311" bodyend="314"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Each bucket entry has: </para>
    </briefdescription>
    <detaileddescription>
<para><itemizedlist>
<listitem><para>A value of type <computeroutput>ValueType</computeroutput>.</para>
</listitem><listitem><para>An integer to store how far the value of the bucket, if any, is from its ideal bucket (ex: if the current bucket 5 has the value &apos;foo&apos; and <lsquo/>hash(&apos;foo<rsquo/>) % nb_buckets<computeroutput>== 3,</computeroutput>dist_from_ideal_bucket()` will return 2 as the current value of the bucket is two buckets away from its ideal bucket) If there is no value in the bucket (i.e. <computeroutput>empty()</computeroutput> is true) <computeroutput>dist_from_ideal_bucket()</computeroutput> will be &lt; 0.</para>
</listitem><listitem><para>A marker which tells us if the bucket is the last bucket of the bucket array (useful for the iterator of the hash table).</para>
</listitem><listitem><para>If <computeroutput>StoreHash</computeroutput> is true, 32 bits of the hash of the value, if any, are also stored in the bucket. If the size of the hash is more than 32 bits, it is truncated. We don&apos;t store the full hash as storing the hash is a potential opportunity to use the unused space due to the alignment of the <ref refid="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry" kindref="compound">bucket_entry</ref> structure. We can thus potentially store the hash without any extra space (which would not be possible with 64 bits of the hash). </para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="835">
        <label>bucket_entry&lt; ValueType, StoreHash &gt;</label>
        <link refid="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry"/>
        <childnode refid="836" relation="public-inheritance">
        </childnode>
      </node>
      <node id="836">
        <label>bucket_entry_hash&lt; StoreHash &gt;</label>
        <link refid="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry__hash"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="837">
        <label>bucket_entry&lt; ValueType, StoreHash &gt;</label>
        <link refid="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry"/>
        <childnode refid="838" relation="public-inheritance">
        </childnode>
      </node>
      <node id="838">
        <label>bucket_entry_hash&lt; StoreHash &gt;</label>
        <link refid="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry__hash"/>
      </node>
    </collaborationgraph>
    <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="172" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_hash.h" bodystart="172" bodyend="331"/>
    <listofallmembers>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1a57c91c7f852c8d8ecc0ce166149c74a0" prot="public" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::bucket_entry</scope><name>bucket_entry</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1a71d3acd23de86c4923cdd3966ee02038" prot="public" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::bucket_entry</scope><name>bucket_entry</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1ae54484f41a73034407511307973f3f58" prot="public" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::bucket_entry</scope><name>bucket_entry</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1a9eb8944ce0161dc255f1676a5312782e" prot="public" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::bucket_entry</scope><name>bucket_entry</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1a0f08221d36e9a628236111be3c9eaa1a" prot="private" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::bucket_entry</scope><name>bucket_hash</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry__hash_1aa44eb345dca64e1e02e6883a6ebd0b1b" prot="public" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::bucket_entry</scope><name>bucket_hash_equal</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1a03bfacfaaba9195e4498375659f43531" prot="public" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::bucket_entry</scope><name>clear</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1ae182613c8d32b368e5e7fd61484003d0" prot="private" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::bucket_entry</scope><name>destroy_value</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1a8cd89d88959f6bcd47dcd2cc152bd4cd" prot="public" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::bucket_entry</scope><name>dist_from_ideal_bucket</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1a0274d551ea4dd94a60404101d9af93ee" prot="public" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::bucket_entry</scope><name>DIST_FROM_IDEAL_BUCKET_LIMIT</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1a6bc9c1fb341e02884b4ec0ec38266d91" prot="public" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::bucket_entry</scope><name>distance_type</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1a3f6fc5de06a318920d84f3c3742db07f" prot="public" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::bucket_entry</scope><name>empty</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1ac12b80e0d34704253b52f47b3caba2cb" prot="public" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::bucket_entry</scope><name>EMPTY_MARKER_DIST_FROM_IDEAL_BUCKET</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1a98baae7b7b3a1fabc6817b89a6533dd3" prot="public" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::bucket_entry</scope><name>last_bucket</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1a838d4e53bade350f65c9ba8df73c9de6" prot="private" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::bucket_entry</scope><name>m_dist_from_ideal_bucket</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1a0daa04f9faa392a37e02a65803a6bda2" prot="private" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::bucket_entry</scope><name>m_last_bucket</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1a343917b8951b8d51ba619560aadcb155" prot="private" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::bucket_entry</scope><name>m_value</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1a2ec8e62d96e50046de6ac4688750e71e" prot="public" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::bucket_entry</scope><name>operator=</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1a36d8f24c72cdef07a7650a8177132735" prot="public" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::bucket_entry</scope><name>operator=</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1ab71915d62a4759368ef22fe3503f067a" prot="public" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::bucket_entry</scope><name>set_as_last_bucket</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry__hash_1a5d5d9300c09c6819790d279521e19acf" prot="protected" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::bucket_entry</scope><name>set_hash</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1a061a5b10b4fd9ed7bd0a3dff37c8e365" prot="public" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::bucket_entry</scope><name>set_value_of_empty_bucket</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1aafe3c02438cdc31ec1f9d85f24f1d8c2" prot="private" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::bucket_entry</scope><name>storage</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1a4c1a5c787b54fe7709201eaad57a84f6" prot="public" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::bucket_entry</scope><name>swap_with_value_in_bucket</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1afbf897ecf0135d5511c68f22d83d4242" prot="public" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::bucket_entry</scope><name>truncate_hash</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry__hash_1a5ab49c047b9c2456dd31e16987f47b2d" prot="public" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::bucket_entry</scope><name>truncated_hash</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1abb97c615799c16c51ad673cb83e9a407" prot="public" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::bucket_entry</scope><name>value</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1a7de167284b5cd33906a5e4e5f85ed7f7" prot="public" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::bucket_entry</scope><name>value</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1a52422eb0a58c3a0dbe6eadf2727e78f8" prot="public" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::bucket_entry</scope><name>value_type</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry_1a47e4c3edd080a962cfc2758bb1eac9b0" prot="public" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::bucket_entry</scope><name>~bucket_entry</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
