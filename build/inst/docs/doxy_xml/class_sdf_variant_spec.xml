<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_sdf_variant_spec" kind="class" language="C++" prot="public">
    <compoundname>SdfVariantSpec</compoundname>
    <basecompoundref refid="class_sdf_spec" prot="public" virt="non-virtual">SdfSpec</basecompoundref>
    <includes refid="variant_spec_8h" local="no">variantSpec.h</includes>
      <sectiondef kind="user-defined">
      <header>Spec construction</header>
      <memberdef kind="function" id="class_sdf_variant_spec_1af62491c2d34a5ed16b0a5dbb1c2e5791" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API SdfVariantSpecHandle</type>
        <definition>static SDF_API SdfVariantSpecHandle New</definition>
        <argsstring>(const SdfVariantSetSpecHandle &amp;owner, const std::string &amp;name)</argsstring>
        <name>New</name>
        <param>
          <type>const SdfVariantSetSpecHandle &amp;</type>
          <declname>owner</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Constructs a new instance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/variantSpec.h" line="66" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Name</header>
      <memberdef kind="function" id="class_sdf_variant_spec_1a062ef5d3cd30afd5ec8b5c41178a0eb7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API std::string</type>
        <definition>SDF_API std::string GetName</definition>
        <argsstring>() const</argsstring>
        <name>GetName</name>
        <briefdescription>
<para>Returns the name of this variant. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/variantSpec.h" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_variant_spec_1a320078c8c86baa76a237c2233d55a730" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>SDF_API TfToken GetNameToken</definition>
        <argsstring>() const</argsstring>
        <name>GetNameToken</name>
        <briefdescription>
<para>Returns the name of this variant. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/variantSpec.h" line="80" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Namespace hierarchy</header>
      <memberdef kind="function" id="class_sdf_variant_spec_1aa61607dd7c066979b2782753f0481d1b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API SdfVariantSetSpecHandle</type>
        <definition>SDF_API SdfVariantSetSpecHandle GetOwner</definition>
        <argsstring>() const</argsstring>
        <name>GetOwner</name>
        <briefdescription>
<para>Return the <ref refid="class_sdf_variant_set_spec" kindref="compound">SdfVariantSetSpec</ref> that owns this variant. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/variantSpec.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_variant_spec_1a12888429ef91b5ca4a41fe58b7cf5eb2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API SdfPrimSpecHandle</type>
        <definition>SDF_API SdfPrimSpecHandle GetPrimSpec</definition>
        <argsstring>() const</argsstring>
        <name>GetPrimSpec</name>
        <briefdescription>
<para>Get the prim spec owned by this variant. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/variantSpec.h" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_variant_spec_1ad3268652b0a34e3faa085f3e3886fde8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API SdfVariantSetsProxy</type>
        <definition>SDF_API SdfVariantSetsProxy GetVariantSets</definition>
        <argsstring>() const</argsstring>
        <name>GetVariantSets</name>
        <briefdescription>
<para>Returns the nested variant sets. </para>
        </briefdescription>
        <detaileddescription>
<para>The result maps variant set names to variant sets. Variant sets may be removed through the proxy. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/variantSpec.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_variant_spec_1aea1cc311e6f381f64a5e890b42a22f63" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API std::vector&lt; std::string &gt;</type>
        <definition>SDF_API std::vector&lt;std::string&gt; GetVariantNames</definition>
        <argsstring>(const std::string &amp;name) const</argsstring>
        <name>GetVariantNames</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Returns list of variant names for the given variant set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/variantSpec.h" line="103" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_sdf_variant_spec_1a0e86e801a6d1883ceaf773039f53dee8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SDF_DECLARE_SPEC</definition>
        <argsstring>(SdfVariantSpec, SdfSpec)</argsstring>
        <name>SDF_DECLARE_SPEC</name>
        <param>
          <type><ref refid="class_sdf_variant_spec" kindref="compound">SdfVariantSpec</ref></type>
        </param>
        <param>
          <type><ref refid="class_sdf_spec" kindref="compound">SdfSpec</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/variantSpec.h" line="57" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a single variant in a variant set. </para>
    </briefdescription>
    <detaileddescription>
<para>A variant contains a prim. This prim is the root prim of the variant.</para>
<para>SdfVariantSpecs are value objects. This means they are immutable once created and they are passed by copy-in APIs. To change a variant spec, you make a new one and replace the existing one. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="5251">
        <label>SdfSpec</label>
        <link refid="class_sdf_spec"/>
      </node>
      <node id="5250">
        <label>SdfVariantSpec</label>
        <link refid="class_sdf_variant_spec"/>
        <childnode refid="5251" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5253">
        <label>SdfSpec</label>
        <link refid="class_sdf_spec"/>
      </node>
      <node id="5252">
        <label>SdfVariantSpec</label>
        <link refid="class_sdf_variant_spec"/>
        <childnode refid="5253" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/usd/sdf/variantSpec.h" line="56" column="1" bodyfile="pxr/usd/sdf/variantSpec.h" bodystart="55" bodyend="106"/>
    <listofallmembers>
      <member refid="class_sdf_spec_1ab3d82252ced8ce99c5118e47df91751e" prot="protected" virt="non-virtual"><scope>SdfVariantSpec</scope><name>_DeleteSpec</name></member>
      <member refid="class_sdf_spec_1aeff28b3237b8bdc8278510dfa4b354ee" prot="protected" virt="non-virtual"><scope>SdfVariantSpec</scope><name>_MoveSpec</name></member>
      <member refid="class_sdf_spec_1a51b947731f02f1359b9820d33aa9b8d0" prot="public" virt="non-virtual"><scope>SdfVariantSpec</scope><name>ClearField</name></member>
      <member refid="class_sdf_spec_1ad5a0d94f0ac661acb29d7490eb15d6d6" prot="public" virt="non-virtual"><scope>SdfVariantSpec</scope><name>ClearInfo</name></member>
      <member refid="class_sdf_spec_1a1da119c3713ec401ca578a6faa6eac9a" prot="public" virt="non-virtual"><scope>SdfVariantSpec</scope><name>GetFallbackForInfo</name></member>
      <member refid="class_sdf_spec_1a2ba08d83b8a934187f2a792367066fa6" prot="public" virt="non-virtual"><scope>SdfVariantSpec</scope><name>GetField</name></member>
      <member refid="class_sdf_spec_1a07f67495ca10863568306887212430f9" prot="public" virt="non-virtual"><scope>SdfVariantSpec</scope><name>GetFieldAs</name></member>
      <member refid="class_sdf_spec_1a623889e0a6c749418e10f23169f92c5b" prot="public" virt="non-virtual"><scope>SdfVariantSpec</scope><name>GetInfo</name></member>
      <member refid="class_sdf_spec_1a3fefae0b234ef14d141c83d6448f8656" prot="public" virt="non-virtual"><scope>SdfVariantSpec</scope><name>GetLayer</name></member>
      <member refid="class_sdf_spec_1a52b21d3d611186ff336ad54292b0301a" prot="public" virt="non-virtual"><scope>SdfVariantSpec</scope><name>GetMetaDataDisplayGroup</name></member>
      <member refid="class_sdf_spec_1ad2c2ea35643e325dacbc0bd8a3646b35" prot="public" virt="non-virtual"><scope>SdfVariantSpec</scope><name>GetMetaDataInfoKeys</name></member>
      <member refid="class_sdf_variant_spec_1a062ef5d3cd30afd5ec8b5c41178a0eb7" prot="public" virt="non-virtual"><scope>SdfVariantSpec</scope><name>GetName</name></member>
      <member refid="class_sdf_variant_spec_1a320078c8c86baa76a237c2233d55a730" prot="public" virt="non-virtual"><scope>SdfVariantSpec</scope><name>GetNameToken</name></member>
      <member refid="class_sdf_variant_spec_1aa61607dd7c066979b2782753f0481d1b" prot="public" virt="non-virtual"><scope>SdfVariantSpec</scope><name>GetOwner</name></member>
      <member refid="class_sdf_spec_1a58e8463c104969bf41bb7c79605d9532" prot="public" virt="non-virtual"><scope>SdfVariantSpec</scope><name>GetPath</name></member>
      <member refid="class_sdf_variant_spec_1a12888429ef91b5ca4a41fe58b7cf5eb2" prot="public" virt="non-virtual"><scope>SdfVariantSpec</scope><name>GetPrimSpec</name></member>
      <member refid="class_sdf_spec_1a3bd6905e6ee12562d4702db19fe6cc1f" prot="public" virt="non-virtual"><scope>SdfVariantSpec</scope><name>GetSchema</name></member>
      <member refid="class_sdf_spec_1a5f9f08741402342a8edf57244fe8c738" prot="public" virt="non-virtual"><scope>SdfVariantSpec</scope><name>GetSpecType</name></member>
      <member refid="class_sdf_spec_1a7761385927d3f2e1d80af674b32d3ebc" prot="public" virt="non-virtual"><scope>SdfVariantSpec</scope><name>GetTypeForInfo</name></member>
      <member refid="class_sdf_variant_spec_1aea1cc311e6f381f64a5e890b42a22f63" prot="public" virt="non-virtual"><scope>SdfVariantSpec</scope><name>GetVariantNames</name></member>
      <member refid="class_sdf_variant_spec_1ad3268652b0a34e3faa085f3e3886fde8" prot="public" virt="non-virtual"><scope>SdfVariantSpec</scope><name>GetVariantSets</name></member>
      <member refid="class_sdf_spec_1a0eb9c97beea5e2f59323cbda9669d566" prot="public" virt="non-virtual"><scope>SdfVariantSpec</scope><name>HasField</name></member>
      <member refid="class_sdf_spec_1a428b01e709e5bace4d3e7e23ad683d30" prot="public" virt="non-virtual"><scope>SdfVariantSpec</scope><name>HasField</name></member>
      <member refid="class_sdf_spec_1afafc521cdaa2ed6513d41be2fa433993" prot="public" virt="non-virtual"><scope>SdfVariantSpec</scope><name>HasInfo</name></member>
      <member refid="class_sdf_spec_1a10e3f6a477185399b6d64d26a213f32a" prot="public" virt="non-virtual"><scope>SdfVariantSpec</scope><name>IsDormant</name></member>
      <member refid="class_sdf_spec_1a22b46c26c417cc6153e59cbe921d9ebd" prot="public" virt="non-virtual"><scope>SdfVariantSpec</scope><name>IsInert</name></member>
      <member refid="class_sdf_spec_1a7b34aca00921a15ba8d5ad48c4561e1c" prot="public" virt="non-virtual"><scope>SdfVariantSpec</scope><name>ListFields</name></member>
      <member refid="class_sdf_spec_1af43fb14c1d6cec17f913c3846119f716" prot="public" virt="non-virtual"><scope>SdfVariantSpec</scope><name>ListInfoKeys</name></member>
      <member refid="class_sdf_variant_spec_1af62491c2d34a5ed16b0a5dbb1c2e5791" prot="public" virt="non-virtual"><scope>SdfVariantSpec</scope><name>New</name></member>
      <member refid="class_sdf_spec_1a48650684eb4cc0ef195716de825a0a58" prot="public" virt="non-virtual"><scope>SdfVariantSpec</scope><name>operator&lt;</name></member>
      <member refid="class_sdf_spec_1aa51d7b0726a78b7f679b5f22d68ef7df" prot="public" virt="non-virtual"><scope>SdfVariantSpec</scope><name>operator=</name></member>
      <member refid="class_sdf_spec_1a103a094590f42b07266c293b02ef099f" prot="public" virt="non-virtual"><scope>SdfVariantSpec</scope><name>operator==</name></member>
      <member refid="class_sdf_spec_1a794044e16b8357b4fd1cd87438ed361f" prot="public" virt="non-virtual"><scope>SdfVariantSpec</scope><name>PermissionToEdit</name></member>
      <member refid="class_sdf_variant_spec_1a0e86e801a6d1883ceaf773039f53dee8" prot="private" virt="non-virtual"><scope>SdfVariantSpec</scope><name>SDF_DECLARE_SPEC</name></member>
      <member refid="class_sdf_spec_1a5b619246ffb0f1c56631529fa65e0435" prot="public" virt="non-virtual"><scope>SdfVariantSpec</scope><name>SetField</name></member>
      <member refid="class_sdf_spec_1a3fc0276ed2f39480d00a61b888bd8434" prot="public" virt="non-virtual"><scope>SdfVariantSpec</scope><name>SetField</name></member>
      <member refid="class_sdf_spec_1ac24a378f12ee3162c6f0173d001b11c0" prot="public" virt="non-virtual"><scope>SdfVariantSpec</scope><name>SetInfo</name></member>
      <member refid="class_sdf_spec_1a860957d1b7800d7e930b53fe5b19ba86" prot="public" virt="non-virtual"><scope>SdfVariantSpec</scope><name>SetInfoDictionaryValue</name></member>
      <member refid="class_sdf_spec_1a38c4971735cfa7f91c1618d441622ccc" prot="public" virt="non-virtual"><scope>SdfVariantSpec</scope><name>WriteToStream</name></member>
      <member refid="class_sdf_spec_1acd7d1eec1135fa492866bd844b2694d6" prot="public" virt="non-virtual"><scope>SdfVariantSpec</scope><name>~SdfSpec</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
