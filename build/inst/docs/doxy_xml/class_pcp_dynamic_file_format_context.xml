<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_pcp_dynamic_file_format_context" kind="class" language="C++" prot="public">
    <compoundname>PcpDynamicFileFormatContext</compoundname>
    <includes refid="dynamic_file_format_context_8h" local="no">dynamicFileFormatContext.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_pcp_dynamic_file_format_context_1ac60ab1aefea6069cbcf5cedfc898aa18" prot="public" static="no">
        <type>std::vector&lt; <ref refid="class_vt_value" kindref="compound">VtValue</ref> &gt;</type>
        <definition>using VtValueVector =  std::vector&lt;VtValue&gt;</definition>
        <argsstring></argsstring>
        <name>VtValueVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/dynamicFileFormatContext.h" line="46" column="1" bodyfile="pxr/usd/pcp/dynamicFileFormatContext.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_pcp_dynamic_file_format_context_1aeaf6d282f2b5c2ef936abe7e2cb2afa7" prot="private" static="no" mutable="no">
        <type><ref refid="class_pcp_node_ref" kindref="compound">PcpNodeRef</ref></type>
        <definition>PcpNodeRef _parentNode</definition>
        <argsstring></argsstring>
        <name>_parentNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/dynamicFileFormatContext.h" line="103" column="1" bodyfile="pxr/usd/pcp/dynamicFileFormatContext.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_pcp_dynamic_file_format_context_1a6864a67153f56df7b4c66c117694b11e" prot="private" static="no" mutable="no">
        <type>PcpPrimIndex_StackFrame *</type>
        <definition>PcpPrimIndex_StackFrame* _previousStackFrame</definition>
        <argsstring></argsstring>
        <name>_previousStackFrame</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/dynamicFileFormatContext.h" line="104" column="1" bodyfile="pxr/usd/pcp/dynamicFileFormatContext.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_pcp_dynamic_file_format_context_1a7945b82bab3ac6fc8a1c9d9b549be9fe" prot="private" static="no" mutable="no">
        <type><ref refid="class_tf_token_1a1cb3dc318038c0a24f3c39427b05b977" kindref="member">TfToken::Set</ref> *</type>
        <definition>TfToken::Set* _composedFieldNames</definition>
        <argsstring></argsstring>
        <name>_composedFieldNames</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/dynamicFileFormatContext.h" line="107" column="1" bodyfile="pxr/usd/pcp/dynamicFileFormatContext.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_pcp_dynamic_file_format_context_1abf3786f9359bd8c5d03d5e98ec6db290" prot="private" static="no" mutable="no">
        <type><ref refid="class_tf_token_1a1cb3dc318038c0a24f3c39427b05b977" kindref="member">TfToken::Set</ref> *</type>
        <definition>TfToken::Set* _composedAttributeNames</definition>
        <argsstring></argsstring>
        <name>_composedAttributeNames</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/dynamicFileFormatContext.h" line="111" column="1" bodyfile="pxr/usd/pcp/dynamicFileFormatContext.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_pcp_dynamic_file_format_context_1ac3118a889a3b87b4a64a02f4fd0f6234" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PCP_API</type>
        <definition>PCP_API ~PcpDynamicFileFormatContext</definition>
        <argsstring>()=default</argsstring>
        <name>~PcpDynamicFileFormatContext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/dynamicFileFormatContext.h" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_dynamic_file_format_context_1a7c6232095b5a3cc0761f1ae751d12254" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PCP_API bool</type>
        <definition>PCP_API bool ComposeValue</definition>
        <argsstring>(const TfToken &amp;field, VtValue *value) const</argsstring>
        <name>ComposeValue</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>field</declname>
        </param>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Compose the <computeroutput>value</computeroutput> of the given <computeroutput>field</computeroutput> and return its current strongest opinion. </para>
        </briefdescription>
        <detaileddescription>
<para>For dictionary valued fields this will be a dictionary containing the strongest value for each individual key. Returns true if a value for the field was found. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/dynamicFileFormatContext.h" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_dynamic_file_format_context_1ab5c80398ec5a7a298b088d22fc2216d5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PCP_API bool</type>
        <definition>PCP_API bool ComposeValueStack</definition>
        <argsstring>(const TfToken &amp;field, VtValueVector *values) const</argsstring>
        <name>ComposeValueStack</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>field</declname>
        </param>
        <param>
          <type>VtValueVector *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
<para>Compose the <computeroutput>values</computeroutput> of the given <computeroutput>field</computeroutput> returning all available opinions ordered from strongest to weakest. </para>
        </briefdescription>
        <detaileddescription>
<para>For dictionary valued fields, the dictionaries from each opinion are not composed together at each step and are instead returned in the list as is. Returns true if a value for the field was found.</para>
<para>Note that this is slower than ComposeValue, especially for non-dictionary valued fields, and should only be used if knowing more than just the strongest value is necessary. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/dynamicFileFormatContext.h" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_dynamic_file_format_context_1abaf3b506c81e8e00e1f4c2018283bebb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PCP_API bool</type>
        <definition>PCP_API bool ComposeAttributeDefaultValue</definition>
        <argsstring>(const TfToken &amp;attributeName, VtValue *value) const</argsstring>
        <name>ComposeAttributeDefaultValue</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>attributeName</declname>
        </param>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Compose the <computeroutput>value</computeroutput> of the default field of the attribute with the given <computeroutput>attributeName</computeroutput> and return its current strongest opinion. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns true if a value for the field was found. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/dynamicFileFormatContext.h" line="75" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_pcp_dynamic_file_format_context_1a0e9c9425a8d7ce3ccb55b5f0fd5dc959" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PcpDynamicFileFormatContext</definition>
        <argsstring>(const PcpNodeRef &amp;parentNode, PcpPrimIndex_StackFrame *previousFrame, TfToken::Set *composedFieldNames, TfToken::Set *composedAttributeNames)</argsstring>
        <name>PcpDynamicFileFormatContext</name>
        <param>
          <type>const <ref refid="class_pcp_node_ref" kindref="compound">PcpNodeRef</ref> &amp;</type>
          <declname>parentNode</declname>
        </param>
        <param>
          <type>PcpPrimIndex_StackFrame *</type>
          <declname>previousFrame</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token_1a1cb3dc318038c0a24f3c39427b05b977" kindref="member">TfToken::Set</ref> *</type>
          <declname>composedFieldNames</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token_1a1cb3dc318038c0a24f3c39427b05b977" kindref="member">TfToken::Set</ref> *</type>
          <declname>composedAttributeNames</declname>
        </param>
        <briefdescription>
<para>Constructs a context. </para>
        </briefdescription>
        <detaileddescription>
<para><computeroutput>parentNode</computeroutput> and <computeroutput>previousFrame</computeroutput> are used to traverse the current state of the prim index graph when composing the opinions on fields. <computeroutput>composedFieldNames</computeroutput> is the set of field names that is to be updated with the names of fields that ComposeValue and ComposeValueStack are called on for dependency tracking. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/dynamicFileFormatContext.h" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_dynamic_file_format_context_1acd6b41f3d1dc45a0aede529d30ad2f1c" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool _IsAllowedFieldForArguments</definition>
        <argsstring>(const TfToken &amp;field, bool *fieldValueIsDictionary=nullptr) const</argsstring>
        <name>_IsAllowedFieldForArguments</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>field</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>fieldValueIsDictionary</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Returns whether the given <computeroutput>field</computeroutput> is allowed to be used to generate file format arguments. </para>
        </briefdescription>
        <detaileddescription>
<para>It can also return whether the value type of the field is a dictionary if needed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/dynamicFileFormatContext.h" line="99" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Context object for the current state of a prim index that is being built that allows implementations of <ref refid="class_pcp_dynamic_file_format_interface" kindref="compound">PcpDynamicFileFormatInterface</ref> to compose field values when generating dynamic file format arguments. </para>
    </briefdescription>
    <detaileddescription>
<para>The context allows us to iterate over all nodes that have already been composed looking for the strongest opinion for a relevant field. </para>
    </detaileddescription>
    <location file="pxr/usd/pcp/dynamicFileFormatContext.h" line="44" column="1" bodyfile="pxr/usd/pcp/dynamicFileFormatContext.h" bodystart="43" bodyend="115"/>
    <listofallmembers>
      <member refid="class_pcp_dynamic_file_format_context_1abf3786f9359bd8c5d03d5e98ec6db290" prot="private" virt="non-virtual"><scope>PcpDynamicFileFormatContext</scope><name>_composedAttributeNames</name></member>
      <member refid="class_pcp_dynamic_file_format_context_1a7945b82bab3ac6fc8a1c9d9b549be9fe" prot="private" virt="non-virtual"><scope>PcpDynamicFileFormatContext</scope><name>_composedFieldNames</name></member>
      <member refid="class_pcp_dynamic_file_format_context_1acd6b41f3d1dc45a0aede529d30ad2f1c" prot="private" virt="non-virtual"><scope>PcpDynamicFileFormatContext</scope><name>_IsAllowedFieldForArguments</name></member>
      <member refid="class_pcp_dynamic_file_format_context_1aeaf6d282f2b5c2ef936abe7e2cb2afa7" prot="private" virt="non-virtual"><scope>PcpDynamicFileFormatContext</scope><name>_parentNode</name></member>
      <member refid="class_pcp_dynamic_file_format_context_1a6864a67153f56df7b4c66c117694b11e" prot="private" virt="non-virtual"><scope>PcpDynamicFileFormatContext</scope><name>_previousStackFrame</name></member>
      <member refid="class_pcp_dynamic_file_format_context_1abaf3b506c81e8e00e1f4c2018283bebb" prot="public" virt="non-virtual"><scope>PcpDynamicFileFormatContext</scope><name>ComposeAttributeDefaultValue</name></member>
      <member refid="class_pcp_dynamic_file_format_context_1a7c6232095b5a3cc0761f1ae751d12254" prot="public" virt="non-virtual"><scope>PcpDynamicFileFormatContext</scope><name>ComposeValue</name></member>
      <member refid="class_pcp_dynamic_file_format_context_1ab5c80398ec5a7a298b088d22fc2216d5" prot="public" virt="non-virtual"><scope>PcpDynamicFileFormatContext</scope><name>ComposeValueStack</name></member>
      <member refid="class_pcp_dynamic_file_format_context_1a0e9c9425a8d7ce3ccb55b5f0fd5dc959" prot="private" virt="non-virtual"><scope>PcpDynamicFileFormatContext</scope><name>PcpDynamicFileFormatContext</name></member>
      <member refid="class_pcp_dynamic_file_format_context_1ac60ab1aefea6069cbcf5cedfc898aa18" prot="public" virt="non-virtual"><scope>PcpDynamicFileFormatContext</scope><name>VtValueVector</name></member>
      <member refid="class_pcp_dynamic_file_format_context_1ac3118a889a3b87b4a64a02f4fd0f6234" prot="public" virt="non-virtual"><scope>PcpDynamicFileFormatContext</scope><name>~PcpDynamicFileFormatContext</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
