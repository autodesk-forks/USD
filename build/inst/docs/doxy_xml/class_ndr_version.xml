<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_ndr_version" kind="class" language="C++" prot="public">
    <compoundname>NdrVersion</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_ndr_version_1a874981902e850d0a745d45077058cccb" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int _major</definition>
        <argsstring></argsstring>
        <name>_major</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/declare.h" line="198" column="1" bodyfile="pxr/usd/ndr/declare.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ndr_version_1a0f16c58de6b18e8e2553078f38c2c9f4" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int _minor</definition>
        <argsstring></argsstring>
        <name>_minor</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/declare.h" line="198" column="1" bodyfile="pxr/usd/ndr/declare.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ndr_version_1a0f3e68a878f1c687176ce8703d78c6bc" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool _isDefault</definition>
        <argsstring></argsstring>
        <name>_isDefault</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/declare.h" line="199" column="1" bodyfile="pxr/usd/ndr/declare.h" bodystart="199" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_ndr_version_1a0a01b6a56faed6301b2ae64479c34ce1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NDR_API</type>
        <definition>NDR_API NdrVersion</definition>
        <argsstring>()=default</argsstring>
        <name>NdrVersion</name>
        <briefdescription>
<para>Create an invalid version. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/declare.h" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_ndr_version_1a52b51e13380c367b75843db50a555bd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NDR_API</type>
        <definition>NDR_API NdrVersion</definition>
        <argsstring>(int major, int minor=0)</argsstring>
        <name>NdrVersion</name>
        <param>
          <type>int</type>
          <declname>major</declname>
        </param>
        <param>
          <type>int</type>
          <declname>minor</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Create a version with the given major and minor numbers. </para>
        </briefdescription>
        <detaileddescription>
<para>Numbers must be non-negative, and at least one must be non-zero.</para>
<para>On failure generates an error and yields an invalid version. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/declare.h" line="95" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_ndr_version_1a535ffff774e0e270c3aee49c2e750d44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NDR_API</type>
        <definition>NDR_API NdrVersion</definition>
        <argsstring>(const std::string &amp;x)</argsstring>
        <name>NdrVersion</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Create a version from a string. </para>
        </briefdescription>
        <detaileddescription>
<para>On failure generates an error and yields an invalid version. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/declare.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_ndr_version_1ab4564ed2bc61b67c20eed22af4f7bb10" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>NDR_API NdrVersion</type>
        <definition>NDR_API NdrVersion GetAsDefault</definition>
        <argsstring>() const</argsstring>
        <name>GetAsDefault</name>
        <briefdescription>
<para>Return an equal version marked as default. </para>
        </briefdescription>
        <detaileddescription>
<para>It&apos;s permitted to mark an invalid version as the default. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/declare.h" line="104" column="1" bodyfile="pxr/usd/ndr/declare.h" bodystart="104" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="class_ndr_version_1a2718f6eb19d7dc1984affaf395b5f57a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>NDR_API int</type>
        <definition>NDR_API int GetMajor</definition>
        <argsstring>() const</argsstring>
        <name>GetMajor</name>
        <briefdescription>
<para>Return the major version number or zero for an invalid version. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/declare.h" line="111" column="1" bodyfile="pxr/usd/ndr/declare.h" bodystart="111" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="class_ndr_version_1abe6902d5689285cd3d6f932e41c01dc0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>NDR_API int</type>
        <definition>NDR_API int GetMinor</definition>
        <argsstring>() const</argsstring>
        <name>GetMinor</name>
        <briefdescription>
<para>Return the minor version number or zero for an invalid version. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/declare.h" line="114" column="1" bodyfile="pxr/usd/ndr/declare.h" bodystart="114" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="class_ndr_version_1a87543359c6810f86aede4b9e5418c445" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>NDR_API bool</type>
        <definition>NDR_API bool IsDefault</definition>
        <argsstring>() const</argsstring>
        <name>IsDefault</name>
        <briefdescription>
<para>Return true iff this version is marked as default. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/declare.h" line="117" column="1" bodyfile="pxr/usd/ndr/declare.h" bodystart="117" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="class_ndr_version_1ab6c52c385f3729dee2c82826efedebe5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>NDR_API std::string</type>
        <definition>NDR_API std::string GetString</definition>
        <argsstring>() const</argsstring>
        <name>GetString</name>
        <briefdescription>
<para>Return the version as a string. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/declare.h" line="121" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_ndr_version_1a369c4e14094cfdd61566474454883cb5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>NDR_API std::string</type>
        <definition>NDR_API std::string GetStringSuffix</definition>
        <argsstring>() const</argsstring>
        <name>GetStringSuffix</name>
        <briefdescription>
<para>Return the version as a identifier suffix. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/declare.h" line="125" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_ndr_version_1a87230c4473b09bf89befd05f41834a80" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>NDR_API std::size_t</type>
        <definition>NDR_API std::size_t GetHash</definition>
        <argsstring>() const</argsstring>
        <name>GetHash</name>
        <briefdescription>
<para>Return a hash for the version. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/declare.h" line="129" column="1" bodyfile="pxr/usd/ndr/declare.h" bodystart="129" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="class_ndr_version_1a2e806c3302cdd21116d7299c15db8023" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type>NDR_API</type>
        <definition>NDR_API operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <briefdescription>
<para>Return true iff the version is valid. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/declare.h" line="137" column="1" bodyfile="pxr/usd/ndr/declare.h" bodystart="137" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="class_ndr_version_1adfcfc5e94a544b1bf52d5c3b70013421" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>NDR_API bool</type>
        <definition>NDR_API bool operator!</definition>
        <argsstring>() const</argsstring>
        <name>operator!</name>
        <briefdescription>
<para>Return true iff the version is invalid. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/declare.h" line="144" column="1" bodyfile="pxr/usd/ndr/declare.h" bodystart="144" bodyend="147"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_ndr_version_1ad3e139f491263bb0229c3475b6e20c72" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>NDR_API friend bool</type>
        <definition>NDR_API friend bool operator==</definition>
        <argsstring>(const NdrVersion &amp;lhs, const NdrVersion &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const NdrVersion &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const NdrVersion &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Return true iff versions are equal. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/declare.h" line="151" column="1" bodyfile="pxr/usd/ndr/declare.h" bodystart="151" bodyend="154"/>
      </memberdef>
      <memberdef kind="friend" id="class_ndr_version_1ad23fece07489fd2147bc35fdb6e9b692" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>NDR_API friend bool</type>
        <definition>NDR_API friend bool operator!=</definition>
        <argsstring>(const NdrVersion &amp;lhs, const NdrVersion &amp;rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const NdrVersion &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const NdrVersion &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Return true iff versions are not equal. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/declare.h" line="158" column="1" bodyfile="pxr/usd/ndr/declare.h" bodystart="158" bodyend="161"/>
      </memberdef>
      <memberdef kind="friend" id="class_ndr_version_1a62c1e662ac13ce9534f2e2b95c20fc79" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>NDR_API friend bool</type>
        <definition>NDR_API friend bool operator&lt;</definition>
        <argsstring>(const NdrVersion &amp;lhs, const NdrVersion &amp;rhs)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const NdrVersion &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const NdrVersion &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Return true iff the left side is less than the right side. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/declare.h" line="165" column="1" bodyfile="pxr/usd/ndr/declare.h" bodystart="165" bodyend="169"/>
      </memberdef>
      <memberdef kind="friend" id="class_ndr_version_1add13377ddbf00deb125480e470faa94c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>NDR_API friend bool</type>
        <definition>NDR_API friend bool operator&lt;=</definition>
        <argsstring>(const NdrVersion &amp;lhs, const NdrVersion &amp;rhs)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const NdrVersion &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const NdrVersion &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Return true iff the left side is less than or equal to the right side. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/declare.h" line="173" column="1" bodyfile="pxr/usd/ndr/declare.h" bodystart="173" bodyend="177"/>
      </memberdef>
      <memberdef kind="friend" id="class_ndr_version_1aa5f945c2e8d3020b9b157df9910dc08a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>NDR_API friend bool</type>
        <definition>NDR_API friend bool operator&gt;</definition>
        <argsstring>(const NdrVersion &amp;lhs, const NdrVersion &amp;rhs)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const NdrVersion &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const NdrVersion &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Return true iff the left side is greater than the right side. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/declare.h" line="181" column="1" bodyfile="pxr/usd/ndr/declare.h" bodystart="181" bodyend="184"/>
      </memberdef>
      <memberdef kind="friend" id="class_ndr_version_1aa5df168b46fb040ae22d4b19d17f50e9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>NDR_API friend bool</type>
        <definition>NDR_API friend bool operator&gt;=</definition>
        <argsstring>(const NdrVersion &amp;lhs, const NdrVersion &amp;rhs)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const NdrVersion &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const NdrVersion &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Return true iff the left side is greater than or equal to the right side. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/declare.h" line="188" column="1" bodyfile="pxr/usd/ndr/declare.h" bodystart="188" bodyend="191"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_ndr_version_1a6f2a1addee5f814e832ac4940040e495" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NdrVersion</definition>
        <argsstring>(const NdrVersion &amp;x, bool)</argsstring>
        <name>NdrVersion</name>
        <param>
          <type>const NdrVersion &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/declare.h" line="194" column="1" bodyfile="pxr/usd/ndr/declare.h" bodystart="194" bodyend="195"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pxr/usd/ndr/declare.h" line="86" column="1" bodyfile="pxr/usd/ndr/declare.h" bodystart="86" bodyend="200"/>
    <listofallmembers>
      <member refid="class_ndr_version_1a0f3e68a878f1c687176ce8703d78c6bc" prot="private" virt="non-virtual"><scope>NdrVersion</scope><name>_isDefault</name></member>
      <member refid="class_ndr_version_1a874981902e850d0a745d45077058cccb" prot="private" virt="non-virtual"><scope>NdrVersion</scope><name>_major</name></member>
      <member refid="class_ndr_version_1a0f16c58de6b18e8e2553078f38c2c9f4" prot="private" virt="non-virtual"><scope>NdrVersion</scope><name>_minor</name></member>
      <member refid="class_ndr_version_1ab4564ed2bc61b67c20eed22af4f7bb10" prot="public" virt="non-virtual"><scope>NdrVersion</scope><name>GetAsDefault</name></member>
      <member refid="class_ndr_version_1a87230c4473b09bf89befd05f41834a80" prot="public" virt="non-virtual"><scope>NdrVersion</scope><name>GetHash</name></member>
      <member refid="class_ndr_version_1a2718f6eb19d7dc1984affaf395b5f57a" prot="public" virt="non-virtual"><scope>NdrVersion</scope><name>GetMajor</name></member>
      <member refid="class_ndr_version_1abe6902d5689285cd3d6f932e41c01dc0" prot="public" virt="non-virtual"><scope>NdrVersion</scope><name>GetMinor</name></member>
      <member refid="class_ndr_version_1ab6c52c385f3729dee2c82826efedebe5" prot="public" virt="non-virtual"><scope>NdrVersion</scope><name>GetString</name></member>
      <member refid="class_ndr_version_1a369c4e14094cfdd61566474454883cb5" prot="public" virt="non-virtual"><scope>NdrVersion</scope><name>GetStringSuffix</name></member>
      <member refid="class_ndr_version_1a87543359c6810f86aede4b9e5418c445" prot="public" virt="non-virtual"><scope>NdrVersion</scope><name>IsDefault</name></member>
      <member refid="class_ndr_version_1a0a01b6a56faed6301b2ae64479c34ce1" prot="public" virt="non-virtual"><scope>NdrVersion</scope><name>NdrVersion</name></member>
      <member refid="class_ndr_version_1a52b51e13380c367b75843db50a555bd9" prot="public" virt="non-virtual"><scope>NdrVersion</scope><name>NdrVersion</name></member>
      <member refid="class_ndr_version_1a535ffff774e0e270c3aee49c2e750d44" prot="public" virt="non-virtual"><scope>NdrVersion</scope><name>NdrVersion</name></member>
      <member refid="class_ndr_version_1a6f2a1addee5f814e832ac4940040e495" prot="private" virt="non-virtual"><scope>NdrVersion</scope><name>NdrVersion</name></member>
      <member refid="class_ndr_version_1a2e806c3302cdd21116d7299c15db8023" prot="public" virt="non-virtual"><scope>NdrVersion</scope><name>operator bool</name></member>
      <member refid="class_ndr_version_1adfcfc5e94a544b1bf52d5c3b70013421" prot="public" virt="non-virtual"><scope>NdrVersion</scope><name>operator!</name></member>
      <member refid="class_ndr_version_1ad23fece07489fd2147bc35fdb6e9b692" prot="public" virt="non-virtual"><scope>NdrVersion</scope><name>operator!=</name></member>
      <member refid="class_ndr_version_1a62c1e662ac13ce9534f2e2b95c20fc79" prot="public" virt="non-virtual"><scope>NdrVersion</scope><name>operator&lt;</name></member>
      <member refid="class_ndr_version_1add13377ddbf00deb125480e470faa94c" prot="public" virt="non-virtual"><scope>NdrVersion</scope><name>operator&lt;=</name></member>
      <member refid="class_ndr_version_1ad3e139f491263bb0229c3475b6e20c72" prot="public" virt="non-virtual"><scope>NdrVersion</scope><name>operator==</name></member>
      <member refid="class_ndr_version_1aa5f945c2e8d3020b9b157df9910dc08a" prot="public" virt="non-virtual"><scope>NdrVersion</scope><name>operator&gt;</name></member>
      <member refid="class_ndr_version_1aa5df168b46fb040ae22d4b19d17f50e9" prot="public" virt="non-virtual"><scope>NdrVersion</scope><name>operator&gt;=</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
