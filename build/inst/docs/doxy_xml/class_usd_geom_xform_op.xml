<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_usd_geom_xform_op" kind="class" language="C++" prot="public">
    <compoundname>UsdGeomXformOp</compoundname>
    <includes refid="xform_op_8h" local="no">xformOp.h</includes>
    <innerclass refid="struct_usd_geom_xform_op_1_1___get" prot="private">UsdGeomXformOp::_Get</innerclass>
    <innerclass refid="struct_usd_geom_xform_op_1_1___get_attr" prot="private">UsdGeomXformOp::_GetAttr</innerclass>
    <innerclass refid="struct_usd_geom_xform_op_1_1___get_might_be_time_varying" prot="private">UsdGeomXformOp::_GetMightBeTimeVarying</innerclass>
    <innerclass refid="struct_usd_geom_xform_op_1_1___get_num_time_samples" prot="private">UsdGeomXformOp::_GetNumTimeSamples</innerclass>
    <innerclass refid="struct_usd_geom_xform_op_1_1___get_time_samples" prot="private">UsdGeomXformOp::_GetTimeSamples</innerclass>
    <innerclass refid="struct_usd_geom_xform_op_1_1___get_time_samples_in_interval" prot="private">UsdGeomXformOp::_GetTimeSamplesInInterval</innerclass>
    <innerclass refid="struct_usd_geom_xform_op_1_1___valid_attribute_tag_type" prot="private">UsdGeomXformOp::_ValidAttributeTagType</innerclass>
      <sectiondef kind="user-defined">
      <header>Static Helper API</header>
      <memberdef kind="function" id="class_usd_geom_xform_op_1a822e612fbe6e8291bbd7170044574912" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API bool</type>
        <definition>static USDGEOM_API bool IsXformOp</definition>
        <argsstring>(const UsdAttribute &amp;attr)</argsstring>
        <name>IsXformOp</name>
        <param>
          <type>const <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref> &amp;</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
<para>Test whether a given <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref> represents valid XformOp, which implies that creating a <ref refid="class_usd_geom_xform_op" kindref="compound">UsdGeomXformOp</ref> from the attribute will succeed. </para>
        </briefdescription>
        <detaileddescription>
<para>Success implies that <computeroutput>attr.IsDefined()</computeroutput> is true. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformOp.h" line="180" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_op_1ae6a92954e06e290c3f6c88333c3c67ac" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API bool</type>
        <definition>static USDGEOM_API bool IsXformOp</definition>
        <argsstring>(const TfToken &amp;attrName)</argsstring>
        <name>IsXformOp</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>attrName</declname>
        </param>
        <briefdescription>
<para>Test whether a given attrbute name represents a valid XformOp, which implies that creating a <ref refid="class_usd_geom_xform_op" kindref="compound">UsdGeomXformOp</ref> from the corresponding <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref> will succeed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformOp.h" line="187" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_op_1ad16e3b21531794e7f5ba903d4e653d79" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API <ref refid="class_tf_token" kindref="compound">TfToken</ref> const  &amp;</type>
        <definition>static USDGEOM_API TfToken const&amp; GetOpTypeToken</definition>
        <argsstring>(Type const opType)</argsstring>
        <name>GetOpTypeToken</name>
        <param>
          <type><ref refid="class_usd_geom_xform_op_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">Type</ref> const</type>
          <declname>opType</declname>
        </param>
        <briefdescription>
<para>Returns the <ref refid="class_tf_token" kindref="compound">TfToken</ref> used to encode the given <computeroutput>opType</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Note that an empty <ref refid="class_tf_token" kindref="compound">TfToken</ref> is used to represent TypeInvalid </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformOp.h" line="192" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_op_1a93a50ecd13ba1e0ff59dbe3a1969e78a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API <ref refid="class_usd_geom_xform_op_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">Type</ref></type>
        <definition>static USDGEOM_API Type GetOpTypeEnum</definition>
        <argsstring>(TfToken const &amp;opTypeToken)</argsstring>
        <name>GetOpTypeEnum</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>opTypeToken</declname>
        </param>
        <briefdescription>
<para>Returns the Type enum associated with the given <computeroutput>opTypeToken</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformOp.h" line="196" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_op_1afafd7f87008cf957acf4d93a5a2bf5bf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API <ref refid="class_usd_geom_xform_op_1ad1fbd6a28bdb0f04414d526ebeaed0e2" kindref="member">Precision</ref></type>
        <definition>static USDGEOM_API Precision GetPrecisionFromValueTypeName</definition>
        <argsstring>(const SdfValueTypeName &amp;typeName)</argsstring>
        <name>GetPrecisionFromValueTypeName</name>
        <param>
          <type>const <ref refid="class_sdf_value_type_name" kindref="compound">SdfValueTypeName</ref> &amp;</type>
          <declname>typeName</declname>
        </param>
        <briefdescription>
<para>Returns the precision corresponding to the given value typeName. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformOp.h" line="200" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_op_1a21978b284074caeb4651eba2081e31ed" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API const <ref refid="class_sdf_value_type_name" kindref="compound">SdfValueTypeName</ref> &amp;</type>
        <definition>static USDGEOM_API const SdfValueTypeName&amp; GetValueTypeName</definition>
        <argsstring>(const Type opType, const Precision precision)</argsstring>
        <name>GetValueTypeName</name>
        <param>
          <type>const <ref refid="class_usd_geom_xform_op_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">Type</ref></type>
          <declname>opType</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_geom_xform_op_1ad1fbd6a28bdb0f04414d526ebeaed0e2" kindref="member">Precision</ref></type>
          <declname>precision</declname>
        </param>
        <briefdescription>
<para>Returns the value typeName token that corresponds to the given combination of <computeroutput>opType</computeroutput> and <computeroutput>precision</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformOp.h" line="205" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_op_1a4caf207d30952b0f336425300421322e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>static USDGEOM_API TfToken GetOpName</definition>
        <argsstring>(const Type opType, const TfToken &amp;opSuffix=TfToken(), bool inverse=false)</argsstring>
        <name>GetOpName</name>
        <param>
          <type>const <ref refid="class_usd_geom_xform_op_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">Type</ref></type>
          <declname>opType</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>opSuffix</declname>
          <defval><ref refid="class_tf_token" kindref="compound">TfToken</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>inverse</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Returns the xformOp&apos;s name as it appears in xformOpOrder, given the opType, the (optional) suffix and whether it is an inverse operation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformOp.h" line="212" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Data Encoding Queries</header>
      <memberdef kind="function" id="class_usd_geom_xform_op_1a89dc5799c48603b2bc539ae58039d0db" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_usd_geom_xform_op_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">Type</ref></type>
        <definition>Type GetOpType</definition>
        <argsstring>() const</argsstring>
        <name>GetOpType</name>
        <briefdescription>
<para>Return the operation type of this op, one of <ref refid="class_usd_geom_xform_op_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">UsdGeomXformOp::Type</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformOp.h" line="221" column="1" bodyfile="pxr/usd/usdGeom/xformOp.h" bodystart="221" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_op_1a4e881160d64de62769c722e9f7abb827" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API <ref refid="class_usd_geom_xform_op_1ad1fbd6a28bdb0f04414d526ebeaed0e2" kindref="member">Precision</ref></type>
        <definition>USDGEOM_API Precision GetPrecision</definition>
        <argsstring>() const</argsstring>
        <name>GetPrecision</name>
        <briefdescription>
<para>Returns the precision level of the xform op. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformOp.h" line="227" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_op_1a51af6b8bd9c89367cd949cd979819bb9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsInverseOp</definition>
        <argsstring>() const</argsstring>
        <name>IsInverseOp</name>
        <briefdescription>
<para>Returns whether the xformOp represents an inverse operation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformOp.h" line="230" column="1" bodyfile="pxr/usd/usdGeom/xformOp.h" bodystart="230" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_op_1abfd5e5477d0d7c83d4a3a6530a46826b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>USDGEOM_API TfToken GetOpName</definition>
        <argsstring>() const</argsstring>
        <name>GetOpName</name>
        <briefdescription>
<para>Returns the opName as it appears in the xformOpOrder attribute. </para>
        </briefdescription>
        <detaileddescription>
<para>This will begin with &quot;!invert!:xformOp:&quot; if it is an inverse xform operation. If it is not an inverse xformOp, it will begin with &apos;xformOp:&apos;.</para>
<para>This will be empty for an invalid xformOp. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformOp.h" line="242" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_op_1a262c8203955bc42e286ef64eb5011065" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API bool</type>
        <definition>USDGEOM_API bool HasSuffix</definition>
        <argsstring>(TfToken const &amp;suffix) const</argsstring>
        <name>HasSuffix</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>suffix</declname>
        </param>
        <briefdescription>
<para>Does this op have the given suffix in its name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformOp.h" line="246" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Computing with Ops</header>
      <memberdef kind="function" id="class_usd_geom_xform_op_1ae1b3ee4d70c8841d7552fe9b10fef53a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool GetAs</definition>
        <argsstring>(T *value, UsdTimeCode time) const</argsstring>
        <name>GetAs</name>
        <param>
          <type>T *</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>We allow ops to be encoded with varying degrees of precision, depending on the clients needs and constraints. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_usd_geom_xform_op_1ae1b3ee4d70c8841d7552fe9b10fef53a" kindref="member">GetAs()</ref> will attempt to convert the stored data to the requested datatype.</para>
<para>Note this accessor incurs some overhead beyond <ref refid="class_usd_geom_xform_op_1a9d41bc223be86408ba7d7f74df7c35a9" kindref="member">Get()</ref>&apos;ing the value as a <ref refid="class_vt_value" kindref="compound">VtValue</ref> and dealing with the results yourself.</para>
<para><simplesect kind="return"><para>true if a value was successfully read <emphasis>and</emphasis> converted to the requested datatype (see <ref refid="class_vt_value_1accc74126cbf58e5879dfc3b1ce788803" kindref="member">VtValue::Cast()</ref>), false otherwise. A problem reading or failure to convert will cause an error to be emitted.</para>
</simplesect>
<simplesect kind="note"><para>the requested type <computeroutput>T</computeroutput> must be constructable by assignment </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformOp.h" line="266" column="1" bodyfile="pxr/usd/usdGeom/xformOp.h" bodystart="266" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_op_1a54ba8c5f2962b346f3c2873f2b6ff07e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref></type>
        <definition>USDGEOM_API GfMatrix4d GetOpTransform</definition>
        <argsstring>(UsdTimeCode time) const</argsstring>
        <name>GetOpTransform</name>
        <param>
          <type><ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Return the 4x4 matrix that applies the transformation encoded in this op at <computeroutput>time</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the identity matrix and issues a coding error if the op is invalid.</para>
<para>If the op is valid, but has no authored value, the identity matrix is returned and no error is issued. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformOp.h" line="309" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_op_1a94ec81a7d69b48d993f7e814d107d4d7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool MightBeTimeVarying</definition>
        <argsstring>() const</argsstring>
        <name>MightBeTimeVarying</name>
        <briefdescription>
<para>Determine whether there is any possibility that this op&apos;s value may vary over time. </para>
        </briefdescription>
        <detaileddescription>
<para>The determination is based on a snapshot of the authored state of the op, and may become invalid in the face of further authoring. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformOp.h" line="316" column="1" bodyfile="pxr/usd/usdGeom/xformOp.h" bodystart="316" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_op_1a4eba3e8ff2317982f9bf0bccb7626a2b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref></type>
        <definition>static USDGEOM_API GfMatrix4d GetOpTransform</definition>
        <argsstring>(Type const opType, VtValue const &amp;opVal, bool isInverseOp=false)</argsstring>
        <name>GetOpTransform</name>
        <param>
          <type><ref refid="class_usd_geom_xform_op_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">Type</ref> const</type>
          <declname>opType</declname>
        </param>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>opVal</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isInverseOp</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Return the 4x4 matrix that applies the transformation encoded by op <computeroutput>opType</computeroutput> and data value <computeroutput>opVal</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>isInverseOp</computeroutput> is true, then the inverse of the tranformation represented by the op/value pair is returned.</para>
<para>An error will be issued if <computeroutput>opType</computeroutput> is not one of the values in the enum <ref refid="class_usd_geom_xform_op_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">UsdGeomXformOp::Type</ref> or if <computeroutput>opVal</computeroutput> cannot be converted to a suitable input to <computeroutput>opType</computeroutput> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformOp.h" line="294" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>UsdAttribute API</header>
      <memberdef kind="friend" id="class_usd_geom_xform_op_1a382ac241b44ca32d6f5759eb22328083" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class UsdGeomXformable</definition>
        <argsstring></argsstring>
        <name>UsdGeomXformable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformOp.h" line="438" column="1" bodyfile="pxr/usd/usdGeom/xformOp.h" bodystart="438" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_usd_geom_xform_op_1a02f855d3ed19143f23eff7df2a553f52" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const UsdGeomXformOp &amp;lhs, const UsdGeomXformOp &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_usd_geom_xform_op" kindref="compound">UsdGeomXformOp</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_geom_xform_op" kindref="compound">UsdGeomXformOp</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Equality comparison. </para>
        </briefdescription>
        <detaileddescription>
<para>Return true if <emphasis>lhs</emphasis> and <emphasis>rhs</emphasis> represent the same underlying <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref>, false otherwise. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformOp.h" line="350" column="1" bodyfile="pxr/usd/usdGeom/xformOp.h" bodystart="350" bodyend="353"/>
      </memberdef>
      <memberdef kind="friend" id="class_usd_geom_xform_op_1a2bac8bb7b66b79ed9bb2e70fd1e748d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const UsdGeomXformOp &amp;lhs, const UsdGeomXformOp &amp;rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_usd_geom_xform_op" kindref="compound">UsdGeomXformOp</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_geom_xform_op" kindref="compound">UsdGeomXformOp</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Inequality comparison. </para>
        </briefdescription>
        <detaileddescription>
<para>Return false if <emphasis>lhs</emphasis> and <emphasis>rhs</emphasis> represent the same underlying <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref>, true otherwise. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformOp.h" line="357" column="1" bodyfile="pxr/usd/usdGeom/xformOp.h" bodystart="357" bodyend="360"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_geom_xform_op_1a3c2895fdfd8b298cb3e21dc5fcd949e9" prot="private" static="no" mutable="yes">
        <type>std::variant&lt; <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref>, <ref refid="class_usd_attribute_query" kindref="compound">UsdAttributeQuery</ref> &gt;</type>
        <definition>std::variant&lt;UsdAttribute, UsdAttributeQuery&gt; _attr</definition>
        <argsstring></argsstring>
        <name>_attr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformOp.h" line="490" column="1" bodyfile="pxr/usd/usdGeom/xformOp.h" bodystart="490" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_geom_xform_op_1ad4633f91e6e0c52d613ee37e3aa4b88d" prot="private" static="no" mutable="no">
        <type><ref refid="class_usd_geom_xform_op_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">Type</ref></type>
        <definition>Type _opType</definition>
        <argsstring></argsstring>
        <name>_opType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformOp.h" line="492" column="1" bodyfile="pxr/usd/usdGeom/xformOp.h" bodystart="492" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_geom_xform_op_1a42d39a9f96792b2eb14c1fea2d6488bf" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool _isInverseOp</definition>
        <argsstring></argsstring>
        <name>_isInverseOp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformOp.h" line="493" column="1" bodyfile="pxr/usd/usdGeom/xformOp.h" bodystart="493" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_op_1aa7de176ee0f6bf8890f1812e93e43ce7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>operator UsdAttribute const &amp;</definition>
        <argsstring>() const</argsstring>
        <name>operator UsdAttribute const &amp;</name>
        <briefdescription>
<para>Allow <ref refid="class_usd_geom_xform_op" kindref="compound">UsdGeomXformOp</ref> to auto-convert to <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref>, so you can pass a <ref refid="class_usd_geom_xform_op" kindref="compound">UsdGeomXformOp</ref> to any function that accepts a <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref> or const-ref thereto. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformOp.h" line="327" column="1" bodyfile="pxr/usd/usdGeom/xformOp.h" bodystart="327" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_op_1a1d68bd302d71917d30a1ff9e4e30d220" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref> const  &amp;</type>
        <definition>UsdAttribute const&amp; GetAttr</definition>
        <argsstring>() const</argsstring>
        <name>GetAttr</name>
        <briefdescription>
<para>Explicit <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref> extractor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformOp.h" line="330" column="1" bodyfile="pxr/usd/usdGeom/xformOp.h" bodystart="330" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_op_1a87fbe0030c0fbb6307ee434664f1142f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsDefined</definition>
        <argsstring>() const</argsstring>
        <name>IsDefined</name>
        <briefdescription>
<para>Return true if the wrapped <ref refid="class_usd_property_1a409637b99e0b5b487b9e7d1d2016dbfc" kindref="member">UsdAttribute::IsDefined()</ref>, and in addition the attribute is identified as a XformOp. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformOp.h" line="336" column="1" bodyfile="pxr/usd/usdGeom/xformOp.h" bodystart="336" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_op_1a67b76affb3b5d35fa419ac234144038b" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><anchor id="class_usd_geom_xform_op_1UsdGeomXformOp_explicit_bool"/>Explicit bool conversion operator. An XformOp object converts to <computeroutput>true</computeroutput> iff it is valid for querying and authoring values and metadata, (which is identically equivalent to <ref refid="class_usd_geom_xform_op_1a87fbe0030c0fbb6307ee434664f1142f" kindref="member">IsDefined()</ref>), and converts to <computeroutput>false</computeroutput> otherwise. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformOp.h" line="344" column="1" bodyfile="pxr/usd/usdGeom/xformOp.h" bodystart="344" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_op_1a7e0e19c72edf9def26749f35edf63ba2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const  &amp;</type>
        <definition>TfToken const&amp; GetName</definition>
        <argsstring>() const</argsstring>
        <name>GetName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_usd_object_1ae57e12beedf10c423e11c5b889343f6d" kindref="member">UsdAttribute::GetName()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformOp.h" line="363" column="1" bodyfile="pxr/usd/usdGeom/xformOp.h" bodystart="363" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_op_1a06dcc2a106605fc3fcd2127a0a4f01c8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>TfToken GetBaseName</definition>
        <argsstring>() const</argsstring>
        <name>GetBaseName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_usd_property_1a2011318cd445c9fc30a1a00df5318a86" kindref="member">UsdAttribute::GetBaseName()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformOp.h" line="366" column="1" bodyfile="pxr/usd/usdGeom/xformOp.h" bodystart="366" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_op_1a676767b8647a9c3ab90e86c1f11836c5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>TfToken GetNamespace</definition>
        <argsstring>() const</argsstring>
        <name>GetNamespace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_usd_property_1a914ef5e6cffe6c3c85f7b1085bea0cf2" kindref="member">UsdAttribute::GetNamespace()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformOp.h" line="369" column="1" bodyfile="pxr/usd/usdGeom/xformOp.h" bodystart="369" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_op_1af9a0f70764746e029bfb439129de47dd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; SplitName</definition>
        <argsstring>() const</argsstring>
        <name>SplitName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_usd_property_1a7253ab8dc19d4e7540b49b70bcc82ff6" kindref="member">UsdAttribute::SplitName()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformOp.h" line="372" column="1" bodyfile="pxr/usd/usdGeom/xformOp.h" bodystart="372" bodyend="372"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_op_1ab7b5443a6619155d73db00d22419d361" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_sdf_value_type_name" kindref="compound">SdfValueTypeName</ref></type>
        <definition>SdfValueTypeName GetTypeName</definition>
        <argsstring>() const</argsstring>
        <name>GetTypeName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_usd_attribute_1a81ff07cc76cab8a0efd51b8938b9a124" kindref="member">UsdAttribute::GetTypeName()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformOp.h" line="375" column="1" bodyfile="pxr/usd/usdGeom/xformOp.h" bodystart="375" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_op_1a9d41bc223be86408ba7d7f74df7c35a9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool Get</definition>
        <argsstring>(T *value, UsdTimeCode time=UsdTimeCode::Default()) const</argsstring>
        <name>Get</name>
        <param>
          <type>T *</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>time</declname>
          <defval><ref refid="class_usd_time_code_1a8a2192045dc22e90fe08ef2d8d68f3b8" kindref="member">UsdTimeCode::Default</ref>()</defval>
        </param>
        <briefdescription>
<para>Get the attribute value of the XformOp at <computeroutput>time</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>For inverted ops, this returns the raw, uninverted value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformOp.h" line="382" column="1" bodyfile="pxr/usd/usdGeom/xformOp.h" bodystart="382" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_op_1aff4c54cde9338879d90c01ae44539b79" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool Set</definition>
        <argsstring>(T const &amp;value, UsdTimeCode time=UsdTimeCode::Default()) const</argsstring>
        <name>Set</name>
        <param>
          <type>T const &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>time</declname>
          <defval><ref refid="class_usd_time_code_1a8a2192045dc22e90fe08ef2d8d68f3b8" kindref="member">UsdTimeCode::Default</ref>()</defval>
        </param>
        <briefdescription>
<para>Set the attribute value of the XformOp at <computeroutput>time</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This only works on non-inverse operations. If invoked on an inverse xform operation, a coding error is issued and no value is authored. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformOp.h" line="393" column="1" bodyfile="pxr/usd/usdGeom/xformOp.h" bodystart="393" bodyend="404"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_op_1a7487a2b29821e919afeff2539fca53aa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool GetTimeSamples</definition>
        <argsstring>(std::vector&lt; double &gt; *times) const</argsstring>
        <name>GetTimeSamples</name>
        <param>
          <type>std::vector&lt; double &gt; *</type>
          <declname>times</declname>
        </param>
        <briefdescription>
<para>Populates the list of time samples at which the associated attribute is authored. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformOp.h" line="408" column="1" bodyfile="pxr/usd/usdGeom/xformOp.h" bodystart="408" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_op_1ae0689afaee4094043773ed6b5ceecdfb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool GetTimeSamplesInInterval</definition>
        <argsstring>(const GfInterval &amp;interval, std::vector&lt; double &gt; *times) const</argsstring>
        <name>GetTimeSamplesInInterval</name>
        <param>
          <type>const <ref refid="class_gf_interval" kindref="compound">GfInterval</ref> &amp;</type>
          <declname>interval</declname>
        </param>
        <param>
          <type>std::vector&lt; double &gt; *</type>
          <declname>times</declname>
        </param>
        <briefdescription>
<para>Populates the list of time samples within the given <computeroutput>interval</computeroutput>, at which the associated attribute is authored. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformOp.h" line="414" column="1" bodyfile="pxr/usd/usdGeom/xformOp.h" bodystart="414" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_op_1ad433226507000129f0fee215f213abe1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t GetNumTimeSamples</definition>
        <argsstring>() const</argsstring>
        <name>GetNumTimeSamples</name>
        <briefdescription>
<para>Returns the number of time samples authored for this xformOp. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformOp.h" line="421" column="1" bodyfile="pxr/usd/usdGeom/xformOp.h" bodystart="421" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_op_1a0967ef7db4107303d11b3b09d997658e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API</type>
        <definition>USDGEOM_API UsdGeomXformOp</definition>
        <argsstring>(const UsdAttribute &amp;attr, bool isInverseOp, _ValidAttributeTagType)</argsstring>
        <name>UsdGeomXformOp</name>
        <param>
          <type>const <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref> &amp;</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isInverseOp</declname>
        </param>
        <param>
          <type>_ValidAttributeTagType</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformOp.h" line="432" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_op_1a3ee3ae205708e3e54a98e526475b5fa9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API</type>
        <definition>USDGEOM_API UsdGeomXformOp</definition>
        <argsstring>(UsdAttributeQuery &amp;&amp;query, bool isInverseOp, _ValidAttributeTagType)</argsstring>
        <name>UsdGeomXformOp</name>
        <param>
          <type><ref refid="class_usd_attribute_query" kindref="compound">UsdAttributeQuery</ref> &amp;&amp;</type>
          <declname>query</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isInverseOp</declname>
        </param>
        <param>
          <type>_ValidAttributeTagType</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformOp.h" line="435" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_op_1a3238b0451c1c1f033b84632eba183439" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _Init</definition>
        <argsstring>()</argsstring>
        <name>_Init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformOp.h" line="441" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_op_1af42fa50d51154c4e12987d84b4b55bc5" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void _CreateAttributeQuery</definition>
        <argsstring>() const</argsstring>
        <name>_CreateAttributeQuery</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformOp.h" line="458" column="1" bodyfile="pxr/usd/usdGeom/xformOp.h" bodystart="458" bodyend="460"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_op_1ad09f18bb346fa028b883d18713ddb3a9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>UsdGeomXformOp</definition>
        <argsstring>(UsdPrim const &amp;prim, Type const opType, Precision const precision, TfToken const &amp;opSuffix=TfToken(), bool inverse=false)</argsstring>
        <name>UsdGeomXformOp</name>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type><ref refid="class_usd_geom_xform_op_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">Type</ref> const</type>
          <declname>opType</declname>
        </param>
        <param>
          <type><ref refid="class_usd_geom_xform_op_1ad1fbd6a28bdb0f04414d526ebeaed0e2" kindref="member">Precision</ref> const</type>
          <declname>precision</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>opSuffix</declname>
          <defval><ref refid="class_tf_token" kindref="compound">TfToken</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>inverse</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformOp.h" line="478" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_op_1a081f1e783cd1e778436c11d79f060648" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_usd_geom_xform_op_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">Type</ref></type>
        <definition>static Type _GetOpTypeEnumFromCString</definition>
        <argsstring>(char const *str, size_t len)</argsstring>
        <name>_GetOpTypeEnumFromCString</name>
        <param>
          <type>char const *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformOp.h" line="444" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_op_1afcaec28602e0c1551895997e2aea0fed" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>static UsdAttribute _GetXformOpAttr</definition>
        <argsstring>(UsdPrim const &amp;prim, const TfToken &amp;opName, bool *isInverseOp)</argsstring>
        <name>_GetXformOpAttr</name>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>opName</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>isInverseOp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformOp.h" line="453" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_usd_geom_xform_op_1a1d1cfd8ffb84e947f82999c682b666a7" prot="public" static="no" strong="no">
        <type></type>
        <name>Type</name>
        <enumvalue id="class_usd_geom_xform_op_1a1d1cfd8ffb84e947f82999c682b666a7a86717dfa3d5fa5eacae02cabc6fed662" prot="public">
          <name>TypeInvalid</name>
          <briefdescription>
<para>Represents an invalid xformOp. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_usd_geom_xform_op_1a1d1cfd8ffb84e947f82999c682b666a7a5262f108b2d4cd441b3d50a2ee27dacb" prot="public">
          <name>TypeTranslate</name>
          <briefdescription>
<para>XYZ translation. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_usd_geom_xform_op_1a1d1cfd8ffb84e947f82999c682b666a7a286eb93dc2d9d5482882fe7ba52d6c1c" prot="public">
          <name>TypeScale</name>
          <briefdescription>
<para>XYZ scale. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_usd_geom_xform_op_1a1d1cfd8ffb84e947f82999c682b666a7a5c8348695ec7f5bb1f837311452c403b" prot="public">
          <name>TypeRotateX</name>
          <briefdescription>
<para>Rotation about the X-axis, <bold>in degrees</bold>. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_usd_geom_xform_op_1a1d1cfd8ffb84e947f82999c682b666a7a0293ae4ea3618e2481d3d76855c832f7" prot="public">
          <name>TypeRotateY</name>
          <briefdescription>
<para>Rotation about the Y-axis, <bold>in degrees</bold>. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_usd_geom_xform_op_1a1d1cfd8ffb84e947f82999c682b666a7a581798df3919627cdd2e86a61471126f" prot="public">
          <name>TypeRotateZ</name>
          <briefdescription>
<para>Rotation about the Z-axis, <bold>in degrees</bold>. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_usd_geom_xform_op_1a1d1cfd8ffb84e947f82999c682b666a7a057f4c11feecb4b2c700b212762c07c0" prot="public">
          <name>TypeRotateXYZ</name>
          <briefdescription>
<para>Set of 3 canonical Euler rotations <ref refid="class_usd_geom_xform_op_1usdGeom_rotationPackingOrder" kindref="member">in XYZ order</ref>. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_usd_geom_xform_op_1a1d1cfd8ffb84e947f82999c682b666a7a9737c389b0fa8e5b89f169f2360d04e7" prot="public">
          <name>TypeRotateXZY</name>
          <briefdescription>
<para>Set of 3 canonical Euler rotations <ref refid="class_usd_geom_xform_op_1usdGeom_rotationPackingOrder" kindref="member">in XZY order</ref>. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_usd_geom_xform_op_1a1d1cfd8ffb84e947f82999c682b666a7aa94984ace8306c369a7b3b5d72ac1c69" prot="public">
          <name>TypeRotateYXZ</name>
          <briefdescription>
<para>Set of 3 canonical Euler rotations <ref refid="class_usd_geom_xform_op_1usdGeom_rotationPackingOrder" kindref="member">in YXZ order</ref>. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_usd_geom_xform_op_1a1d1cfd8ffb84e947f82999c682b666a7a895a42d100ed7417615d5683cc5bab37" prot="public">
          <name>TypeRotateYZX</name>
          <briefdescription>
<para>Set of 3 canonical Euler rotations <ref refid="class_usd_geom_xform_op_1usdGeom_rotationPackingOrder" kindref="member">in YZX order</ref>. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_usd_geom_xform_op_1a1d1cfd8ffb84e947f82999c682b666a7a92dde1de4de273425ed1a31bd2c010d3" prot="public">
          <name>TypeRotateZXY</name>
          <briefdescription>
<para>Set of 3 canonical Euler rotations <ref refid="class_usd_geom_xform_op_1usdGeom_rotationPackingOrder" kindref="member">in ZXY order</ref>. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_usd_geom_xform_op_1a1d1cfd8ffb84e947f82999c682b666a7a703239e777f6eb8d03e0a2d04e8a8a8b" prot="public">
          <name>TypeRotateZYX</name>
          <briefdescription>
<para>Set of 3 canonical Euler rotations <ref refid="class_usd_geom_xform_op_1usdGeom_rotationPackingOrder" kindref="member">in ZYX order</ref>. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_usd_geom_xform_op_1a1d1cfd8ffb84e947f82999c682b666a7a447d63dda7fd4b73924d2c699d32f713" prot="public">
          <name>TypeOrient</name>
          <briefdescription>
<para>Arbitrary axis/angle rotation, expressed as a quaternion. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_usd_geom_xform_op_1a1d1cfd8ffb84e947f82999c682b666a7a67ca464141862aa55350e564780a7297" prot="public">
          <name>TypeTransform</name>
          <briefdescription>
<para>A 4x4 matrix transformation. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enumerates the set of all transformation operation types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformOp.h" line="115" column="1" bodyfile="pxr/usd/usdGeom/xformOp.h" bodystart="115" bodyend="136"/>
      </memberdef>
      <memberdef kind="enum" id="class_usd_geom_xform_op_1ad1fbd6a28bdb0f04414d526ebeaed0e2" prot="public" static="no" strong="no">
        <type></type>
        <name>Precision</name>
        <enumvalue id="class_usd_geom_xform_op_1ad1fbd6a28bdb0f04414d526ebeaed0e2a5c205bb93ab724aad7931d0c2271fd9c" prot="public">
          <name>PrecisionDouble</name>
          <briefdescription>
<para>Double precision. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_usd_geom_xform_op_1ad1fbd6a28bdb0f04414d526ebeaed0e2a00752a6adacf6d7b01d8775399ecc06b" prot="public">
          <name>PrecisionFloat</name>
          <briefdescription>
<para>Floating-point precision. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_usd_geom_xform_op_1ad1fbd6a28bdb0f04414d526ebeaed0e2aec6f44b1c2e3267636659c8bd56e2d62" prot="public">
          <name>PrecisionHalf</name>
          <briefdescription>
<para>Half-float precision. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Precision with which the value of the tranformation operation is encoded. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformOp.h" line="139" column="1" bodyfile="pxr/usd/usdGeom/xformOp.h" bodystart="139" bodyend="143"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_usd_geom_xform_op_1af74fc188ea3742428f385d5c6218bb3e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdGeomXformOp</definition>
        <argsstring>()</argsstring>
        <name>UsdGeomXformOp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformOp.h" line="147" column="1" bodyfile="pxr/usd/usdGeom/xformOp.h" bodystart="147" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_op_1a1ddb68e82ebc291e452a1d3a33ee2503" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type>USDGEOM_API</type>
        <definition>USDGEOM_API UsdGeomXformOp</definition>
        <argsstring>(const UsdAttribute &amp;attr, bool isInverseOp=false)</argsstring>
        <name>UsdGeomXformOp</name>
        <param>
          <type>const <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref> &amp;</type>
          <declname>attr</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isInverseOp</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Speculative constructor that will produce a valid <ref refid="class_usd_geom_xform_op" kindref="compound">UsdGeomXformOp</ref> when <computeroutput>attr</computeroutput> already represents an attribute that is XformOp, and produces an <emphasis>invalid</emphasis> XformOp otherwise (i.e. </para>
        </briefdescription>
        <detaileddescription>
<para>explicit-bool conversion operator will return false).</para>
<para>Calling <computeroutput>UsdGeomXformOp::IsXformOp(attr)</computeroutput> will return the same truth value as this constructor, but if you plan to subsequently use the XformOp anyways, just use this constructor.</para>
<para><computeroutput>isInverseOp</computeroutput> is set to true to indicate an inverse transformation op.</para>
<para>This constructor exists mainly for internal use. Clients should use AddXformOp API (or one of Add*Op convenience API) to create and retain a copy of an <ref refid="class_usd_geom_xform_op" kindref="compound">UsdGeomXformOp</ref> object. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformOp.h" line="169" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Schema wrapper for <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref> for authoring and computing transformation operations, as consumed by <ref refid="class_usd_geom_xformable" kindref="compound">UsdGeomXformable</ref> schema. </para>
    </briefdescription>
    <detaileddescription>
<para>The semantics of an op are determined primarily by its name, which allows us to decode an op very efficiently. All ops are independent attributes, which must live in the &quot;xformOp&quot; property namespace. The op&apos;s primary name within the namespace must be one of <ref refid="xform_op_8h_1UsdGeomXformOpTypes" kindref="member">UsdGeomXformOpTypes</ref>, which determines the type of transformation operation, and its secondary name (or suffix) within the namespace (which is not required to exist), can be any name that distinguishes it from other ops of the same type. Suffixes are generally imposed by higer level xform API schemas.</para>
<para><anchor id="class_usd_geom_xform_op_1usdGeom_rotationPackingOrder"/><simplesect kind="note"><para><bold>On packing order of rotateABC triples</bold><linebreak/>
 The order in which the axis rotations are recorded in a Vec3* for the six <emphasis>rotateABC</emphasis> Euler triples <bold>is always the same:</bold> vec[0] = X, vec[1] = Y, vec[2] = Z . The <emphasis>A</emphasis>, <emphasis>B</emphasis>, <emphasis>C</emphasis> in the op name dictate the order in which their corresponding elements are consumed by the rotation, not how they are laid out. </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="pxr/usd/usdGeom/xformOp.h" line="111" column="1" bodyfile="pxr/usd/usdGeom/xformOp.h" bodystart="110" bodyend="605"/>
    <listofallmembers>
      <member refid="class_usd_geom_xform_op_1a3c2895fdfd8b298cb3e21dc5fcd949e9" prot="private" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>_attr</name></member>
      <member refid="class_usd_geom_xform_op_1af42fa50d51154c4e12987d84b4b55bc5" prot="private" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>_CreateAttributeQuery</name></member>
      <member refid="class_usd_geom_xform_op_1a081f1e783cd1e778436c11d79f060648" prot="private" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>_GetOpTypeEnumFromCString</name></member>
      <member refid="class_usd_geom_xform_op_1afcaec28602e0c1551895997e2aea0fed" prot="private" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>_GetXformOpAttr</name></member>
      <member refid="class_usd_geom_xform_op_1a3238b0451c1c1f033b84632eba183439" prot="private" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>_Init</name></member>
      <member refid="class_usd_geom_xform_op_1a42d39a9f96792b2eb14c1fea2d6488bf" prot="private" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>_isInverseOp</name></member>
      <member refid="class_usd_geom_xform_op_1ad4633f91e6e0c52d613ee37e3aa4b88d" prot="private" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>_opType</name></member>
      <member refid="class_usd_geom_xform_op_1a9d41bc223be86408ba7d7f74df7c35a9" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>Get</name></member>
      <member refid="class_usd_geom_xform_op_1ae1b3ee4d70c8841d7552fe9b10fef53a" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>GetAs</name></member>
      <member refid="class_usd_geom_xform_op_1a1d68bd302d71917d30a1ff9e4e30d220" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>GetAttr</name></member>
      <member refid="class_usd_geom_xform_op_1a06dcc2a106605fc3fcd2127a0a4f01c8" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>GetBaseName</name></member>
      <member refid="class_usd_geom_xform_op_1a7e0e19c72edf9def26749f35edf63ba2" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>GetName</name></member>
      <member refid="class_usd_geom_xform_op_1a676767b8647a9c3ab90e86c1f11836c5" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>GetNamespace</name></member>
      <member refid="class_usd_geom_xform_op_1ad433226507000129f0fee215f213abe1" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>GetNumTimeSamples</name></member>
      <member refid="class_usd_geom_xform_op_1a4caf207d30952b0f336425300421322e" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>GetOpName</name></member>
      <member refid="class_usd_geom_xform_op_1abfd5e5477d0d7c83d4a3a6530a46826b" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>GetOpName</name></member>
      <member refid="class_usd_geom_xform_op_1a4eba3e8ff2317982f9bf0bccb7626a2b" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>GetOpTransform</name></member>
      <member refid="class_usd_geom_xform_op_1a54ba8c5f2962b346f3c2873f2b6ff07e" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>GetOpTransform</name></member>
      <member refid="class_usd_geom_xform_op_1a89dc5799c48603b2bc539ae58039d0db" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>GetOpType</name></member>
      <member refid="class_usd_geom_xform_op_1a93a50ecd13ba1e0ff59dbe3a1969e78a" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>GetOpTypeEnum</name></member>
      <member refid="class_usd_geom_xform_op_1ad16e3b21531794e7f5ba903d4e653d79" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>GetOpTypeToken</name></member>
      <member refid="class_usd_geom_xform_op_1a4e881160d64de62769c722e9f7abb827" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>GetPrecision</name></member>
      <member refid="class_usd_geom_xform_op_1afafd7f87008cf957acf4d93a5a2bf5bf" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>GetPrecisionFromValueTypeName</name></member>
      <member refid="class_usd_geom_xform_op_1a7487a2b29821e919afeff2539fca53aa" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>GetTimeSamples</name></member>
      <member refid="class_usd_geom_xform_op_1ae0689afaee4094043773ed6b5ceecdfb" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>GetTimeSamplesInInterval</name></member>
      <member refid="class_usd_geom_xform_op_1ab7b5443a6619155d73db00d22419d361" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>GetTypeName</name></member>
      <member refid="class_usd_geom_xform_op_1a21978b284074caeb4651eba2081e31ed" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>GetValueTypeName</name></member>
      <member refid="class_usd_geom_xform_op_1a262c8203955bc42e286ef64eb5011065" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>HasSuffix</name></member>
      <member refid="class_usd_geom_xform_op_1a87fbe0030c0fbb6307ee434664f1142f" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>IsDefined</name></member>
      <member refid="class_usd_geom_xform_op_1a51af6b8bd9c89367cd949cd979819bb9" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>IsInverseOp</name></member>
      <member refid="class_usd_geom_xform_op_1a822e612fbe6e8291bbd7170044574912" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>IsXformOp</name></member>
      <member refid="class_usd_geom_xform_op_1ae6a92954e06e290c3f6c88333c3c67ac" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>IsXformOp</name></member>
      <member refid="class_usd_geom_xform_op_1a94ec81a7d69b48d993f7e814d107d4d7" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>MightBeTimeVarying</name></member>
      <member refid="class_usd_geom_xform_op_1a67b76affb3b5d35fa419ac234144038b" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>operator bool</name></member>
      <member refid="class_usd_geom_xform_op_1aa7de176ee0f6bf8890f1812e93e43ce7" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>operator UsdAttribute const &amp;</name></member>
      <member refid="class_usd_geom_xform_op_1a2bac8bb7b66b79ed9bb2e70fd1e748d7" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>operator!=</name></member>
      <member refid="class_usd_geom_xform_op_1a02f855d3ed19143f23eff7df2a553f52" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>operator==</name></member>
      <member refid="class_usd_geom_xform_op_1ad1fbd6a28bdb0f04414d526ebeaed0e2" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>Precision</name></member>
      <member refid="class_usd_geom_xform_op_1ad1fbd6a28bdb0f04414d526ebeaed0e2a5c205bb93ab724aad7931d0c2271fd9c" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>PrecisionDouble</name></member>
      <member refid="class_usd_geom_xform_op_1ad1fbd6a28bdb0f04414d526ebeaed0e2a00752a6adacf6d7b01d8775399ecc06b" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>PrecisionFloat</name></member>
      <member refid="class_usd_geom_xform_op_1ad1fbd6a28bdb0f04414d526ebeaed0e2aec6f44b1c2e3267636659c8bd56e2d62" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>PrecisionHalf</name></member>
      <member refid="class_usd_geom_xform_op_1aff4c54cde9338879d90c01ae44539b79" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>Set</name></member>
      <member refid="class_usd_geom_xform_op_1af9a0f70764746e029bfb439129de47dd" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>SplitName</name></member>
      <member refid="class_usd_geom_xform_op_1a1d1cfd8ffb84e947f82999c682b666a7" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>Type</name></member>
      <member refid="class_usd_geom_xform_op_1a1d1cfd8ffb84e947f82999c682b666a7a86717dfa3d5fa5eacae02cabc6fed662" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>TypeInvalid</name></member>
      <member refid="class_usd_geom_xform_op_1a1d1cfd8ffb84e947f82999c682b666a7a447d63dda7fd4b73924d2c699d32f713" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>TypeOrient</name></member>
      <member refid="class_usd_geom_xform_op_1a1d1cfd8ffb84e947f82999c682b666a7a5c8348695ec7f5bb1f837311452c403b" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>TypeRotateX</name></member>
      <member refid="class_usd_geom_xform_op_1a1d1cfd8ffb84e947f82999c682b666a7a057f4c11feecb4b2c700b212762c07c0" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>TypeRotateXYZ</name></member>
      <member refid="class_usd_geom_xform_op_1a1d1cfd8ffb84e947f82999c682b666a7a9737c389b0fa8e5b89f169f2360d04e7" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>TypeRotateXZY</name></member>
      <member refid="class_usd_geom_xform_op_1a1d1cfd8ffb84e947f82999c682b666a7a0293ae4ea3618e2481d3d76855c832f7" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>TypeRotateY</name></member>
      <member refid="class_usd_geom_xform_op_1a1d1cfd8ffb84e947f82999c682b666a7aa94984ace8306c369a7b3b5d72ac1c69" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>TypeRotateYXZ</name></member>
      <member refid="class_usd_geom_xform_op_1a1d1cfd8ffb84e947f82999c682b666a7a895a42d100ed7417615d5683cc5bab37" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>TypeRotateYZX</name></member>
      <member refid="class_usd_geom_xform_op_1a1d1cfd8ffb84e947f82999c682b666a7a581798df3919627cdd2e86a61471126f" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>TypeRotateZ</name></member>
      <member refid="class_usd_geom_xform_op_1a1d1cfd8ffb84e947f82999c682b666a7a92dde1de4de273425ed1a31bd2c010d3" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>TypeRotateZXY</name></member>
      <member refid="class_usd_geom_xform_op_1a1d1cfd8ffb84e947f82999c682b666a7a703239e777f6eb8d03e0a2d04e8a8a8b" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>TypeRotateZYX</name></member>
      <member refid="class_usd_geom_xform_op_1a1d1cfd8ffb84e947f82999c682b666a7a286eb93dc2d9d5482882fe7ba52d6c1c" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>TypeScale</name></member>
      <member refid="class_usd_geom_xform_op_1a1d1cfd8ffb84e947f82999c682b666a7a67ca464141862aa55350e564780a7297" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>TypeTransform</name></member>
      <member refid="class_usd_geom_xform_op_1a1d1cfd8ffb84e947f82999c682b666a7a5262f108b2d4cd441b3d50a2ee27dacb" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>TypeTranslate</name></member>
      <member refid="class_usd_geom_xform_op_1a382ac241b44ca32d6f5759eb22328083" prot="private" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>UsdGeomXformable</name></member>
      <member refid="class_usd_geom_xform_op_1af74fc188ea3742428f385d5c6218bb3e" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>UsdGeomXformOp</name></member>
      <member refid="class_usd_geom_xform_op_1a1ddb68e82ebc291e452a1d3a33ee2503" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>UsdGeomXformOp</name></member>
      <member refid="class_usd_geom_xform_op_1a0967ef7db4107303d11b3b09d997658e" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>UsdGeomXformOp</name></member>
      <member refid="class_usd_geom_xform_op_1a3ee3ae205708e3e54a98e526475b5fa9" prot="public" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>UsdGeomXformOp</name></member>
      <member refid="class_usd_geom_xform_op_1ad09f18bb346fa028b883d18713ddb3a9" prot="private" virt="non-virtual"><scope>UsdGeomXformOp</scope><name>UsdGeomXformOp</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
