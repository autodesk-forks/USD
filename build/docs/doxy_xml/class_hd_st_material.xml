<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hd_st_material" kind="class" language="C++" prot="public" final="yes">
    <compoundname>HdStMaterial</compoundname>
    <basecompoundref refid="class_hd_material" prot="public" virt="non-virtual">HdMaterial</basecompoundref>
    <innerclass refid="struct_hd_st_material_1_1_volume_material_data" prot="public">HdStMaterial::VolumeMaterialData</innerclass>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_hd_st_material_1a619a3087953714a773319a081fe8de06" prot="private" static="yes" mutable="no">
        <type><ref refid="class_hio_glslfx" kindref="compound">HioGlslfx</ref> *</type>
        <definition>HioGlslfx* _fallbackGlslfx</definition>
        <argsstring></argsstring>
        <name>_fallbackGlslfx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/material.h" line="130" column="1" bodyfile="pxr/imaging/hdSt/material.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hd_st_material_1a4b53c135b6c5196c903e1de38341ecf2" prot="private" static="no" mutable="no">
        <type>HdSt_MaterialNetworkShaderSharedPtr</type>
        <definition>HdSt_MaterialNetworkShaderSharedPtr _materialNetworkShader</definition>
        <argsstring></argsstring>
        <name>_materialNetworkShader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/material.h" line="132" column="1" bodyfile="pxr/imaging/hdSt/material.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_material_1a7bb8d2be15aa4614a2ba80626a71876c" prot="private" static="no" mutable="no">
        <type><ref refid="struct_hd_st_material_1_1_volume_material_data" kindref="compound">VolumeMaterialData</ref></type>
        <definition>VolumeMaterialData _volumeMaterialData</definition>
        <argsstring></argsstring>
        <name>_volumeMaterialData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/material.h" line="133" column="1" bodyfile="pxr/imaging/hdSt/material.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_material_1a936355c3c5cac024bb507a5870bae3e3" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool _isInitialized</definition>
        <argsstring></argsstring>
        <name>_isInitialized</name>
        <bitfield> 1</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/material.h" line="135" column="1" bodyfile="pxr/imaging/hdSt/material.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_material_1abfd7793af20d5bf40d1f42aad396592c" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool _hasPtex</definition>
        <argsstring></argsstring>
        <name>_hasPtex</name>
        <bitfield> 1</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/material.h" line="136" column="1" bodyfile="pxr/imaging/hdSt/material.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_material_1aec28e7d2fbf86044e2106318197d857f" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool _hasLimitSurfaceEvaluation</definition>
        <argsstring></argsstring>
        <name>_hasLimitSurfaceEvaluation</name>
        <bitfield> 1</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/material.h" line="137" column="1" bodyfile="pxr/imaging/hdSt/material.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_material_1aa0edb973534cb6acde34fd884db25f38" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool _hasDisplacement</definition>
        <argsstring></argsstring>
        <name>_hasDisplacement</name>
        <bitfield> 1</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/material.h" line="138" column="1" bodyfile="pxr/imaging/hdSt/material.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_material_1a25b7c5f2be06279b7629babddffc24e0" prot="private" static="no" mutable="no">
        <type><ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>TfToken _materialTag</definition>
        <argsstring></argsstring>
        <name>_materialTag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/material.h" line="140" column="1" bodyfile="pxr/imaging/hdSt/material.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_material_1addbe31f0516c4f34dfcc8e82cb328c81" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t _textureHash</definition>
        <argsstring></argsstring>
        <name>_textureHash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/material.h" line="141" column="1" bodyfile="pxr/imaging/hdSt/material.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_material_1ac109cd9ee754666401d3de9d488c0ade" prot="private" static="no" mutable="no">
        <type><ref refid="class_hd_st_material_network" kindref="compound">HdStMaterialNetwork</ref></type>
        <definition>HdStMaterialNetwork _networkProcessor</definition>
        <argsstring></argsstring>
        <name>_networkProcessor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/material.h" line="143" column="1" bodyfile="pxr/imaging/hdSt/material.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hd_st_material_1acf7e1a16449d808cf50e4f40d904f2f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HF_MALLOC_TAG_NEW</definition>
        <argsstring>(&quot;new HdStMaterial&quot;)</argsstring>
        <name>HF_MALLOC_TAG_NEW</name>
        <param>
          <type>&quot;new HdStMaterial&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/material.h" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_material_1aa13fafb9fabff2e5adf57543461d155d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API</type>
        <definition>HDST_API HdStMaterial</definition>
        <argsstring>(SdfPath const &amp;id)</argsstring>
        <name>HdStMaterial</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/material.h" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_material_1a904b8e7336dca01e91594e5f296f675a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API</type>
        <definition>HDST_API ~HdStMaterial</definition>
        <argsstring>() override</argsstring>
        <name>~HdStMaterial</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/material.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_material_1a1ff320f5516aeeb22fb8316c87ce08de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void Sync</definition>
        <argsstring>(HdSceneDelegate *sceneDelegate, HdRenderParam *renderParam, HdDirtyBits *dirtyBits) override</argsstring>
        <name>Sync</name>
        <param>
          <type><ref refid="class_hd_scene_delegate" kindref="compound">HdSceneDelegate</ref> *</type>
          <declname>sceneDelegate</declname>
        </param>
        <param>
          <type><ref refid="class_hd_render_param" kindref="compound">HdRenderParam</ref> *</type>
          <declname>renderParam</declname>
        </param>
        <param>
          <type>HdDirtyBits *</type>
          <declname>dirtyBits</declname>
        </param>
        <briefdescription>
<para>Synchronizes state from the delegate to this object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/material.h" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_material_1afacd7217dce1f83fe450e78b1624a8b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void Finalize</definition>
        <argsstring>(HdRenderParam *renderParam) override</argsstring>
        <name>Finalize</name>
        <param>
          <type><ref refid="class_hd_render_param" kindref="compound">HdRenderParam</ref> *</type>
          <declname>renderParam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/material.h" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_material_1a59b589b9042f2173054e853d4d58036f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API HdDirtyBits</type>
        <definition>HDST_API HdDirtyBits GetInitialDirtyBitsMask</definition>
        <argsstring>() const override</argsstring>
        <name>GetInitialDirtyBitsMask</name>
        <briefdescription>
<para>Returns the minimal set of dirty bits to place in the change tracker for use in the first sync of this prim. </para>
        </briefdescription>
        <detaileddescription>
<para>Typically this would be all dirty bits. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/material.h" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_material_1ae5a2804d4345899d7368198926a37fee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API HdSt_MaterialNetworkShaderSharedPtr</type>
        <definition>HDST_API HdSt_MaterialNetworkShaderSharedPtr GetMaterialNetworkShader</definition>
        <argsstring>() const</argsstring>
        <name>GetMaterialNetworkShader</name>
        <briefdescription>
<para>Obtains the GLSLFX code together with supporting information such as material params and textures to render surfaces. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/material.h" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_material_1a0666e2dc8b1a4c509c918c8e1b138ee4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="struct_hd_st_material_1_1_volume_material_data" kindref="compound">VolumeMaterialData</ref> &amp;</type>
        <definition>const HdStMaterial::VolumeMaterialData &amp; GetVolumeMaterialData</definition>
        <argsstring>() const</argsstring>
        <name>GetVolumeMaterialData</name>
        <briefdescription>
<para>Obtains the GLSLFLX code together with material params to render volumes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/material.h" line="86" column="1" bodyfile="pxr/imaging/hdSt/material.h" bodystart="167" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_material_1aad804a83b74f0aaed946c2f43bb93cda" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool HasPtex</definition>
        <argsstring>() const</argsstring>
        <name>HasPtex</name>
        <briefdescription>
<para>Summary flag. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns true if the material is bound to one or more textures and any of those textures is a ptex texture. If no textures are bound or all textures are uv textures, then the method returns false. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/material.h" line="92" column="1" bodyfile="pxr/imaging/hdSt/material.h" bodystart="146" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_material_1ac7906a0f92604e627753c446a9ef9994" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool HasLimitSurfaceEvaluation</definition>
        <argsstring>() const</argsstring>
        <name>HasLimitSurfaceEvaluation</name>
        <briefdescription>
<para>Returns true if the material specifies limit surface evaluation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/material.h" line="95" column="1" bodyfile="pxr/imaging/hdSt/material.h" bodystart="151" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_material_1a84c607eca6f2430b24da616b38d65b53" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool HasDisplacement</definition>
        <argsstring>() const</argsstring>
        <name>HasDisplacement</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/material.h" line="98" column="1" bodyfile="pxr/imaging/hdSt/material.h" bodystart="156" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_material_1a230842880f764ec897f0274fd781c97a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
        <definition>const TfToken &amp; GetMaterialTag</definition>
        <argsstring>() const</argsstring>
        <name>GetMaterialTag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/material.h" line="101" column="1" bodyfile="pxr/imaging/hdSt/material.h" bodystart="161" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_material_1ab611767d2f67f97fcf8b339553338c3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void SetMaterialNetworkShader</definition>
        <argsstring>(HdSt_MaterialNetworkShaderSharedPtr &amp;shaderCode)</argsstring>
        <name>SetMaterialNetworkShader</name>
        <param>
          <type>HdSt_MaterialNetworkShaderSharedPtr &amp;</type>
          <declname>shaderCode</declname>
        </param>
        <briefdescription>
<para>Replaces the shader code object with an externally created one Used to set the fallback shader for prim. </para>
        </briefdescription>
        <detaileddescription>
<para>This class takes ownership of the passed in object. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/material.h" line="107" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_hd_st_material_1a938cb93e8cbfe79a44461914c60a1111" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _ProcessTextureDescriptors</definition>
        <argsstring>(HdSceneDelegate *sceneDelegate, HdStResourceRegistrySharedPtr const &amp;resourceRegistry, std::weak_ptr&lt; HdStShaderCode &gt; const &amp;shaderCode, HdStMaterialNetwork::TextureDescriptorVector const &amp;descs, HdStShaderCode::NamedTextureHandleVector *texturesFromStorm, HdBufferSpecVector *specs, HdBufferSourceSharedPtrVector *sources)</argsstring>
        <name>_ProcessTextureDescriptors</name>
        <param>
          <type><ref refid="class_hd_scene_delegate" kindref="compound">HdSceneDelegate</ref> *</type>
          <declname>sceneDelegate</declname>
        </param>
        <param>
          <type>HdStResourceRegistrySharedPtr const &amp;</type>
          <declname>resourceRegistry</declname>
        </param>
        <param>
          <type>std::weak_ptr&lt; <ref refid="class_hd_st_shader_code" kindref="compound">HdStShaderCode</ref> &gt; const &amp;</type>
          <declname>shaderCode</declname>
        </param>
        <param>
          <type>HdStMaterialNetwork::TextureDescriptorVector const &amp;</type>
          <declname>descs</declname>
        </param>
        <param>
          <type>HdStShaderCode::NamedTextureHandleVector *</type>
          <declname>texturesFromStorm</declname>
        </param>
        <param>
          <type>HdBufferSpecVector *</type>
          <declname>specs</declname>
        </param>
        <param>
          <type>HdBufferSourceSharedPtrVector *</type>
          <declname>sources</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/material.h" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_material_1a8bc25e703d8214f494839041b17ac123" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool _GetHasLimitSurfaceEvaluation</definition>
        <argsstring>(VtDictionary const &amp;metadata) const</argsstring>
        <name>_GetHasLimitSurfaceEvaluation</name>
        <param>
          <type><ref refid="class_vt_dictionary" kindref="compound">VtDictionary</ref> const &amp;</type>
          <declname>metadata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/material.h" line="126" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_material_1a6a3ab52e48853ca949e7d8c9c6d32d13" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _InitFallbackShader</definition>
        <argsstring>()</argsstring>
        <name>_InitFallbackShader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/material.h" line="128" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3227">
        <label>HdSprim</label>
        <link refid="class_hd_sprim"/>
      </node>
      <node id="3225">
        <label>HdStMaterial</label>
        <childnode refid="3226" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3226">
        <label>HdMaterial</label>
        <link refid="class_hd_material"/>
        <childnode refid="3227" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3230">
        <label>HdSprim</label>
        <link refid="class_hd_sprim"/>
      </node>
      <node id="3228">
        <label>HdStMaterial</label>
        <childnode refid="3229" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3229">
        <label>HdMaterial</label>
        <link refid="class_hd_material"/>
        <childnode refid="3230" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/imaging/hdSt/material.h" line="44" column="1" bodyfile="pxr/imaging/hdSt/material.h" bodystart="43" bodyend="144"/>
    <listofallmembers>
      <member refid="class_hd_st_material_1a619a3087953714a773319a081fe8de06" prot="private" virt="non-virtual"><scope>HdStMaterial</scope><name>_fallbackGlslfx</name></member>
      <member refid="class_hd_st_material_1a8bc25e703d8214f494839041b17ac123" prot="private" virt="non-virtual"><scope>HdStMaterial</scope><name>_GetHasLimitSurfaceEvaluation</name></member>
      <member refid="class_hd_st_material_1aa0edb973534cb6acde34fd884db25f38" prot="private" virt="non-virtual"><scope>HdStMaterial</scope><name>_hasDisplacement</name></member>
      <member refid="class_hd_st_material_1aec28e7d2fbf86044e2106318197d857f" prot="private" virt="non-virtual"><scope>HdStMaterial</scope><name>_hasLimitSurfaceEvaluation</name></member>
      <member refid="class_hd_st_material_1abfd7793af20d5bf40d1f42aad396592c" prot="private" virt="non-virtual"><scope>HdStMaterial</scope><name>_hasPtex</name></member>
      <member refid="class_hd_st_material_1a6a3ab52e48853ca949e7d8c9c6d32d13" prot="private" virt="non-virtual"><scope>HdStMaterial</scope><name>_InitFallbackShader</name></member>
      <member refid="class_hd_st_material_1a936355c3c5cac024bb507a5870bae3e3" prot="private" virt="non-virtual"><scope>HdStMaterial</scope><name>_isInitialized</name></member>
      <member refid="class_hd_st_material_1a4b53c135b6c5196c903e1de38341ecf2" prot="private" virt="non-virtual"><scope>HdStMaterial</scope><name>_materialNetworkShader</name></member>
      <member refid="class_hd_st_material_1a25b7c5f2be06279b7629babddffc24e0" prot="private" virt="non-virtual"><scope>HdStMaterial</scope><name>_materialTag</name></member>
      <member refid="class_hd_st_material_1ac109cd9ee754666401d3de9d488c0ade" prot="private" virt="non-virtual"><scope>HdStMaterial</scope><name>_networkProcessor</name></member>
      <member refid="class_hd_st_material_1a938cb93e8cbfe79a44461914c60a1111" prot="private" virt="non-virtual"><scope>HdStMaterial</scope><name>_ProcessTextureDescriptors</name></member>
      <member refid="class_hd_st_material_1addbe31f0516c4f34dfcc8e82cb328c81" prot="private" virt="non-virtual"><scope>HdStMaterial</scope><name>_textureHash</name></member>
      <member refid="class_hd_st_material_1a7bb8d2be15aa4614a2ba80626a71876c" prot="private" virt="non-virtual"><scope>HdStMaterial</scope><name>_volumeMaterialData</name></member>
      <member refid="class_hd_material_1a2f2dbbbe47e871395a781c8105398c8fa6f2ec4167b47e7269ed7b56e1928e731" prot="public" virt="non-virtual"><scope>HdStMaterial</scope><name>AllDirty</name></member>
      <member refid="class_hd_material_1a2f2dbbbe47e871395a781c8105398c8faccea35f717039c64bc6ea05604ecddc0" prot="public" virt="non-virtual"><scope>HdStMaterial</scope><name>Clean</name></member>
      <member refid="class_hd_material_1a2f2dbbbe47e871395a781c8105398c8f" prot="public" virt="non-virtual"><scope>HdStMaterial</scope><name>DirtyBits</name></member>
      <member refid="class_hd_material_1a2f2dbbbe47e871395a781c8105398c8fae10a6f0d75a0571b8a6a5b77561740c6" prot="public" virt="non-virtual"><scope>HdStMaterial</scope><name>DirtyParams</name></member>
      <member refid="class_hd_material_1a2f2dbbbe47e871395a781c8105398c8fa201d4d579ea12dc1546f44b6ff0757e2" prot="public" virt="non-virtual"><scope>HdStMaterial</scope><name>DirtyResource</name></member>
      <member refid="class_hd_st_material_1afacd7217dce1f83fe450e78b1624a8b4" prot="public" virt="non-virtual"><scope>HdStMaterial</scope><name>Finalize</name></member>
      <member refid="class_hd_sprim_1a9301243d9273afcba6395e86047490ab" prot="public" virt="non-virtual"><scope>HdStMaterial</scope><name>GetId</name></member>
      <member refid="class_hd_st_material_1a59b589b9042f2173054e853d4d58036f" prot="public" virt="non-virtual"><scope>HdStMaterial</scope><name>GetInitialDirtyBitsMask</name></member>
      <member refid="class_hd_st_material_1ae5a2804d4345899d7368198926a37fee" prot="public" virt="non-virtual"><scope>HdStMaterial</scope><name>GetMaterialNetworkShader</name></member>
      <member refid="class_hd_st_material_1a230842880f764ec897f0274fd781c97a" prot="public" virt="non-virtual"><scope>HdStMaterial</scope><name>GetMaterialTag</name></member>
      <member refid="class_hd_st_material_1a0666e2dc8b1a4c509c918c8e1b138ee4" prot="public" virt="non-virtual"><scope>HdStMaterial</scope><name>GetVolumeMaterialData</name></member>
      <member refid="class_hd_st_material_1a84c607eca6f2430b24da616b38d65b53" prot="public" virt="non-virtual"><scope>HdStMaterial</scope><name>HasDisplacement</name></member>
      <member refid="class_hd_st_material_1ac7906a0f92604e627753c446a9ef9994" prot="public" virt="non-virtual"><scope>HdStMaterial</scope><name>HasLimitSurfaceEvaluation</name></member>
      <member refid="class_hd_st_material_1aad804a83b74f0aaed946c2f43bb93cda" prot="public" virt="non-virtual"><scope>HdStMaterial</scope><name>HasPtex</name></member>
      <member refid="class_hd_material_1a39ce31530d0d46c59c9078e9ac315d86" prot="protected" virt="non-virtual"><scope>HdStMaterial</scope><name>HdMaterial</name></member>
      <member refid="class_hd_sprim_1a15a586d4a5f4e5c4f4e0ae664914dd26" prot="public" virt="non-virtual"><scope>HdStMaterial</scope><name>HdSprim</name></member>
      <member refid="class_hd_st_material_1aa13fafb9fabff2e5adf57543461d155d" prot="public" virt="non-virtual"><scope>HdStMaterial</scope><name>HdStMaterial</name></member>
      <member refid="class_hd_st_material_1acf7e1a16449d808cf50e4f40d904f2f7" prot="public" virt="non-virtual"><scope>HdStMaterial</scope><name>HF_MALLOC_TAG_NEW</name></member>
      <member refid="class_hd_st_material_1ab611767d2f67f97fcf8b339553338c3d" prot="public" virt="non-virtual"><scope>HdStMaterial</scope><name>SetMaterialNetworkShader</name></member>
      <member refid="class_hd_st_material_1a1ff320f5516aeeb22fb8316c87ce08de" prot="public" virt="non-virtual"><scope>HdStMaterial</scope><name>Sync</name></member>
      <member refid="class_hd_material_1a90c61fe3f490b7fade6b83e42a6bd9ee" prot="public" virt="non-virtual"><scope>HdStMaterial</scope><name>~HdMaterial</name></member>
      <member refid="class_hd_sprim_1a35830c433fc9268fc4fe5ed23d8cc86b" prot="public" virt="virtual"><scope>HdStMaterial</scope><name>~HdSprim</name></member>
      <member refid="class_hd_st_material_1a904b8e7336dca01e91594e5f296f675a" prot="public" virt="non-virtual"><scope>HdStMaterial</scope><name>~HdStMaterial</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
