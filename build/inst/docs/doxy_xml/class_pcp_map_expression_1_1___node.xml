<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_pcp_map_expression_1_1___node" kind="class" language="C++" prot="private">
    <compoundname>PcpMapExpression::_Node</compoundname>
    <innerclass refid="struct_pcp_map_expression_1_1___node_1_1_key" prot="public">PcpMapExpression::_Node::Key</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_pcp_map_expression_1_1___node_1a24622b4aea8243b98a0a32361a91a70c" prot="public" static="no" mutable="no">
        <type>const Key</type>
        <definition>const Key key</definition>
        <argsstring></argsstring>
        <name>key</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/mapExpression.h" line="226" column="1" bodyfile="pxr/usd/pcp/mapExpression.h" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_pcp_map_expression_1_1___node_1a404c7988d3cc82441180f347eaf8fc9b" prot="public" static="no" mutable="no">
        <type>const bool</type>
        <definition>const bool expressionTreeAlwaysHasIdentity</definition>
        <argsstring></argsstring>
        <name>expressionTreeAlwaysHasIdentity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/mapExpression.h" line="230" column="1" bodyfile="pxr/usd/pcp/mapExpression.h" bodystart="230" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_pcp_map_expression_1_1___node_1a189dd9ab7431d8ac6edda1c7c94becb8" prot="private" static="yes" mutable="no">
        <type><ref refid="class_tf_static_data" kindref="compound">TfStaticData</ref>&lt; _NodeMap &gt;</type>
        <definition>TfStaticData&lt;_NodeMap&gt; _nodeRegistry</definition>
        <argsstring></argsstring>
        <name>_nodeRegistry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/mapExpression.h" line="268" column="1" bodyfile="pxr/usd/pcp/mapExpression.h" bodystart="267" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_pcp_map_expression_1_1___node_1ae1110471a435fa81496145a691d2c205" prot="private" static="no" mutable="yes">
        <type>tbb::atomic&lt; int &gt;</type>
        <definition>tbb::atomic&lt;int&gt; _refCount</definition>
        <argsstring></argsstring>
        <name>_refCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/mapExpression.h" line="270" column="1" bodyfile="pxr/usd/pcp/mapExpression.h" bodystart="270" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_pcp_map_expression_1_1___node_1af8258afd05c60e2537be43df439cf000" prot="private" static="no" mutable="yes">
        <type><ref refid="class_pcp_map_expression_1aadb3717979c36d83d423522671062c4b" kindref="member">Value</ref></type>
        <definition>Value _cachedValue</definition>
        <argsstring></argsstring>
        <name>_cachedValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/mapExpression.h" line="271" column="1" bodyfile="pxr/usd/pcp/mapExpression.h" bodystart="271" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_pcp_map_expression_1_1___node_1a10eadaf22f0beee8a341fef382c3a7f8" prot="private" static="no" mutable="yes">
        <type>std::set&lt; _Node * &gt;</type>
        <definition>std::set&lt;_Node*&gt; _dependentExpressions</definition>
        <argsstring></argsstring>
        <name>_dependentExpressions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/mapExpression.h" line="272" column="1" bodyfile="pxr/usd/pcp/mapExpression.h" bodystart="272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_pcp_map_expression_1_1___node_1ad9dfd81e1138612cc17faa3df190749b" prot="private" static="no" mutable="no">
        <type><ref refid="class_pcp_map_expression_1aadb3717979c36d83d423522671062c4b" kindref="member">Value</ref></type>
        <definition>Value _valueForVariable</definition>
        <argsstring></argsstring>
        <name>_valueForVariable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/mapExpression.h" line="273" column="1" bodyfile="pxr/usd/pcp/mapExpression.h" bodystart="273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_pcp_map_expression_1_1___node_1ab96aa337cf61e999f1eef79189970918" prot="private" static="no" mutable="yes">
        <type>tbb::spin_mutex</type>
        <definition>tbb::spin_mutex _mutex</definition>
        <argsstring></argsstring>
        <name>_mutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/mapExpression.h" line="274" column="1" bodyfile="pxr/usd/pcp/mapExpression.h" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_pcp_map_expression_1_1___node_1a79b55b58635cda84b880be2552b915cd" prot="private" static="no" mutable="yes">
        <type>std::atomic&lt; bool &gt;</type>
        <definition>std::atomic&lt;bool&gt; _hasCachedValue</definition>
        <argsstring></argsstring>
        <name>_hasCachedValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/mapExpression.h" line="275" column="1" bodyfile="pxr/usd/pcp/mapExpression.h" bodystart="275" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_pcp_map_expression_1_1___node_1acc6090436fdab91f2839582eda9cd048" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_Node</definition>
        <argsstring>(const _Node &amp;)=delete</argsstring>
        <name>_Node</name>
        <param>
          <type>const _Node &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/mapExpression.h" line="202" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_map_expression_1_1___node_1aee06d536e36874d59857e6dc3d4ff133" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>_Node &amp;</type>
        <definition>_Node&amp; operator=</definition>
        <argsstring>(const _Node &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const _Node &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/mapExpression.h" line="203" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_map_expression_1_1___node_1adc81d20809865d40b0ed0138f633d11b" prot="private" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>_Node</definition>
        <argsstring>(const Key &amp;key_)</argsstring>
        <name>_Node</name>
        <param>
          <type>const Key &amp;</type>
          <declname>key_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/mapExpression.h" line="252" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_map_expression_1_1___node_1a448674e8659a0e955e5f246347989fcb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _Invalidate</definition>
        <argsstring>()</argsstring>
        <name>_Invalidate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/mapExpression.h" line="253" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_map_expression_1_1___node_1a226ae85a489f258335e18077f3edebdd" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_pcp_map_expression_1aadb3717979c36d83d423522671062c4b" kindref="member">Value</ref></type>
        <definition>Value _EvaluateUncached</definition>
        <argsstring>() const</argsstring>
        <name>_EvaluateUncached</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/mapExpression.h" line="254" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_pcp_map_expression_1_1___node_1a0e1e8a7f00e0880ff617b24eb7749a54" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>_NodeRefPtr</type>
        <definition>static _NodeRefPtr New</definition>
        <argsstring>(_Op op, const _NodeRefPtr &amp;arg1=_NodeRefPtr(), const _NodeRefPtr &amp;arg2=_NodeRefPtr(), const Value &amp;valueForConstant=Value())</argsstring>
        <name>New</name>
        <param>
          <type>_Op</type>
          <declname>op</declname>
        </param>
        <param>
          <type>const _NodeRefPtr &amp;</type>
          <declname>arg1</declname>
          <defval>_NodeRefPtr()</defval>
        </param>
        <param>
          <type>const _NodeRefPtr &amp;</type>
          <declname>arg2</declname>
          <defval>_NodeRefPtr()</defval>
        </param>
        <param>
          <type>const <ref refid="class_pcp_map_expression_1aadb3717979c36d83d423522671062c4b" kindref="member">Value</ref> &amp;</type>
          <declname>valueForConstant</declname>
          <defval><ref refid="class_pcp_map_expression_1aadb3717979c36d83d423522671062c4b" kindref="member">Value</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/mapExpression.h" line="234" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_pcp_map_expression_1_1___node_1ac86f3f2c291e2fcce792ec99692e8840" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>~_Node</definition>
        <argsstring>()</argsstring>
        <name>~_Node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/mapExpression.h" line="238" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_map_expression_1_1___node_1a542a8c5b62adb64465668839654cfc6e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_pcp_map_expression_1aadb3717979c36d83d423522671062c4b" kindref="member">Value</ref> &amp;</type>
        <definition>const Value&amp; EvaluateAndCache</definition>
        <argsstring>() const</argsstring>
        <name>EvaluateAndCache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/mapExpression.h" line="241" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_map_expression_1_1___node_1abc864d71acf77204b250c98f1f6fb3f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetValueForVariable</definition>
        <argsstring>(Value &amp;&amp;newValue)</argsstring>
        <name>SetValueForVariable</name>
        <param>
          <type><ref refid="class_pcp_map_expression_1aadb3717979c36d83d423522671062c4b" kindref="member">Value</ref> &amp;&amp;</type>
          <declname>newValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/mapExpression.h" line="244" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_map_expression_1_1___node_1ac5865989f8a839100e2c20a1d8d2c8b0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_pcp_map_expression_1aadb3717979c36d83d423522671062c4b" kindref="member">Value</ref> &amp;</type>
        <definition>const Value&amp; GetValueForVariable</definition>
        <argsstring>() const</argsstring>
        <name>GetValueForVariable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/mapExpression.h" line="247" column="1" bodyfile="pxr/usd/pcp/mapExpression.h" bodystart="247" bodyend="249"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_pcp_map_expression_1_1___node_1a330bf1b1ccf051672e9c57cb2d325463" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool _ExpressionTreeAlwaysHasIdentity</definition>
        <argsstring>(const Key &amp;key)</argsstring>
        <name>_ExpressionTreeAlwaysHasIdentity</name>
        <param>
          <type>const Key &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/mapExpression.h" line="258" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_pcp_map_expression_1_1___node_1a4d46b46fe2fdba625d17dcf661632c43" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend PCP_API void</type>
        <definition>PCP_API void intrusive_ptr_add_ref</definition>
        <argsstring>(_Node *)</argsstring>
        <name>intrusive_ptr_add_ref</name>
        <param>
          <type>_Node *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/mapExpression.h" line="262" column="1"/>
      </memberdef>
      <memberdef kind="friend" id="class_pcp_map_expression_1_1___node_1a4b16acb3ea0f4c5f5afbfed658564710" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend PCP_API void</type>
        <definition>PCP_API void intrusive_ptr_release</definition>
        <argsstring>(_Node *)</argsstring>
        <name>intrusive_ptr_release</name>
        <param>
          <type>_Node *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/mapExpression.h" line="263" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pxr/usd/pcp/mapExpression.h" line="201" column="1" bodyfile="pxr/usd/pcp/mapExpression.h" bodystart="201" bodyend="276"/>
    <listofallmembers>
      <member refid="class_pcp_map_expression_1_1___node_1af8258afd05c60e2537be43df439cf000" prot="private" virt="non-virtual"><scope>PcpMapExpression::_Node</scope><name>_cachedValue</name></member>
      <member refid="class_pcp_map_expression_1_1___node_1a10eadaf22f0beee8a341fef382c3a7f8" prot="private" virt="non-virtual"><scope>PcpMapExpression::_Node</scope><name>_dependentExpressions</name></member>
      <member refid="class_pcp_map_expression_1_1___node_1a226ae85a489f258335e18077f3edebdd" prot="private" virt="non-virtual"><scope>PcpMapExpression::_Node</scope><name>_EvaluateUncached</name></member>
      <member refid="class_pcp_map_expression_1_1___node_1a330bf1b1ccf051672e9c57cb2d325463" prot="private" virt="non-virtual"><scope>PcpMapExpression::_Node</scope><name>_ExpressionTreeAlwaysHasIdentity</name></member>
      <member refid="class_pcp_map_expression_1_1___node_1a79b55b58635cda84b880be2552b915cd" prot="private" virt="non-virtual"><scope>PcpMapExpression::_Node</scope><name>_hasCachedValue</name></member>
      <member refid="class_pcp_map_expression_1_1___node_1a448674e8659a0e955e5f246347989fcb" prot="private" virt="non-virtual"><scope>PcpMapExpression::_Node</scope><name>_Invalidate</name></member>
      <member refid="class_pcp_map_expression_1_1___node_1ab96aa337cf61e999f1eef79189970918" prot="private" virt="non-virtual"><scope>PcpMapExpression::_Node</scope><name>_mutex</name></member>
      <member refid="class_pcp_map_expression_1_1___node_1acc6090436fdab91f2839582eda9cd048" prot="private" virt="non-virtual"><scope>PcpMapExpression::_Node</scope><name>_Node</name></member>
      <member refid="class_pcp_map_expression_1_1___node_1adc81d20809865d40b0ed0138f633d11b" prot="private" virt="non-virtual"><scope>PcpMapExpression::_Node</scope><name>_Node</name></member>
      <member refid="class_pcp_map_expression_1_1___node_1a189dd9ab7431d8ac6edda1c7c94becb8" prot="private" virt="non-virtual"><scope>PcpMapExpression::_Node</scope><name>_nodeRegistry</name></member>
      <member refid="class_pcp_map_expression_1_1___node_1ae1110471a435fa81496145a691d2c205" prot="private" virt="non-virtual"><scope>PcpMapExpression::_Node</scope><name>_refCount</name></member>
      <member refid="class_pcp_map_expression_1_1___node_1ad9dfd81e1138612cc17faa3df190749b" prot="private" virt="non-virtual"><scope>PcpMapExpression::_Node</scope><name>_valueForVariable</name></member>
      <member refid="class_pcp_map_expression_1_1___node_1a542a8c5b62adb64465668839654cfc6e" prot="public" virt="non-virtual"><scope>PcpMapExpression::_Node</scope><name>EvaluateAndCache</name></member>
      <member refid="class_pcp_map_expression_1_1___node_1a404c7988d3cc82441180f347eaf8fc9b" prot="public" virt="non-virtual"><scope>PcpMapExpression::_Node</scope><name>expressionTreeAlwaysHasIdentity</name></member>
      <member refid="class_pcp_map_expression_1_1___node_1ac5865989f8a839100e2c20a1d8d2c8b0" prot="public" virt="non-virtual"><scope>PcpMapExpression::_Node</scope><name>GetValueForVariable</name></member>
      <member refid="class_pcp_map_expression_1_1___node_1a4d46b46fe2fdba625d17dcf661632c43" prot="private" virt="non-virtual"><scope>PcpMapExpression::_Node</scope><name>intrusive_ptr_add_ref</name></member>
      <member refid="class_pcp_map_expression_1_1___node_1a4b16acb3ea0f4c5f5afbfed658564710" prot="private" virt="non-virtual"><scope>PcpMapExpression::_Node</scope><name>intrusive_ptr_release</name></member>
      <member refid="class_pcp_map_expression_1_1___node_1a24622b4aea8243b98a0a32361a91a70c" prot="public" virt="non-virtual"><scope>PcpMapExpression::_Node</scope><name>key</name></member>
      <member refid="class_pcp_map_expression_1_1___node_1a0e1e8a7f00e0880ff617b24eb7749a54" prot="public" virt="non-virtual"><scope>PcpMapExpression::_Node</scope><name>New</name></member>
      <member refid="class_pcp_map_expression_1_1___node_1aee06d536e36874d59857e6dc3d4ff133" prot="private" virt="non-virtual"><scope>PcpMapExpression::_Node</scope><name>operator=</name></member>
      <member refid="class_pcp_map_expression_1_1___node_1abc864d71acf77204b250c98f1f6fb3f8" prot="public" virt="non-virtual"><scope>PcpMapExpression::_Node</scope><name>SetValueForVariable</name></member>
      <member refid="class_pcp_map_expression_1_1___node_1ac86f3f2c291e2fcce792ec99692e8840" prot="public" virt="non-virtual"><scope>PcpMapExpression::_Node</scope><name>~_Node</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
