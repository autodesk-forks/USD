<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="py_identity_8h" kind="file" language="C++">
    <compoundname>pyIdentity.h</compoundname>
    <includes refid="pxr_8h" local="yes">pxr/pxr.h</includes>
    <includes refid="base_2tf_2api_8h" local="yes">pxr/base/tf/api.h</includes>
    <includes refid="py_lock_8h" local="yes">pxr/base/tf/pyLock.h</includes>
    <includes refid="base_2tf_2py_utils_8h" local="yes">pxr/base/tf/pyUtils.h</includes>
    <includes refid="demangle_8h" local="yes">pxr/base/arch/demangle.h</includes>
    <includes refid="base_2tf_2diagnostic_8h" local="yes">pxr/base/tf/diagnostic.h</includes>
    <includes refid="ref_ptr_8h" local="yes">pxr/base/tf/refPtr.h</includes>
    <includes refid="safe_type_compare_8h" local="yes">pxr/base/tf/safeTypeCompare.h</includes>
    <includes refid="string_utils_8h" local="yes">pxr/base/tf/stringUtils.h</includes>
    <includes refid="weak_ptr_8h" local="yes">pxr/base/tf/weakPtr.h</includes>
    <includes local="no">boost/python/class.hpp</includes>
    <includes local="no">boost/python/handle.hpp</includes>
    <includes local="no">boost/python/object.hpp</includes>
    <includes refid="hashmap_8h" local="yes">pxr/base/tf/hashmap.h</includes>
    <includedby refid="make_py_constructor_8h" local="yes">pxr/base/tf/makePyConstructor.h</includedby>
    <includedby refid="py_object_finder_8h" local="yes">pxr/base/tf/pyObjectFinder.h</includedby>
    <includedby refid="py_ptr_helpers_8h" local="yes">pxr/base/tf/pyPtrHelpers.h</includedby>
    <incdepgraph>
      <node id="69205">
        <label>list</label>
      </node>
      <node id="69145">
        <label>locale</label>
      </node>
      <node id="69177">
        <label>atomic</label>
      </node>
      <node id="69191">
        <label>stdarg.h</label>
      </node>
      <node id="69159">
        <label>pxr/base/arch/inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="69160" relation="include">
        </childnode>
        <childnode refid="69161" relation="include">
        </childnode>
        <childnode refid="69138" relation="include">
        </childnode>
        <childnode refid="69141" relation="include">
        </childnode>
        <childnode refid="69162" relation="include">
        </childnode>
      </node>
      <node id="69197">
        <label>functional</label>
      </node>
      <node id="69208">
        <label>pxr/base/tf/hashmap.h</label>
        <link refid="hashmap_8h_source"/>
        <childnode refid="69138" relation="include">
        </childnode>
        <childnode refid="69141" relation="include">
        </childnode>
        <childnode refid="69209" relation="include">
        </childnode>
      </node>
      <node id="69140">
        <label>pxr/base/arch/export.h</label>
        <link refid="export_8h"/>
        <childnode refid="69141" relation="include">
        </childnode>
      </node>
      <node id="69161">
        <label>cstdint</label>
      </node>
      <node id="69148">
        <label>pxr/base/tf/refPtr.h</label>
        <link refid="ref_ptr_8h"/>
        <childnode refid="69138" relation="include">
        </childnode>
        <childnode refid="69149" relation="include">
        </childnode>
        <childnode refid="69156" relation="include">
        </childnode>
        <childnode refid="69174" relation="include">
        </childnode>
        <childnode refid="69175" relation="include">
        </childnode>
        <childnode refid="69178" relation="include">
        </childnode>
        <childnode refid="69180" relation="include">
        </childnode>
        <childnode refid="69139" relation="include">
        </childnode>
        <childnode refid="69152" relation="include">
        </childnode>
        <childnode refid="69179" relation="include">
        </childnode>
        <childnode refid="69172" relation="include">
        </childnode>
        <childnode refid="69181" relation="include">
        </childnode>
      </node>
      <node id="69189">
        <label>pxr/base/tf/diagnosticHelper.h</label>
        <link refid="diagnostic_helper_8h_source"/>
        <childnode refid="69138" relation="include">
        </childnode>
        <childnode refid="69139" relation="include">
        </childnode>
        <childnode refid="69150" relation="include">
        </childnode>
        <childnode refid="69141" relation="include">
        </childnode>
        <childnode refid="69145" relation="include">
        </childnode>
        <childnode refid="69190" relation="include">
        </childnode>
        <childnode refid="69167" relation="include">
        </childnode>
      </node>
      <node id="69144">
        <label>pxr/base/arch/pragmas.h</label>
        <link refid="pragmas_8h"/>
        <childnode refid="69141" relation="include">
        </childnode>
      </node>
      <node id="69163">
        <label>cmath</label>
      </node>
      <node id="69157">
        <label>pxr/base/tf/tf.h</label>
        <link refid="tf_8h"/>
        <childnode refid="69138" relation="include">
        </childnode>
        <childnode refid="69151" relation="include">
        </childnode>
        <childnode refid="69158" relation="include">
        </childnode>
        <childnode refid="69159" relation="include">
        </childnode>
        <childnode refid="69164" relation="include">
        </childnode>
        <childnode refid="69165" relation="include">
        </childnode>
      </node>
      <node id="69195">
        <label>boost/python/handle.hpp</label>
      </node>
      <node id="69175">
        <label>pxr/base/tf/refBase.h</label>
        <link refid="ref_base_8h"/>
        <childnode refid="69138" relation="include">
        </childnode>
        <childnode refid="69176" relation="include">
        </childnode>
        <childnode refid="69139" relation="include">
        </childnode>
      </node>
      <node id="69204">
        <label>cstdarg</label>
      </node>
      <node id="69167">
        <label>string</label>
      </node>
      <node id="69150">
        <label>pxr/base/arch/attributes.h</label>
        <link refid="attributes_8h"/>
        <childnode refid="69138" relation="include">
        </childnode>
        <childnode refid="69140" relation="include">
        </childnode>
      </node>
      <node id="69196">
        <label>boost/python/object.hpp</label>
      </node>
      <node id="69168">
        <label>map</label>
      </node>
      <node id="69160">
        <label>cinttypes</label>
      </node>
      <node id="69138">
        <label>pxr/pxr.h</label>
        <link refid="pxr_8h"/>
      </node>
      <node id="69192">
        <label>pxr/base/arch/demangle.h</label>
        <link refid="demangle_8h"/>
        <childnode refid="69138" relation="include">
        </childnode>
        <childnode refid="69188" relation="include">
        </childnode>
        <childnode refid="69167" relation="include">
        </childnode>
        <childnode refid="69179" relation="include">
        </childnode>
        <childnode refid="69171" relation="include">
        </childnode>
      </node>
      <node id="69155">
        <label>stddef.h</label>
      </node>
      <node id="69151">
        <label>pxr/base/arch/buildMode.h</label>
        <link refid="build_mode_8h_source"/>
        <childnode refid="69138" relation="include">
        </childnode>
        <childnode refid="69141" relation="include">
        </childnode>
      </node>
      <node id="69193">
        <label>pxr/base/tf/preprocessorUtilsLite.h</label>
        <link refid="preprocessor_utils_lite_8h_source"/>
        <childnode refid="69141" relation="include">
        </childnode>
      </node>
      <node id="69194">
        <label>pxr/base/tf/pyInterpreter.h</label>
        <link refid="py_interpreter_8h"/>
        <childnode refid="69138" relation="include">
        </childnode>
        <childnode refid="69139" relation="include">
        </childnode>
        <childnode refid="69195" relation="include">
        </childnode>
        <childnode refid="69196" relation="include">
        </childnode>
        <childnode refid="69167" relation="include">
        </childnode>
      </node>
      <node id="69176">
        <label>pxr/base/tf/refCount.h</label>
        <link refid="ref_count_8h"/>
        <childnode refid="69138" relation="include">
        </childnode>
        <childnode refid="69159" relation="include">
        </childnode>
        <childnode refid="69139" relation="include">
        </childnode>
        <childnode refid="69177" relation="include">
        </childnode>
      </node>
      <node id="69178">
        <label>pxr/base/tf/safeTypeCompare.h</label>
        <link refid="safe_type_compare_8h"/>
        <childnode refid="69138" relation="include">
        </childnode>
        <childnode refid="69179" relation="include">
        </childnode>
      </node>
      <node id="69184">
        <label>pxr/base/tf/expiryNotifier.h</label>
        <link refid="expiry_notifier_8h"/>
        <childnode refid="69138" relation="include">
        </childnode>
        <childnode refid="69152" relation="include">
        </childnode>
        <childnode refid="69139" relation="include">
        </childnode>
      </node>
      <node id="69143">
        <label>pxr/base/tf/pySafePython.h</label>
        <link refid="py_safe_python_8h"/>
        <childnode refid="69144" relation="include">
        </childnode>
        <childnode refid="69145" relation="include">
        </childnode>
        <childnode refid="69146" relation="include">
        </childnode>
      </node>
      <node id="69190">
        <label>any</label>
      </node>
      <node id="69198">
        <label>boost/python/dict.hpp</label>
      </node>
      <node id="69162">
        <label>sys/types.h</label>
      </node>
      <node id="69185">
        <label>pxr/base/tf/weakPtrFacade.h</label>
        <link refid="weak_ptr_facade_8h_source"/>
        <childnode refid="69138" relation="include">
        </childnode>
        <childnode refid="69186" relation="include">
        </childnode>
        <childnode refid="69156" relation="include">
        </childnode>
        <childnode refid="69148" relation="include">
        </childnode>
        <childnode refid="69183" relation="include">
        </childnode>
        <childnode refid="69192" relation="include">
        </childnode>
        <childnode refid="69172" relation="include">
        </childnode>
      </node>
      <node id="69202">
        <label>pxr/base/tf/enum.h</label>
        <link refid="enum_8h"/>
        <childnode refid="69138" relation="include">
        </childnode>
        <childnode refid="69141" relation="include">
        </childnode>
        <childnode refid="69192" relation="include">
        </childnode>
        <childnode refid="69156" relation="include">
        </childnode>
        <childnode refid="69193" relation="include">
        </childnode>
        <childnode refid="69178" relation="include">
        </childnode>
        <childnode refid="69139" relation="include">
        </childnode>
        <childnode refid="69203" relation="include">
        </childnode>
        <childnode refid="69167" relation="include">
        </childnode>
        <childnode refid="69179" relation="include">
        </childnode>
        <childnode refid="69172" relation="include">
        </childnode>
        <childnode refid="69173" relation="include">
        </childnode>
      </node>
      <node id="69179">
        <label>typeinfo</label>
      </node>
      <node id="69182">
        <label>pxr/base/tf/weakPtr.h</label>
        <link refid="weak_ptr_8h"/>
        <childnode refid="69138" relation="include">
        </childnode>
        <childnode refid="69174" relation="include">
        </childnode>
        <childnode refid="69148" relation="include">
        </childnode>
        <childnode refid="69157" relation="include">
        </childnode>
        <childnode refid="69183" relation="include">
        </childnode>
        <childnode refid="69185" relation="include">
        </childnode>
        <childnode refid="69181" relation="include">
        </childnode>
        <childnode refid="69172" relation="include">
        </childnode>
      </node>
      <node id="69158">
        <label>pxr/base/arch/math.h</label>
        <link refid="arch_2math_8h"/>
        <childnode refid="69138" relation="include">
        </childnode>
        <childnode refid="69141" relation="include">
        </childnode>
        <childnode refid="69159" relation="include">
        </childnode>
        <childnode refid="69163" relation="include">
        </childnode>
      </node>
      <node id="69173">
        <label>vector</label>
      </node>
      <node id="69137">
        <label>pxr/base/tf/pyIdentity.h</label>
        <link refid="py_identity_8h"/>
        <childnode refid="69138" relation="include">
        </childnode>
        <childnode refid="69139" relation="include">
        </childnode>
        <childnode refid="69142" relation="include">
        </childnode>
        <childnode refid="69147" relation="include">
        </childnode>
        <childnode refid="69192" relation="include">
        </childnode>
        <childnode refid="69186" relation="include">
        </childnode>
        <childnode refid="69148" relation="include">
        </childnode>
        <childnode refid="69178" relation="include">
        </childnode>
        <childnode refid="69201" relation="include">
        </childnode>
        <childnode refid="69182" relation="include">
        </childnode>
        <childnode refid="69207" relation="include">
        </childnode>
        <childnode refid="69195" relation="include">
        </childnode>
        <childnode refid="69196" relation="include">
        </childnode>
        <childnode refid="69208" relation="include">
        </childnode>
      </node>
      <node id="69139">
        <label>pxr/base/tf/api.h</label>
        <link refid="base_2tf_2api_8h_source"/>
        <childnode refid="69140" relation="include">
        </childnode>
      </node>
      <node id="69142">
        <label>pxr/base/tf/pyLock.h</label>
        <link refid="py_lock_8h_source"/>
        <childnode refid="69138" relation="include">
        </childnode>
        <childnode refid="69143" relation="include">
        </childnode>
        <childnode refid="69139" relation="include">
        </childnode>
      </node>
      <node id="69199">
        <label>boost/python/extract.hpp</label>
      </node>
      <node id="69165">
        <label>utility</label>
      </node>
      <node id="69206">
        <label>sstream</label>
      </node>
      <node id="69187">
        <label>pxr/base/arch/function.h</label>
        <link refid="function_8h"/>
        <childnode refid="69138" relation="include">
        </childnode>
        <childnode refid="69188" relation="include">
        </childnode>
        <childnode refid="69154" relation="include">
        </childnode>
        <childnode refid="69167" relation="include">
        </childnode>
      </node>
      <node id="69174">
        <label>pxr/base/tf/nullPtr.h</label>
        <link refid="null_ptr_8h_source"/>
        <childnode refid="69138" relation="include">
        </childnode>
        <childnode refid="69139" relation="include">
        </childnode>
      </node>
      <node id="69141">
        <label>pxr/base/arch/defines.h</label>
        <link refid="defines_8h_source"/>
      </node>
      <node id="69152">
        <label>pxr/base/arch/hints.h</label>
        <link refid="hints_8h"/>
        <childnode refid="69141" relation="include">
        </childnode>
      </node>
      <node id="69156">
        <label>pxr/base/tf/hash.h</label>
        <link refid="tf_2hash_8h"/>
        <childnode refid="69138" relation="include">
        </childnode>
        <childnode refid="69157" relation="include">
        </childnode>
        <childnode refid="69139" relation="include">
        </childnode>
        <childnode refid="69166" relation="include">
        </childnode>
        <childnode refid="69167" relation="include">
        </childnode>
        <childnode refid="69168" relation="include">
        </childnode>
        <childnode refid="69169" relation="include">
        </childnode>
        <childnode refid="69170" relation="include">
        </childnode>
        <childnode refid="69171" relation="include">
        </childnode>
        <childnode refid="69172" relation="include">
        </childnode>
        <childnode refid="69165" relation="include">
        </childnode>
        <childnode refid="69173" relation="include">
        </childnode>
      </node>
      <node id="69164">
        <label>math.h</label>
      </node>
      <node id="69201">
        <label>pxr/base/tf/stringUtils.h</label>
        <link refid="string_utils_8h"/>
        <childnode refid="69138" relation="include">
        </childnode>
        <childnode refid="69150" relation="include">
        </childnode>
        <childnode refid="69152" relation="include">
        </childnode>
        <childnode refid="69159" relation="include">
        </childnode>
        <childnode refid="69139" relation="include">
        </childnode>
        <childnode refid="69202" relation="include">
        </childnode>
        <childnode refid="69204" relation="include">
        </childnode>
        <childnode refid="69166" relation="include">
        </childnode>
        <childnode refid="69205" relation="include">
        </childnode>
        <childnode refid="69170" relation="include">
        </childnode>
        <childnode refid="69206" relation="include">
        </childnode>
        <childnode refid="69167" relation="include">
        </childnode>
        <childnode refid="69172" relation="include">
        </childnode>
        <childnode refid="69173" relation="include">
        </childnode>
      </node>
      <node id="69147">
        <label>pxr/base/tf/pyUtils.h</label>
        <link refid="base_2tf_2py_utils_8h"/>
        <childnode refid="69138" relation="include">
        </childnode>
        <childnode refid="69148" relation="include">
        </childnode>
        <childnode refid="69182" relation="include">
        </childnode>
        <childnode refid="69149" relation="include">
        </childnode>
        <childnode refid="69193" relation="include">
        </childnode>
        <childnode refid="69143" relation="include">
        </childnode>
        <childnode refid="69194" relation="include">
        </childnode>
        <childnode refid="69142" relation="include">
        </childnode>
        <childnode refid="69139" relation="include">
        </childnode>
        <childnode refid="69197" relation="include">
        </childnode>
        <childnode refid="69179" relation="include">
        </childnode>
        <childnode refid="69167" relation="include">
        </childnode>
        <childnode refid="69173" relation="include">
        </childnode>
        <childnode refid="69198" relation="include">
        </childnode>
        <childnode refid="69199" relation="include">
        </childnode>
        <childnode refid="69195" relation="include">
        </childnode>
        <childnode refid="69196" relation="include">
        </childnode>
        <childnode refid="69200" relation="include">
        </childnode>
      </node>
      <node id="69203">
        <label>iosfwd</label>
      </node>
      <node id="69153">
        <label>pxr/base/tf/callContext.h</label>
        <link refid="call_context_8h"/>
        <childnode refid="69138" relation="include">
        </childnode>
        <childnode refid="69139" relation="include">
        </childnode>
        <childnode refid="69154" relation="include">
        </childnode>
        <childnode refid="69155" relation="include">
        </childnode>
      </node>
      <node id="69146">
        <label>boost/python/detail/wrap_python.hpp</label>
      </node>
      <node id="69181">
        <label>cstddef</label>
      </node>
      <node id="69180">
        <label>pxr/base/tf/typeFunctions.h</label>
        <link refid="type_functions_8h"/>
        <childnode refid="69138" relation="include">
        </childnode>
        <childnode refid="69169" relation="include">
        </childnode>
      </node>
      <node id="69209">
        <label>unordered_map</label>
      </node>
      <node id="69149">
        <label>pxr/base/tf/diagnosticLite.h</label>
        <link refid="diagnostic_lite_8h"/>
        <childnode refid="69138" relation="include">
        </childnode>
        <childnode refid="69150" relation="include">
        </childnode>
        <childnode refid="69139" relation="include">
        </childnode>
        <childnode refid="69151" relation="include">
        </childnode>
        <childnode refid="69152" relation="include">
        </childnode>
        <childnode refid="69153" relation="include">
        </childnode>
        <childnode refid="69155" relation="include">
        </childnode>
      </node>
      <node id="69172">
        <label>type_traits</label>
      </node>
      <node id="69170">
        <label>set</label>
      </node>
      <node id="69200">
        <label>boost/python/type_id.hpp</label>
      </node>
      <node id="69188">
        <label>pxr/base/arch/api.h</label>
        <link refid="base_2arch_2api_8h_source"/>
        <childnode refid="69140" relation="include">
        </childnode>
      </node>
      <node id="69154">
        <label>pxr/base/arch/functionLite.h</label>
        <link refid="function_lite_8h"/>
        <childnode refid="69141" relation="include">
        </childnode>
      </node>
      <node id="69166">
        <label>cstring</label>
      </node>
      <node id="69183">
        <label>pxr/base/tf/weakBase.h</label>
        <link refid="weak_base_8h"/>
        <childnode refid="69138" relation="include">
        </childnode>
        <childnode refid="69139" relation="include">
        </childnode>
        <childnode refid="69184" relation="include">
        </childnode>
        <childnode refid="69148" relation="include">
        </childnode>
        <childnode refid="69177" relation="include">
        </childnode>
      </node>
      <node id="69169">
        <label>memory</label>
      </node>
      <node id="69186">
        <label>pxr/base/tf/diagnostic.h</label>
        <link refid="base_2tf_2diagnostic_8h"/>
        <childnode refid="69138" relation="include">
        </childnode>
        <childnode refid="69187" relation="include">
        </childnode>
        <childnode refid="69149" relation="include">
        </childnode>
        <childnode refid="69139" relation="include">
        </childnode>
        <childnode refid="69152" relation="include">
        </childnode>
        <childnode refid="69189" relation="include">
        </childnode>
        <childnode refid="69155" relation="include">
        </childnode>
        <childnode refid="69191" relation="include">
        </childnode>
        <childnode refid="69167" relation="include">
        </childnode>
      </node>
      <node id="69171">
        <label>typeindex</label>
      </node>
      <node id="69207">
        <label>boost/python/class.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="69214">
        <label>pxr/base/tf/pyPtrHelpers.h</label>
        <link refid="py_ptr_helpers_8h"/>
        <childnode refid="69215" relation="include">
        </childnode>
      </node>
      <node id="69213">
        <label>pxr/base/tf/pyNoticeWrapper.h</label>
        <link refid="py_notice_wrapper_8h_source"/>
      </node>
      <node id="69212">
        <label>pxr/base/tf/pyObjectFinder.h</label>
        <link refid="py_object_finder_8h_source"/>
        <childnode refid="69213" relation="include">
        </childnode>
        <childnode refid="69214" relation="include">
        </childnode>
      </node>
      <node id="69215">
        <label>pxr/base/tf/pySingleton.h</label>
        <link refid="py_singleton_8h_source"/>
      </node>
      <node id="69210">
        <label>pxr/base/tf/pyIdentity.h</label>
        <link refid="py_identity_8h"/>
        <childnode refid="69211" relation="include">
        </childnode>
        <childnode refid="69212" relation="include">
        </childnode>
        <childnode refid="69214" relation="include">
        </childnode>
      </node>
      <node id="69211">
        <label>pxr/base/tf/makePyConstructor.h</label>
        <link refid="make_py_constructor_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structboost_1_1python_1_1pointee_3_011_1_1_tf_weak_ptr_facade_3_01_x_00_01_y_01_4_01_4" prot="public">boost::python::pointee&lt; 1::TfWeakPtrFacade&lt; X, Y &gt; &gt;</innerclass>
    <innerclass refid="structboost_1_1python_1_1pointee_3_011_1_1_tf_ref_ptr_3_01_t_01_4_01_4" prot="public">boost::python::pointee&lt; 1::TfRefPtr&lt; T &gt; &gt;</innerclass>
    <innernamespace refid="namespaceboost">boost</innernamespace>
    <innernamespace refid="namespaceboost_1_1python">boost::python</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2016<sp/>Pixar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Apache<sp/>License&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>following<sp/>modification;<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compliance<sp/>with<sp/>the<sp/>Apache<sp/>License<sp/>and<sp/>the<sp/>following<sp/>modification<sp/>to<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section<sp/>6.<sp/>Trademarks.<sp/>is<sp/>deleted<sp/>and<sp/>replaced<sp/>with:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>6.<sp/>Trademarks.<sp/>This<sp/>License<sp/>does<sp/>not<sp/>grant<sp/>permission<sp/>to<sp/>use<sp/>the<sp/>trade</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>names,<sp/>trademarks,<sp/>service<sp/>marks,<sp/>or<sp/>product<sp/>names<sp/>of<sp/>the<sp/>Licensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>and<sp/>its<sp/>affiliates,<sp/>except<sp/>as<sp/>required<sp/>to<sp/>comply<sp/>with<sp/>Section<sp/>4(c)<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>the<sp/>License<sp/>and<sp/>to<sp/>reproduce<sp/>the<sp/>content<sp/>of<sp/>the<sp/>NOTICE<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>Apache<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>Apache<sp/>License<sp/>with<sp/>the<sp/>above<sp/>modification<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/>See<sp/>the<sp/>Apache<sp/>License<sp/>for<sp/>the<sp/>specific</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>Apache<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PXR_BASE_TF_PY_IDENTITY_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PXR_BASE_TF_PY_IDENTITY_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pxr_8h" kindref="compound">pxr/pxr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/base/tf/api.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/base/tf/pyLock.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="base_2tf_2py_utils_8h" kindref="compound">pxr/base/tf/pyUtils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="demangle_8h" kindref="compound">pxr/base/arch/demangle.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="base_2tf_2diagnostic_8h" kindref="compound">pxr/base/tf/diagnostic.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ref_ptr_8h" kindref="compound">pxr/base/tf/refPtr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="safe_type_compare_8h" kindref="compound">pxr/base/tf/safeTypeCompare.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="string_utils_8h" kindref="compound">pxr/base/tf/stringUtils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="weak_ptr_8h" kindref="compound">pxr/base/tf/weakPtr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/python/class.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/python/handle.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/python/object.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/base/tf/hashmap.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Specializations<sp/>for<sp/>boost::python::pointee<sp/>and<sp/>get_pointer<sp/>for<sp/>TfRefPtr<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TfWeakPtr.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">boost<sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">python<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TfWeakPtrFacade</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">X,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Y&gt;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">pointee&lt;<sp/>PXR_NS::TfWeakPtrFacade&lt;X,<sp/>Y&gt;<sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Y<sp/>type;</highlight></codeline>
<codeline lineno="54"><highlight class="normal">};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TfRefPtr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">pointee&lt;<sp/>PXR_NS::<ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr</ref>&lt;T&gt;<sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/>type;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">};</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal">}}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">PXR_NAMESPACE_OPEN_SCOPE</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Tf_PyIdentityHelper</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>identity<sp/>of<sp/>ptr<sp/>(which<sp/>derives<sp/>from<sp/>TfPtrBase)<sp/>to<sp/>be<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>python<sp/>object<sp/>\a<sp/>obj.<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>TF_API</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Set(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>PyObject<sp/>*obj);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>a<sp/>new<sp/>reference<sp/>to<sp/>the<sp/>python<sp/>object<sp/>associated<sp/>with<sp/>ptr.<sp/><sp/>If</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>there<sp/>is<sp/>none,<sp/>return<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>TF_API</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*Get(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>TF_API</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Erase(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Acquire<sp/>a<sp/>reference<sp/>to<sp/>the<sp/>python<sp/>object<sp/>associated<sp/>with<sp/>ptrBase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>not<sp/>already<sp/>acquired.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>TF_API</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Acquire(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Release<sp/>a<sp/>reference<sp/>to<sp/>the<sp/>python<sp/>object<sp/>associated<sp/>with<sp/>ptrBase</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>own<sp/>a<sp/>reference.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>TF_API</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Release(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal">};</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Ptr&gt;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Tf_PyReleasePythonIdentity(Ptr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;ptr,<sp/>PyObject<sp/>*obj)</highlight></codeline>
<codeline lineno="95"><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>Tf_PySetPythonIdentity(ptr,<sp/>obj);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>Tf_PyIdentityHelper::Release(ptr.GetUniqueIdentifier());</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Tf_PyOwnershipRefBaseUniqueChanged(<ref refid="class_tf_ref_base" kindref="compound">TfRefBase</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*refBase,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isNowUnique);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Tf_PyOwnershipPtrMap</highlight></codeline>
<codeline lineno="104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TfHashMap&lt;TfRefBase<sp/>const<sp/>*,<sp/>void<sp/>const<sp/>*,<sp/>TfHash&gt;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>_CacheType;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>TF_API</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Insert(<ref refid="class_tf_ref_base" kindref="compound">TfRefBase</ref><sp/>*refBase,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*uniqueId);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>TF_API</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*Lookup(<ref refid="class_tf_ref_base" kindref="compound">TfRefBase</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*refBase);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>TF_API</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Erase(<ref refid="class_tf_ref_base" kindref="compound">TfRefBase</ref><sp/>*refBase);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>_CacheType<sp/>_cache;</highlight></codeline>
<codeline lineno="115"><highlight class="normal">};</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Doxygen<sp/>generates<sp/>files<sp/>whose<sp/>names<sp/>are<sp/>mangled<sp/>typenames.<sp/><sp/>This<sp/>is<sp/>fine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//<sp/>except<sp/>when<sp/>the<sp/>filenames<sp/>get<sp/>longer<sp/>than<sp/>256<sp/>characters.<sp/><sp/>This<sp/>is<sp/>one<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>that,<sp/>so<sp/>we&apos;ll<sp/>just<sp/>disable<sp/>doxygen.<sp/><sp/>There&apos;s<sp/>no<sp/>actual<sp/>doxygen<sp/>doc<sp/>here,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">//<sp/>so<sp/>this<sp/>is<sp/>fine.<sp/><sp/>If/when<sp/>this<sp/>gets<sp/>solved<sp/>for<sp/>real,<sp/>we<sp/>can<sp/>remove<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(6/06)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>doxygen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Ptr,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Enable<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Tf_PyOwnershipHelper<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Add(U<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/>PyObject<sp/>*)<sp/>{}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Remove(U<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;,<sp/>PyObject<sp/>*)<sp/>{}</highlight></codeline>
<codeline lineno="132"><highlight class="normal">};</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Ptr&gt;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Tf_PyOwnershipHelper&lt;Ptr,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>std::enable_if_t&lt;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;TfRefPtr&lt;typename<sp/>Ptr::DataType&gt;,<sp/>Ptr&gt;::value<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_base_of&lt;TfRefBase,<sp/>typename<sp/>Ptr::DataType&gt;::value&gt;&gt;</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_RefPtrHolder<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>boost::python::object</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Get(Ptr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;refptr)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_py_lock" kindref="compound">TfPyLock</ref><sp/>pyLock;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_WrapIfNecessary();</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boost::python::object(_RefPtrHolder(refptr));</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_WrapIfNecessary()<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_py_lock" kindref="compound">TfPyLock</ref><sp/>pyLock;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="base_2tf_2py_utils_8h_1a4b4188c0e93926173249aea201501853" kindref="member">TfPyIsNone</ref>(TfPyGetClassObject&lt;_RefPtrHolder&gt;()))<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;__&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="group__group__arch___strings_1ga0b63aee5bf45530bc1b0ceb51411bc7d" kindref="member">ArchGetDemangled</ref>(</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Ptr::DataType))<sp/>+</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;__RefPtrHolder&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/><ref refid="group__group__tf___string_1gac52faea3628696e9a242bf79cbce4be6" kindref="member">TfStringReplace</ref>(name,<sp/></highlight><highlight class="stringliteral">&quot;&lt;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/><ref refid="group__group__tf___string_1gac52faea3628696e9a242bf79cbce4be6" kindref="member">TfStringReplace</ref>(name,<sp/></highlight><highlight class="stringliteral">&quot;&gt;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/><ref refid="group__group__tf___string_1gac52faea3628696e9a242bf79cbce4be6" kindref="member">TfStringReplace</ref>(name,<sp/></highlight><highlight class="stringliteral">&quot;::&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::python::class_&lt;_RefPtrHolder&gt;(name.c_str(),</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::python::no_init);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/>_RefPtrHolder(Ptr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;refptr)<sp/>:<sp/>_refptr(refptr)<sp/>{}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ptr<sp/>_refptr;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Add(Ptr<sp/>ptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*uniqueId,<sp/>PyObject<sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_py_lock" kindref="compound">TfPyLock</ref><sp/>pyLock;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>the<sp/>python<sp/>object<sp/>keep<sp/>the<sp/>c++<sp/>object<sp/>alive.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>PyObject_SetAttrString(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;__owner&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_RefPtrHolder::Get(ptr).ptr());</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ret<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CODE_COVERAGE_OFF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__group__tf___diagnostic_1gaba2e638edaae9e9c6e5180e020f12ccf" kindref="member">TF_WARN</ref>(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>set<sp/>__owner<sp/>attribute<sp/>on<sp/>python<sp/>object!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Clear();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CODE_COVERAGE_ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_ref_base" kindref="compound">TfRefBase</ref><sp/>*refBase<sp/>=</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;TfRefBase<sp/>*&gt;(get_pointer(ptr));</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tf_PyOwnershipPtrMap::Insert(refBase,<sp/>uniqueId);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Remove(Ptr<sp/>ptr,<sp/>PyObject<sp/>*obj)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_py_lock" kindref="compound">TfPyLock</ref><sp/>pyLock;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ptr)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CODE_COVERAGE_OFF<sp/>Can<sp/>only<sp/>happen<sp/>if<sp/>there&apos;s<sp/>a<sp/>bug.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__group__tf___diagnostic_1ga8265ac46fd87777ee25efaf4a3290bbe" kindref="member">TF_CODING_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;Removing<sp/>ownership<sp/>from<sp/>null/expired<sp/>ptr!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CODE_COVERAGE_ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_HasAttrString(obj,<sp/></highlight><highlight class="stringliteral">&quot;__owner&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>are<sp/>guaranteed<sp/>that<sp/>ptr<sp/>is<sp/>not<sp/>unique<sp/>at<sp/>this<sp/>point,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>__owner<sp/>has<sp/>a<sp/>reference<sp/>and<sp/>ptr<sp/>is<sp/>itself<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reference.<sp/><sp/>This<sp/>also<sp/>guarantees<sp/>us<sp/>that<sp/>the<sp/>object<sp/>owns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>reference<sp/>to<sp/>its<sp/>python<sp/>object,<sp/>so<sp/>we<sp/>don&apos;t<sp/>need<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>explicitly<sp/>acquire<sp/>a<sp/>reference<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__group__tf___diagnostic_1ga12db62e70113a37341a127f0e0ec9ac4" kindref="member">TF_AXIOM</ref>(!ptr-&gt;IsUnique());</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>this<sp/>object<sp/>from<sp/>the<sp/>cache<sp/>of<sp/>refbase<sp/>to<sp/>uniqueId</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>we<sp/>use<sp/>for<sp/>python-owned<sp/>things.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tf_PyOwnershipPtrMap::Erase(get_pointer(ptr));</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>the<sp/>__owner<sp/>attribute.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_DelAttrString(obj,<sp/></highlight><highlight class="stringliteral">&quot;__owner&quot;</highlight><highlight class="normal">)<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CODE_COVERAGE_OFF<sp/>It&apos;s<sp/>hard<sp/>to<sp/>make<sp/>this<sp/>occur.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__group__tf___diagnostic_1gaba2e638edaae9e9c6e5180e020f12ccf" kindref="member">TF_WARN</ref>(</highlight><highlight class="stringliteral">&quot;Undeletable<sp/>__owner<sp/>attribute<sp/>on<sp/>python<sp/>object!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Clear();</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CODE_COVERAGE_ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal">};</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>doxygen<sp/>--<sp/>see<sp/>comment<sp/>above.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Ptr&gt;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Tf_PyIsRefPtr<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221"><highlight class="normal">};</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Tf_PyIsRefPtr&lt;<ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr</ref>&lt;T&gt;<sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="226"><highlight class="normal">};</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Ptr&gt;</highlight></codeline>
<codeline lineno="230"><highlight class="normal">std::enable_if_t&lt;Tf_PyIsRefPtr&lt;Ptr&gt;::value&gt;</highlight></codeline>
<codeline lineno="231"><highlight class="normal">Tf_PySetPythonIdentity(Ptr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;,<sp/>PyObject<sp/>*)</highlight></codeline>
<codeline lineno="232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Ptr&gt;</highlight></codeline>
<codeline lineno="236"><highlight class="normal">std::enable_if_t&lt;!Tf_PyIsRefPtr&lt;Ptr&gt;::value&gt;</highlight></codeline>
<codeline lineno="237"><highlight class="normal">Tf_PySetPythonIdentity(Ptr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;ptr,<sp/>PyObject<sp/>*obj)</highlight></codeline>
<codeline lineno="238"><highlight class="normal">{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr.GetUniqueIdentifier())<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tf_PyIdentityHelper::Set(ptr.GetUniqueIdentifier(),<sp/>obj);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>we<sp/>hear<sp/>about<sp/>it<sp/>when<sp/>this<sp/>weak<sp/>base<sp/>dies<sp/>so<sp/>we<sp/>can<sp/>remove</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>from<sp/>the<sp/>map.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr.EnableExtraNotification();</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Ptr&gt;</highlight></codeline>
<codeline lineno="248"><highlight class="normal">PyObject<sp/>*Tf_PyGetPythonIdentity(Ptr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;ptr)</highlight></codeline>
<codeline lineno="249"><highlight class="normal">{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*ret<sp/>=<sp/>Tf_PyIdentityHelper::Get(ptr.GetUniqueIdentifier());</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Ptr&gt;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Tf_PyRemovePythonOwnership(Ptr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;t,<sp/>PyObject<sp/>*obj)</highlight></codeline>
<codeline lineno="256"><highlight class="normal">{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>Tf_PyOwnershipHelper&lt;Ptr&gt;::Remove(t,<sp/>obj);</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Ptr&gt;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Tf_PyAddPythonOwnership(Ptr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;t,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*uniqueId,<sp/>PyObject<sp/>*obj)</highlight></codeline>
<codeline lineno="262"><highlight class="normal">{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>Tf_PyOwnershipHelper&lt;Ptr&gt;::Add(t,<sp/>uniqueId,<sp/>obj);</highlight></codeline>
<codeline lineno="264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal">PXR_NAMESPACE_CLOSE_SCOPE</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>PXR_BASE_TF_PY_IDENTITY_H</highlight></codeline>
    </programlisting>
    <location file="pxr/base/tf/pyIdentity.h"/>
  </compounddef>
</doxygen>
