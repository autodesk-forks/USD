<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_usd_resolve_info" kind="class" language="C++" prot="public">
    <compoundname>UsdResolveInfo</compoundname>
    <includes refid="resolve_info_8h" local="no">resolveInfo.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_usd_resolve_info_1a85e82cb7e4ee885d102eb6f52d389183" prot="private" static="no" mutable="no">
        <type>PcpLayerStackPtr</type>
        <definition>PcpLayerStackPtr _layerStack</definition>
        <argsstring></argsstring>
        <name>_layerStack</name>
        <briefdescription>
<para>The LayerStack that provides the strongest value opinion. </para>
        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>source</computeroutput> is either <computeroutput>UsdResolveInfoSourceDefault</computeroutput> or <computeroutput>UsdResolveInfoTimeSamples</computeroutput>, the source will be a layer in this LayerStack (<simplesect kind="see"><para>_layer).</para>
</simplesect>
If <computeroutput>source</computeroutput> is UsdResolveInfoSourceValueClips, the source clips will have been introduced in this LayerStack.</para>
<para>Otherwise, this LayerStack will be invalid. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/resolveInfo.h" line="129" column="1" bodyfile="pxr/usd/usd/resolveInfo.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_resolve_info_1a925f8fa76f74ea39f95379ecd77df956" prot="private" static="no" mutable="no">
        <type>SdfLayerHandle</type>
        <definition>SdfLayerHandle _layer</definition>
        <argsstring></argsstring>
        <name>_layer</name>
        <briefdescription>
<para>The layer in <computeroutput>layerStack</computeroutput> that provides the strongest time sample or default opinion. </para>
        </briefdescription>
        <detaileddescription>
<para>This is valid only if <computeroutput>source</computeroutput> is either <computeroutput>UsdResolveInfoSourceDefault</computeroutput> or <computeroutput>UsdResolveInfoTimeSamples</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/resolveInfo.h" line="136" column="1" bodyfile="pxr/usd/usd/resolveInfo.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_resolve_info_1a9e796c2728b038987d7224e5b3850c45" prot="private" static="no" mutable="no">
        <type><ref refid="class_pcp_node_ref" kindref="compound">PcpNodeRef</ref></type>
        <definition>PcpNodeRef _node</definition>
        <argsstring></argsstring>
        <name>_node</name>
        <briefdescription>
<para>The node within the containing <ref refid="class_pcp_prim_index" kindref="compound">PcpPrimIndex</ref> that provided the strongest value opinion. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/resolveInfo.h" line="140" column="1" bodyfile="pxr/usd/usd/resolveInfo.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_resolve_info_1a9801c0ac55bad3b8ea03390bdce9a81b" prot="private" static="no" mutable="no">
        <type><ref refid="class_sdf_layer_offset" kindref="compound">SdfLayerOffset</ref></type>
        <definition>SdfLayerOffset _layerToStageOffset</definition>
        <argsstring></argsstring>
        <name>_layerToStageOffset</name>
        <briefdescription>
<para>If <computeroutput>source</computeroutput> is <computeroutput>UsdResolveInfoTimeSamples</computeroutput>, the time offset that maps time in the strongest resolved layer to the stage. </para>
        </briefdescription>
        <detaileddescription>
<para>If no offset applies, this will be the identity offset. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/resolveInfo.h" line="146" column="1" bodyfile="pxr/usd/usd/resolveInfo.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_resolve_info_1a69d0323a6885bc95e4c82c8007b2d290" prot="private" static="no" mutable="no">
        <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref></type>
        <definition>SdfPath _primPathInLayerStack</definition>
        <argsstring></argsstring>
        <name>_primPathInLayerStack</name>
        <briefdescription>
<para>The path to the prim that owns the attribute to query in <computeroutput>layerStack</computeroutput> to retrieve the strongest value opinion. </para>
        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>source</computeroutput> is either <computeroutput>UsdResolveInfoSourceDefault</computeroutput> or <computeroutput>UsdResolveInfoTimeSamples</computeroutput>, this is the path to the prim specs in <computeroutput>layerStack</computeroutput> that own the attribute spec containing strongest value opinion.</para>
<para>If <computeroutput>source</computeroutput> is UsdResolveInfoSourceValueClips, this is the path to the prim that should be used to query clips for attribute values. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/resolveInfo.h" line="159" column="1" bodyfile="pxr/usd/usd/resolveInfo.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_resolve_info_1a79b46af7b79b877be290900a844821d8" prot="private" static="no" mutable="no">
        <type><ref refid="resolve_info_8h_1a3de487b71c0141f2b5f8b6d0d50f924f" kindref="member">UsdResolveInfoSource</ref></type>
        <definition>UsdResolveInfoSource _source</definition>
        <argsstring></argsstring>
        <name>_source</name>
        <briefdescription>
<para>The source of the associated attribute&apos;s value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/resolveInfo.h" line="162" column="1" bodyfile="pxr/usd/usd/resolveInfo.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_resolve_info_1acd7473d7f4d24355e5004f632e7f792b" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool _valueIsBlocked</definition>
        <argsstring></argsstring>
        <name>_valueIsBlocked</name>
        <briefdescription>
<para>If <computeroutput>source</computeroutput> is <computeroutput>UsdResolveInfoSourceNone</computeroutput> or <computeroutput>UsdResolveInfoSourceFallback</computeroutput>, this indicates whether or not this due to the value being blocked. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/resolveInfo.h" line="167" column="1" bodyfile="pxr/usd/usd/resolveInfo.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_usd_resolve_info_1aa332483a46ed09b95ae5344dcf051b92" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class UsdAttribute</definition>
        <argsstring></argsstring>
        <name>UsdAttribute</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/resolveInfo.h" line="169" column="1" bodyfile="pxr/usd/usd/resolveInfo.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_usd_resolve_info_1ab763ff44a10a7cbf08ec18a4557203e3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class UsdStage</definition>
        <argsstring></argsstring>
        <name>UsdStage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/resolveInfo.h" line="170" column="1" bodyfile="pxr/usd/usd/resolveInfo.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_usd_resolve_info_1a165d208e11c5e2916b8b3a42e79a9cbf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class UsdStage_ResolveInfoAccess</definition>
        <argsstring></argsstring>
        <name>UsdStage_ResolveInfoAccess</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/resolveInfo.h" line="171" column="1" bodyfile="pxr/usd/usd/resolveInfo.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_usd_resolve_info_1aacf3a34e9976aa79c506135cb10ea20d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class UsdAttributeQuery</definition>
        <argsstring></argsstring>
        <name>UsdAttributeQuery</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/resolveInfo.h" line="172" column="1" bodyfile="pxr/usd/usd/resolveInfo.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_usd_resolve_info_1aca60c1b72d4c850d7043825855a679ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdResolveInfo</definition>
        <argsstring>()</argsstring>
        <name>UsdResolveInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/resolveInfo.h" line="71" column="1" bodyfile="pxr/usd/usd/resolveInfo.h" bodystart="71" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_resolve_info_1a62bdefd9827ec44a16cd2fd7a2a798d4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="resolve_info_8h_1a3de487b71c0141f2b5f8b6d0d50f924f" kindref="member">UsdResolveInfoSource</ref></type>
        <definition>UsdResolveInfoSource GetSource</definition>
        <argsstring>() const</argsstring>
        <name>GetSource</name>
        <briefdescription>
<para>Return the source of the associated attribute&apos;s value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/resolveInfo.h" line="78" column="1" bodyfile="pxr/usd/usd/resolveInfo.h" bodystart="78" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_resolve_info_1ac32e78e888da7f1deefa31060a482bf5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool HasAuthoredValueOpinion</definition>
        <argsstring>() const</argsstring>
        <name>HasAuthoredValueOpinion</name>
        <briefdescription>
<para>Return true if this <ref refid="class_usd_resolve_info" kindref="compound">UsdResolveInfo</ref> represents an attribute that has an authored value opinion. </para>
        </briefdescription>
        <detaileddescription>
<para>This will return <computeroutput>true</computeroutput> if there is <emphasis>any</emphasis> authored value opinion, including a <ref refid="class_usd_attribute_1Usd_AttributeBlocking" kindref="member">block</ref></para>
<para>This is equivalent to <computeroutput><ref refid="class_usd_resolve_info_1a8a41a61d2763aeeab90f688c239a509c" kindref="member">HasAuthoredValue()</ref> || <ref refid="class_usd_resolve_info_1a47c6e4143df49a32b7a459f06d0483a3" kindref="member">ValueIsBlocked()</ref></computeroutput> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/resolveInfo.h" line="87" column="1" bodyfile="pxr/usd/usd/resolveInfo.h" bodystart="87" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_resolve_info_1a8a41a61d2763aeeab90f688c239a509c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool HasAuthoredValue</definition>
        <argsstring>() const</argsstring>
        <name>HasAuthoredValue</name>
        <briefdescription>
<para>Return true if this <ref refid="class_usd_resolve_info" kindref="compound">UsdResolveInfo</ref> represents an attribute that has an authored value that is not <ref refid="class_usd_attribute_1Usd_AttributeBlocking" kindref="member">blocked</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/resolveInfo.h" line="97" column="1" bodyfile="pxr/usd/usd/resolveInfo.h" bodystart="97" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_resolve_info_1a67d1a2c0ec2473f4ee298348ae5bfb89" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_pcp_node_ref" kindref="compound">PcpNodeRef</ref></type>
        <definition>PcpNodeRef GetNode</definition>
        <argsstring>() const</argsstring>
        <name>GetNode</name>
        <briefdescription>
<para>Return the node within the containing <ref refid="class_pcp_prim_index" kindref="compound">PcpPrimIndex</ref> that provided the resolved value opinion. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/resolveInfo.h" line="106" column="1" bodyfile="pxr/usd/usd/resolveInfo.h" bodystart="106" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_resolve_info_1a47c6e4143df49a32b7a459f06d0483a3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ValueIsBlocked</definition>
        <argsstring>() const</argsstring>
        <name>ValueIsBlocked</name>
        <briefdescription>
<para>Return true if this <ref refid="class_usd_resolve_info" kindref="compound">UsdResolveInfo</ref> represents an attribute whose value is blocked. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_usd_attribute_1a88e75995833fc8cb897d9ed123c3f3e0" kindref="member">UsdAttribute::Block()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/resolveInfo.h" line="114" column="1" bodyfile="pxr/usd/usd/resolveInfo.h" bodystart="114" bodyend="116"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Container for information about the source of an attribute&apos;s value, i.e. </para>
    </briefdescription>
    <detaileddescription>
<para>the &apos;resolved&apos; location of the attribute.</para>
<para>For more details, see <ref refid="_usd__page__properties_of_scene_description_1Usd_ValueResolution" kindref="member">TimeSamples, Defaults, and Value Resolution</ref>. </para>
    </detaileddescription>
    <location file="pxr/usd/usd/resolveInfo.h" line="69" column="1" bodyfile="pxr/usd/usd/resolveInfo.h" bodystart="68" bodyend="173"/>
    <listofallmembers>
      <member refid="class_usd_resolve_info_1a925f8fa76f74ea39f95379ecd77df956" prot="private" virt="non-virtual"><scope>UsdResolveInfo</scope><name>_layer</name></member>
      <member refid="class_usd_resolve_info_1a85e82cb7e4ee885d102eb6f52d389183" prot="private" virt="non-virtual"><scope>UsdResolveInfo</scope><name>_layerStack</name></member>
      <member refid="class_usd_resolve_info_1a9801c0ac55bad3b8ea03390bdce9a81b" prot="private" virt="non-virtual"><scope>UsdResolveInfo</scope><name>_layerToStageOffset</name></member>
      <member refid="class_usd_resolve_info_1a9e796c2728b038987d7224e5b3850c45" prot="private" virt="non-virtual"><scope>UsdResolveInfo</scope><name>_node</name></member>
      <member refid="class_usd_resolve_info_1a69d0323a6885bc95e4c82c8007b2d290" prot="private" virt="non-virtual"><scope>UsdResolveInfo</scope><name>_primPathInLayerStack</name></member>
      <member refid="class_usd_resolve_info_1a79b46af7b79b877be290900a844821d8" prot="private" virt="non-virtual"><scope>UsdResolveInfo</scope><name>_source</name></member>
      <member refid="class_usd_resolve_info_1acd7473d7f4d24355e5004f632e7f792b" prot="private" virt="non-virtual"><scope>UsdResolveInfo</scope><name>_valueIsBlocked</name></member>
      <member refid="class_usd_resolve_info_1a67d1a2c0ec2473f4ee298348ae5bfb89" prot="public" virt="non-virtual"><scope>UsdResolveInfo</scope><name>GetNode</name></member>
      <member refid="class_usd_resolve_info_1a62bdefd9827ec44a16cd2fd7a2a798d4" prot="public" virt="non-virtual"><scope>UsdResolveInfo</scope><name>GetSource</name></member>
      <member refid="class_usd_resolve_info_1a8a41a61d2763aeeab90f688c239a509c" prot="public" virt="non-virtual"><scope>UsdResolveInfo</scope><name>HasAuthoredValue</name></member>
      <member refid="class_usd_resolve_info_1ac32e78e888da7f1deefa31060a482bf5" prot="public" virt="non-virtual"><scope>UsdResolveInfo</scope><name>HasAuthoredValueOpinion</name></member>
      <member refid="class_usd_resolve_info_1aa332483a46ed09b95ae5344dcf051b92" prot="private" virt="non-virtual"><scope>UsdResolveInfo</scope><name>UsdAttribute</name></member>
      <member refid="class_usd_resolve_info_1aacf3a34e9976aa79c506135cb10ea20d" prot="private" virt="non-virtual"><scope>UsdResolveInfo</scope><name>UsdAttributeQuery</name></member>
      <member refid="class_usd_resolve_info_1aca60c1b72d4c850d7043825855a679ae" prot="public" virt="non-virtual"><scope>UsdResolveInfo</scope><name>UsdResolveInfo</name></member>
      <member refid="class_usd_resolve_info_1ab763ff44a10a7cbf08ec18a4557203e3" prot="private" virt="non-virtual"><scope>UsdResolveInfo</scope><name>UsdStage</name></member>
      <member refid="class_usd_resolve_info_1a165d208e11c5e2916b8b3a42e79a9cbf" prot="private" virt="non-virtual"><scope>UsdResolveInfo</scope><name>UsdStage_ResolveInfoAccess</name></member>
      <member refid="class_usd_resolve_info_1a47c6e4143df49a32b7a459f06d0483a3" prot="public" virt="non-virtual"><scope>UsdResolveInfo</scope><name>ValueIsBlocked</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
