<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="wrap_type_helpers_8h" kind="file" language="C++">
    <compoundname>wrapTypeHelpers.h</compoundname>
    <includes refid="pxr_8h" local="yes">pxr/pxr.h</includes>
    <includes refid="base_2tf_2api_8h" local="yes">pxr/base/tf/api.h</includes>
    <includes refid="py_obj_wrapper_8h" local="yes">pxr/base/tf/pyObjWrapper.h</includes>
    <includes refid="type_8h" local="yes">pxr/base/tf/type.h</includes>
    <includes local="no">boost/python/class.hpp</includes>
    <includes local="no">boost/python/def_visitor.hpp</includes>
    <includedby refid="py_notice_wrapper_8h" local="yes">pxr/base/tf/pyNoticeWrapper.h</includedby>
    <includedby refid="py_ptr_helpers_8h" local="yes">pxr/base/tf/pyPtrHelpers.h</includedby>
    <includedby refid="wrap_array_8h" local="yes">pxr/base/vt/wrapArray.h</includedby>
    <incdepgraph>
      <node id="88582">
        <label>locale</label>
      </node>
      <node id="88602">
        <label>atomic</label>
      </node>
      <node id="88593">
        <label>functional</label>
      </node>
      <node id="88577">
        <label>pxr/base/arch/export.h</label>
        <link refid="export_8h"/>
        <childnode refid="88578" relation="include">
        </childnode>
      </node>
      <node id="88584">
        <label>boost/functional/hash.hpp</label>
      </node>
      <node id="88604">
        <label>cstdint</label>
      </node>
      <node id="88580">
        <label>pxr/base/arch/pragmas.h</label>
        <link refid="pragmas_8h"/>
        <childnode refid="88578" relation="include">
        </childnode>
      </node>
      <node id="88597">
        <label>string</label>
      </node>
      <node id="88591">
        <label>pxr/base/arch/attributes.h</label>
        <link refid="attributes_8h"/>
        <childnode refid="88575" relation="include">
        </childnode>
        <childnode refid="88577" relation="include">
        </childnode>
      </node>
      <node id="88575">
        <label>pxr/pxr.h</label>
        <link refid="pxr_8h"/>
      </node>
      <node id="88600">
        <label>pxr/base/tf/type_Impl.h</label>
        <link refid="type___impl_8h_source"/>
        <childnode refid="88601" relation="include">
        </childnode>
      </node>
      <node id="88592">
        <label>pxr/base/tf/preprocessorUtilsLite.h</label>
        <link refid="preprocessor_utils_lite_8h_source"/>
        <childnode refid="88578" relation="include">
        </childnode>
      </node>
      <node id="88581">
        <label>pxr/base/tf/pySafePython.h</label>
        <link refid="py_safe_python_8h"/>
        <childnode refid="88580" relation="include">
        </childnode>
        <childnode refid="88582" relation="include">
        </childnode>
        <childnode refid="88583" relation="include">
        </childnode>
      </node>
      <node id="88574">
        <label>pxr/base/tf/wrapTypeHelpers.h</label>
        <link refid="wrap_type_helpers_8h"/>
        <childnode refid="88575" relation="include">
        </childnode>
        <childnode refid="88576" relation="include">
        </childnode>
        <childnode refid="88579" relation="include">
        </childnode>
        <childnode refid="88589" relation="include">
        </childnode>
        <childnode refid="88605" relation="include">
        </childnode>
        <childnode refid="88606" relation="include">
        </childnode>
      </node>
      <node id="88594">
        <label>typeinfo</label>
      </node>
      <node id="88586">
        <label>boost/python/object_operators.hpp</label>
      </node>
      <node id="88585">
        <label>boost/python/object_fwd.hpp</label>
      </node>
      <node id="88601">
        <label>pxr/base/tf/mallocTag.h</label>
        <link refid="malloc_tag_8h"/>
        <childnode refid="88575" relation="include">
        </childnode>
        <childnode refid="88576" relation="include">
        </childnode>
        <childnode refid="88602" relation="include">
        </childnode>
        <childnode refid="88603" relation="include">
        </childnode>
        <childnode refid="88604" relation="include">
        </childnode>
        <childnode refid="88587" relation="include">
        </childnode>
        <childnode refid="88597" relation="include">
        </childnode>
        <childnode refid="88599" relation="include">
        </childnode>
      </node>
      <node id="88599">
        <label>vector</label>
      </node>
      <node id="88576">
        <label>pxr/base/tf/api.h</label>
        <link refid="base_2tf_2api_8h_source"/>
        <childnode refid="88577" relation="include">
        </childnode>
      </node>
      <node id="88606">
        <label>boost/python/def_visitor.hpp</label>
      </node>
      <node id="88578">
        <label>pxr/base/arch/defines.h</label>
        <link refid="defines_8h_source"/>
      </node>
      <node id="88587">
        <label>iosfwd</label>
      </node>
      <node id="88603">
        <label>cstdlib</label>
      </node>
      <node id="88589">
        <label>pxr/base/tf/type.h</label>
        <link refid="type_8h_source"/>
        <childnode refid="88575" relation="include">
        </childnode>
        <childnode refid="88576" relation="include">
        </childnode>
        <childnode refid="88590" relation="include">
        </childnode>
        <childnode refid="88595" relation="include">
        </childnode>
        <childnode refid="88587" relation="include">
        </childnode>
        <childnode refid="88588" relation="include">
        </childnode>
        <childnode refid="88596" relation="include">
        </childnode>
        <childnode refid="88597" relation="include">
        </childnode>
        <childnode refid="88598" relation="include">
        </childnode>
        <childnode refid="88594" relation="include">
        </childnode>
        <childnode refid="88599" relation="include">
        </childnode>
        <childnode refid="88600" relation="include">
        </childnode>
      </node>
      <node id="88583">
        <label>boost/python/detail/wrap_python.hpp</label>
      </node>
      <node id="88595">
        <label>pxr/base/tf/typeFunctions.h</label>
        <link refid="type_functions_8h"/>
        <childnode refid="88575" relation="include">
        </childnode>
        <childnode refid="88588" relation="include">
        </childnode>
      </node>
      <node id="88579">
        <label>pxr/base/tf/pyObjWrapper.h</label>
        <link refid="py_obj_wrapper_8h_source"/>
        <childnode refid="88575" relation="include">
        </childnode>
        <childnode refid="88576" relation="include">
        </childnode>
        <childnode refid="88580" relation="include">
        </childnode>
        <childnode refid="88581" relation="include">
        </childnode>
        <childnode refid="88584" relation="include">
        </childnode>
        <childnode refid="88585" relation="include">
        </childnode>
        <childnode refid="88586" relation="include">
        </childnode>
        <childnode refid="88587" relation="include">
        </childnode>
        <childnode refid="88588" relation="include">
        </childnode>
      </node>
      <node id="88598">
        <label>type_traits</label>
      </node>
      <node id="88596">
        <label>set</label>
      </node>
      <node id="88588">
        <label>memory</label>
      </node>
      <node id="88590">
        <label>pxr/base/tf/registryManager.h</label>
        <link refid="registry_manager_8h"/>
        <childnode refid="88575" relation="include">
        </childnode>
        <childnode refid="88591" relation="include">
        </childnode>
        <childnode refid="88592" relation="include">
        </childnode>
        <childnode refid="88576" relation="include">
        </childnode>
        <childnode refid="88593" relation="include">
        </childnode>
        <childnode refid="88594" relation="include">
        </childnode>
      </node>
      <node id="88605">
        <label>boost/python/class.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="88609">
        <label>pxr/base/tf/pyPtrHelpers.h</label>
        <link refid="py_ptr_helpers_8h"/>
        <childnode refid="88610" relation="include">
        </childnode>
      </node>
      <node id="88608">
        <label>pxr/base/tf/pyNoticeWrapper.h</label>
        <link refid="py_notice_wrapper_8h_source"/>
      </node>
      <node id="88607">
        <label>pxr/base/tf/wrapTypeHelpers.h</label>
        <link refid="wrap_type_helpers_8h"/>
        <childnode refid="88608" relation="include">
        </childnode>
        <childnode refid="88609" relation="include">
        </childnode>
        <childnode refid="88611" relation="include">
        </childnode>
      </node>
      <node id="88611">
        <label>pxr/base/vt/wrapArray.h</label>
        <link refid="wrap_array_8h_source"/>
      </node>
      <node id="88610">
        <label>pxr/base/tf/pySingleton.h</label>
        <link refid="py_singleton_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_tf_type___wrap_helpers_1_1___python_class" prot="public">TfType_WrapHelpers::_PythonClass</innerclass>
    <innerclass refid="struct_tf_type_python_class" prot="public">TfTypePythonClass</innerclass>
    <innernamespace refid="namespace_tf_type___wrap_helpers">TfType_WrapHelpers</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="wrap_type_helpers_8h_1a9e8b48b9434202f4c204152a412add7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API <ref refid="class_tf_type" kindref="compound">TfType</ref></type>
        <definition>TF_API TfType TfType_DefinePythonTypeAndBases</definition>
        <argsstring>(const boost::python::object &amp;classObj)</argsstring>
        <name>TfType_DefinePythonTypeAndBases</name>
        <param>
          <type>const boost::python::object &amp;</type>
          <declname>classObj</declname>
        </param>
        <briefdescription>
<para>A helper for wrapping C++ types. </para>
        </briefdescription>
        <detaileddescription>
<para>This method defines a <ref refid="class_tf_type" kindref="compound">TfType</ref> for the given python class object, and also recursively defines TfTypes for all the Python bases if necessary. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/wrapTypeHelpers.h" line="82" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2016<sp/>Pixar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Apache<sp/>License&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>following<sp/>modification;<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compliance<sp/>with<sp/>the<sp/>Apache<sp/>License<sp/>and<sp/>the<sp/>following<sp/>modification<sp/>to<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section<sp/>6.<sp/>Trademarks.<sp/>is<sp/>deleted<sp/>and<sp/>replaced<sp/>with:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>6.<sp/>Trademarks.<sp/>This<sp/>License<sp/>does<sp/>not<sp/>grant<sp/>permission<sp/>to<sp/>use<sp/>the<sp/>trade</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>names,<sp/>trademarks,<sp/>service<sp/>marks,<sp/>or<sp/>product<sp/>names<sp/>of<sp/>the<sp/>Licensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>and<sp/>its<sp/>affiliates,<sp/>except<sp/>as<sp/>required<sp/>to<sp/>comply<sp/>with<sp/>Section<sp/>4(c)<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>the<sp/>License<sp/>and<sp/>to<sp/>reproduce<sp/>the<sp/>content<sp/>of<sp/>the<sp/>NOTICE<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>Apache<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>Apache<sp/>License<sp/>with<sp/>the<sp/>above<sp/>modification<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/>See<sp/>the<sp/>Apache<sp/>License<sp/>for<sp/>the<sp/>specific</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>Apache<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PXR_BASE_TF_WRAP_TYPE_HELPERS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PXR_BASE_TF_WRAP_TYPE_HELPERS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pxr_8h" kindref="compound">pxr/pxr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/base/tf/api.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/base/tf/pyObjWrapper.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/base/tf/type.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/python/class.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/python/def_visitor.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">PXR_NAMESPACE_OPEN_SCOPE</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Private<sp/>implementation<sp/>namespace;<sp/>public<sp/>types<sp/>are<sp/>exposed<sp/>below.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">TfType_WrapHelpers<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">boost::python;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_PythonClass<sp/>:<sp/>def_visitor&lt;_PythonClass&gt;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">def_visitor_access;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CLS,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_Visit(CLS<sp/>&amp;c,<sp/>T<sp/>*)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_tf_type" kindref="compound">TfType</ref><sp/>t<sp/>=<sp/>TfType::Find&lt;T&gt;())</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t.DefinePythonClass(c);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>CLS&gt;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>visit(CLS<sp/>&amp;c)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>function<sp/>template<sp/>resolution<sp/>to<sp/>wrap<sp/>the<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>appropriately<sp/>depending<sp/>on<sp/>whether<sp/>it<sp/>is<sp/>a<sp/>polymorphic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wrapper&lt;&gt;<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>CLS::wrapped_type<sp/>Type;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Visit(c,<sp/>detail::unwrap_wrapper((Type*)0));</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>TfType_WrapHelpers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="struct_tf_type_python_class" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_tf_type_python_class" kindref="compound">TfTypePythonClass</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>TfType_WrapHelpers::_PythonClass<sp/>{};</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal">TF_API<sp/><ref refid="class_tf_type" kindref="compound">TfType</ref><sp/>TfType_DefinePythonTypeAndBases(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>boost::python::object<sp/>&amp;<sp/>classObj<sp/>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">PXR_NAMESPACE_CLOSE_SCOPE</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>PXR_BASE_TF_WRAP_TYPE_HELPERS_H</highlight></codeline>
    </programlisting>
    <location file="pxr/base/tf/wrapTypeHelpers.h"/>
  </compounddef>
</doxygen>
