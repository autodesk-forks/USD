<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_trace_event_list" kind="class" language="C++" prot="public">
    <compoundname>TraceEventList</compoundname>
    <includes refid="event_list_8h" local="no">eventList.h</includes>
      <sectiondef kind="user-defined">
      <header>Iterator support.</header>
      <memberdef kind="typedef" id="class_trace_event_list_1abf71eb34e76c791d3b99d405a97f7c25" prot="public" static="no">
        <type><ref refid="class_trace_event_container_1_1const__iterator" kindref="compound">TraceEventContainer::const_iterator</ref></type>
        <definition>using const_iterator =  TraceEventContainer::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventList.h" line="63" column="1" bodyfile="pxr/base/trace/eventList.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_trace_event_list_1a3c77911bae109508ec5e2eedb19b20da" prot="public" static="no">
        <type>TraceEventContainer::const_reverse_iterator</type>
        <definition>using const_reverse_iterator =  TraceEventContainer::const_reverse_iterator</definition>
        <argsstring></argsstring>
        <name>const_reverse_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventList.h" line="67" column="1" bodyfile="pxr/base/trace/eventList.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_list_1a29305669b60ca1680752e2fc3592ba99" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_trace_event_container_1_1const__iterator" kindref="compound">const_iterator</ref></type>
        <definition>const_iterator begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventList.h" line="64" column="1" bodyfile="pxr/base/trace/eventList.h" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_list_1accf9a4bd0c34d4a5f6a7dab66ea10cdc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_trace_event_container_1_1const__iterator" kindref="compound">const_iterator</ref></type>
        <definition>const_iterator end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventList.h" line="65" column="1" bodyfile="pxr/base/trace/eventList.h" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_list_1af086cceac199bd735c7a97c2a8d7ed21" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_reverse_iterator</type>
        <definition>const_reverse_iterator rbegin</definition>
        <argsstring>() const</argsstring>
        <name>rbegin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventList.h" line="68" column="1" bodyfile="pxr/base/trace/eventList.h" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_list_1a07da1fdc890b6949f1a20a1961c6fc44" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_reverse_iterator</type>
        <definition>const_reverse_iterator rend</definition>
        <argsstring>() const</argsstring>
        <name>rend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventList.h" line="69" column="1" bodyfile="pxr/base/trace/eventList.h" bodystart="69" bodyend="69"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_trace_event_list_1a870a1a05dc83eb12035a5cb556a9758a" prot="private" static="no">
        <type>std::unordered_set&lt; <ref refid="class_trace_dynamic_key" kindref="compound">TraceDynamicKey</ref>, <ref refid="struct_trace_dynamic_key_1_1_hash_functor" kindref="compound">TraceDynamicKey::HashFunctor</ref> &gt;</type>
        <definition>using KeyCache =  std::unordered_set&lt;TraceDynamicKey, TraceDynamicKey::HashFunctor&gt;</definition>
        <argsstring></argsstring>
        <name>KeyCache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventList.h" line="112" column="1" bodyfile="pxr/base/trace/eventList.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_trace_event_list_1a03e3ece1d60330aff48c84efd8c0ceb0" prot="private" static="no" mutable="no">
        <type><ref refid="class_trace_event_container" kindref="compound">TraceEventContainer</ref></type>
        <definition>TraceEventContainer _events</definition>
        <argsstring></argsstring>
        <name>_events</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventList.h" line="105" column="1" bodyfile="pxr/base/trace/eventList.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_trace_event_list_1afc03c0e5e17e765c796df727dcaaa8cb" prot="private" static="no" mutable="no">
        <type>std::list&lt; KeyCache &gt;</type>
        <definition>std::list&lt;KeyCache&gt; _caches</definition>
        <argsstring></argsstring>
        <name>_caches</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventList.h" line="114" column="1" bodyfile="pxr/base/trace/eventList.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_trace_event_list_1a26715b615b2659bfd51a7b4bfb2b1120" prot="private" static="no" mutable="no">
        <type><ref refid="class_trace_data_buffer" kindref="compound">TraceDataBuffer</ref></type>
        <definition>TraceDataBuffer _dataCache</definition>
        <argsstring></argsstring>
        <name>_dataCache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventList.h" line="116" column="1" bodyfile="pxr/base/trace/eventList.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_trace_event_list_1a736697b4819aab59620d8003d5d3cc6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TRACE_API</type>
        <definition>TRACE_API TraceEventList</definition>
        <argsstring>()</argsstring>
        <name>TraceEventList</name>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventList.h" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_list_1aaf460446bf17fa9e342b9cccde5c0200" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TraceEventList</definition>
        <argsstring>(TraceEventList &amp;&amp;)=default</argsstring>
        <name>TraceEventList</name>
        <param>
          <type><ref refid="class_trace_event_list" kindref="compound">TraceEventList</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
<para>Move Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventList.h" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_list_1ae1a264dfe46f686204b1df89229dab64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_trace_event_list" kindref="compound">TraceEventList</ref> &amp;</type>
        <definition>TraceEventList&amp; operator=</definition>
        <argsstring>(TraceEventList &amp;&amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_trace_event_list" kindref="compound">TraceEventList</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
<para>Move Assignment. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventList.h" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_list_1ad6da6cbd4aca74f2abb8aba6da0a2639" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TraceEventList</definition>
        <argsstring>(const TraceEventList &amp;)=delete</argsstring>
        <name>TraceEventList</name>
        <param>
          <type>const <ref refid="class_trace_event_list" kindref="compound">TraceEventList</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventList.h" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_list_1a19ecb5cf058e3aed847eb8de29d78991" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_trace_event_list" kindref="compound">TraceEventList</ref> &amp;</type>
        <definition>TraceEventList&amp; operator=</definition>
        <argsstring>(const TraceEventList &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_trace_event_list" kindref="compound">TraceEventList</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventList.h" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_list_1a8e12342fc420701fbffd97025421575a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsEmpty</definition>
        <argsstring>() const</argsstring>
        <name>IsEmpty</name>
        <briefdescription>
<para>Returns whether there are any events in the list. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventList.h" line="73" column="1" bodyfile="pxr/base/trace/eventList.h" bodystart="73" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_list_1a537c52dcba6bf10c796d8596f8924b88" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>const <ref refid="class_trace_event" kindref="compound">TraceEvent</ref> &amp;</type>
        <definition>const TraceEvent&amp; EmplaceBack</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>EmplaceBack</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Construct a <ref refid="class_trace_event" kindref="compound">TraceEvent</ref> at the end on the list. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns a reference to the newly constructed event. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventList.h" line="78" column="1" bodyfile="pxr/base/trace/eventList.h" bodystart="78" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_list_1a4ca9868ef4900bb5c937bc0aecb02859" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_trace_key" kindref="compound">TraceKey</ref></type>
        <definition>TraceKey CacheKey</definition>
        <argsstring>(const TraceDynamicKey &amp;key)</argsstring>
        <name>CacheKey</name>
        <param>
          <type>const <ref refid="class_trace_dynamic_key" kindref="compound">TraceDynamicKey</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>For speed the <ref refid="class_trace_event" kindref="compound">TraceEvent</ref> class holds a pointer to a <ref refid="class_trace_static_key_data" kindref="compound">TraceStaticKeyData</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>This method creates a key which can be referenced by events in this container. Returns a <ref refid="class_trace_key" kindref="compound">TraceKey</ref> which will remain valid for the lifetime of the container. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventList.h" line="86" column="1" bodyfile="pxr/base/trace/eventList.h" bodystart="86" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_list_1acb9254403124111cc93ba673bba42bfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TRACE_API void</type>
        <definition>TRACE_API void Append</definition>
        <argsstring>(TraceEventList &amp;&amp;other)</argsstring>
        <name>Append</name>
        <param>
          <type><ref refid="class_trace_event_list" kindref="compound">TraceEventList</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Appends the given list to the end of this list. </para>
        </briefdescription>
        <detaileddescription>
<para>This object will take ownership of the events and keys in the appended list. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventList.h" line="93" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_list_1ab1e9941fe2a71c21afaf71b8e6a0a4d0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>decltype(std::declval&lt; <ref refid="class_trace_data_buffer" kindref="compound">TraceDataBuffer</ref> &gt;().StoreData(std::declval&lt; T &gt;()))</type>
        <definition>decltype(std::declval&lt;TraceDataBuffer&gt;().StoreData(std::declval&lt;T&gt;())) StoreData</definition>
        <argsstring>(const T &amp;value)</argsstring>
        <name>StoreData</name>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Copy data to the buffer and return a pointer to the cached data that is valid for the lifetime of the Eventlist. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventList.h" line="99" column="1" bodyfile="pxr/base/trace/eventList.h" bodystart="99" bodyend="101"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class represents an ordered collection of TraceEvents and the TraceDynamicKeys and data that the events reference. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pxr/base/trace/eventList.h" line="46" column="1" bodyfile="pxr/base/trace/eventList.h" bodystart="46" bodyend="117"/>
    <listofallmembers>
      <member refid="class_trace_event_list_1afc03c0e5e17e765c796df727dcaaa8cb" prot="private" virt="non-virtual"><scope>TraceEventList</scope><name>_caches</name></member>
      <member refid="class_trace_event_list_1a26715b615b2659bfd51a7b4bfb2b1120" prot="private" virt="non-virtual"><scope>TraceEventList</scope><name>_dataCache</name></member>
      <member refid="class_trace_event_list_1a03e3ece1d60330aff48c84efd8c0ceb0" prot="private" virt="non-virtual"><scope>TraceEventList</scope><name>_events</name></member>
      <member refid="class_trace_event_list_1acb9254403124111cc93ba673bba42bfe" prot="public" virt="non-virtual"><scope>TraceEventList</scope><name>Append</name></member>
      <member refid="class_trace_event_list_1a29305669b60ca1680752e2fc3592ba99" prot="public" virt="non-virtual"><scope>TraceEventList</scope><name>begin</name></member>
      <member refid="class_trace_event_list_1a4ca9868ef4900bb5c937bc0aecb02859" prot="public" virt="non-virtual"><scope>TraceEventList</scope><name>CacheKey</name></member>
      <member refid="class_trace_event_list_1abf71eb34e76c791d3b99d405a97f7c25" prot="public" virt="non-virtual"><scope>TraceEventList</scope><name>const_iterator</name></member>
      <member refid="class_trace_event_list_1a3c77911bae109508ec5e2eedb19b20da" prot="public" virt="non-virtual"><scope>TraceEventList</scope><name>const_reverse_iterator</name></member>
      <member refid="class_trace_event_list_1a537c52dcba6bf10c796d8596f8924b88" prot="public" virt="non-virtual"><scope>TraceEventList</scope><name>EmplaceBack</name></member>
      <member refid="class_trace_event_list_1accf9a4bd0c34d4a5f6a7dab66ea10cdc" prot="public" virt="non-virtual"><scope>TraceEventList</scope><name>end</name></member>
      <member refid="class_trace_event_list_1a8e12342fc420701fbffd97025421575a" prot="public" virt="non-virtual"><scope>TraceEventList</scope><name>IsEmpty</name></member>
      <member refid="class_trace_event_list_1a870a1a05dc83eb12035a5cb556a9758a" prot="private" virt="non-virtual"><scope>TraceEventList</scope><name>KeyCache</name></member>
      <member refid="class_trace_event_list_1ae1a264dfe46f686204b1df89229dab64" prot="public" virt="non-virtual"><scope>TraceEventList</scope><name>operator=</name></member>
      <member refid="class_trace_event_list_1a19ecb5cf058e3aed847eb8de29d78991" prot="public" virt="non-virtual"><scope>TraceEventList</scope><name>operator=</name></member>
      <member refid="class_trace_event_list_1af086cceac199bd735c7a97c2a8d7ed21" prot="public" virt="non-virtual"><scope>TraceEventList</scope><name>rbegin</name></member>
      <member refid="class_trace_event_list_1a07da1fdc890b6949f1a20a1961c6fc44" prot="public" virt="non-virtual"><scope>TraceEventList</scope><name>rend</name></member>
      <member refid="class_trace_event_list_1ab1e9941fe2a71c21afaf71b8e6a0a4d0" prot="public" virt="non-virtual"><scope>TraceEventList</scope><name>StoreData</name></member>
      <member refid="class_trace_event_list_1a736697b4819aab59620d8003d5d3cc6f" prot="public" virt="non-virtual"><scope>TraceEventList</scope><name>TraceEventList</name></member>
      <member refid="class_trace_event_list_1aaf460446bf17fa9e342b9cccde5c0200" prot="public" virt="non-virtual"><scope>TraceEventList</scope><name>TraceEventList</name></member>
      <member refid="class_trace_event_list_1ad6da6cbd4aca74f2abb8aba6da0a2639" prot="public" virt="non-virtual"><scope>TraceEventList</scope><name>TraceEventList</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
