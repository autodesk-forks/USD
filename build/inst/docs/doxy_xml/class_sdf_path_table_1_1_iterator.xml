<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_sdf_path_table_1_1_iterator" kind="class" language="C++" prot="public">
    <compoundname>SdfPathTable::Iterator</compoundname>
    <templateparamlist>
      <param>
        <type>class ValType</type>
      </param>
      <param>
        <type>class EntryPtr</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_sdf_path_table_1_1_iterator_1a6b137a24d9328a60aef01d0f938cf0c3" prot="public" static="no">
        <type>std::forward_iterator_tag</type>
        <definition>using iterator_category =  std::forward_iterator_tag</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/pathTable.h" line="206" column="1" bodyfile="pxr/usd/sdf/pathTable.h" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_sdf_path_table_1_1_iterator_1a34031767ee1c870eacb421613a07cb51" prot="public" static="no">
        <type>ValType</type>
        <definition>using value_type =  ValType</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/pathTable.h" line="207" column="1" bodyfile="pxr/usd/sdf/pathTable.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_sdf_path_table_1_1_iterator_1ac61ad51294dfc19ffccdd8a2c8a76d31" prot="public" static="no">
        <type>ValType &amp;</type>
        <definition>using reference =  ValType&amp;</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/pathTable.h" line="208" column="1" bodyfile="pxr/usd/sdf/pathTable.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_sdf_path_table_1_1_iterator_1a20ea88fb2cd07f14b0a73bb03867d0a9" prot="public" static="no">
        <type>ValType *</type>
        <definition>using pointer =  ValType*</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/pathTable.h" line="209" column="1" bodyfile="pxr/usd/sdf/pathTable.h" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_sdf_path_table_1_1_iterator_1ace405568d0b2f3fad4990044252c7732" prot="public" static="no">
        <type>std::ptrdiff_t</type>
        <definition>using difference_type =  std::ptrdiff_t</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/pathTable.h" line="210" column="1" bodyfile="pxr/usd/sdf/pathTable.h" bodystart="210" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_sdf_path_table_1_1_iterator_1a7f054ce6064c10078f103da22370f26f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class SdfPathTable</definition>
        <argsstring></argsstring>
        <name>SdfPathTable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/pathTable.h" line="277" column="1" bodyfile="pxr/usd/sdf/pathTable.h" bodystart="277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_sdf_path_table_1_1_iterator_1ac648045af534027b42582d90aee6a37f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class</type>
          </param>
          <param>
            <type>class</type>
          </param>
        </templateparamlist>
        <type>friend class</type>
        <definition>friend class Iterator</definition>
        <argsstring></argsstring>
        <name>Iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/pathTable.h" line="278" column="1" bodyfile="pxr/usd/sdf/pathTable.h" bodystart="278" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_sdf_path_table_1_1_iterator_1a2785c54ace96972083f85baa986ab3af" prot="protected" static="no" mutable="no">
        <type>EntryPtr</type>
        <definition>EntryPtr _entry</definition>
        <argsstring></argsstring>
        <name>_entry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/pathTable.h" line="305" column="1" bodyfile="pxr/usd/sdf/pathTable.h" bodystart="305" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_sdf_path_table_1_1_iterator_1a0eb692aa72a40a73a4787593425dceb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Iterator</definition>
        <argsstring>()=default</argsstring>
        <name>Iterator</name>
        <briefdescription>
<para>The standard requires default construction but places practically no requirements on the semantics of default-constructed iterators. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/pathTable.h" line="214" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_path_table_1_1_iterator_1a2f8a23b0668f47ba81813ba1c19314c2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class OtherVal</type>
          </param>
          <param>
            <type>class OtherEntryPtr</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>Iterator</definition>
        <argsstring>(Iterator&lt; OtherVal, OtherEntryPtr &gt; const &amp;other)</argsstring>
        <name>Iterator</name>
        <param>
          <type>Iterator&lt; OtherVal, OtherEntryPtr &gt; const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy constructor (also allows for converting non-const to const). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/pathTable.h" line="218" column="1" bodyfile="pxr/usd/sdf/pathTable.h" bodystart="218" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_path_table_1_1_iterator_1a5b18bb8c3a765334dd1e3bd2eb8374f3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>reference</type>
        <definition>reference operator *</definition>
        <argsstring>() const</argsstring>
        <name>operator *</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/pathTable.h" line="222" column="1" bodyfile="pxr/usd/sdf/pathTable.h" bodystart="222" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_path_table_1_1_iterator_1aef4e7d4e0fa56e9f7509c555f73d24d2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>pointer</type>
        <definition>pointer operator-&gt;</definition>
        <argsstring>() const</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/pathTable.h" line="223" column="1" bodyfile="pxr/usd/sdf/pathTable.h" bodystart="223" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_path_table_1_1_iterator_1aef12ef33726bc591f569f822c7b5ac41" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Iterator &amp;</type>
        <definition>Iterator&amp; operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/pathTable.h" line="225" column="1" bodyfile="pxr/usd/sdf/pathTable.h" bodystart="225" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_path_table_1_1_iterator_1ac1702aedba13b4112b891b58dfd78eba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Iterator</type>
        <definition>Iterator operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/pathTable.h" line="230" column="1" bodyfile="pxr/usd/sdf/pathTable.h" bodystart="230" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_path_table_1_1_iterator_1ae2641ca4dbd111db05aba1f088d8b11d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class OtherVal</type>
          </param>
          <param>
            <type>class OtherEntryPtr</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(Iterator&lt; OtherVal, OtherEntryPtr &gt; const &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>Iterator&lt; OtherVal, OtherEntryPtr &gt; const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/pathTable.h" line="237" column="1" bodyfile="pxr/usd/sdf/pathTable.h" bodystart="237" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_path_table_1_1_iterator_1aa1a3298182552970ef5382f7b0f57089" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class OtherVal</type>
          </param>
          <param>
            <type>class OtherEntryPtr</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(Iterator&lt; OtherVal, OtherEntryPtr &gt; const &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>Iterator&lt; OtherVal, OtherEntryPtr &gt; const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/pathTable.h" line="242" column="1" bodyfile="pxr/usd/sdf/pathTable.h" bodystart="242" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_path_table_1_1_iterator_1a542abd8ef2d1dc3d170c478ad987731d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Iterator</type>
        <definition>Iterator GetNextSubtree</definition>
        <argsstring>() const</argsstring>
        <name>GetNextSubtree</name>
        <briefdescription>
<para>Return an iterator <emphasis>e</emphasis>, defining a maximal range [<emphasis>*this</emphasis>, <emphasis>e</emphasis>) such that for all <emphasis>i</emphasis> in the range, <emphasis>i-&gt;first</emphasis> is <emphasis></emphasis>(*this)-&gt;first or is prefixed by <emphasis></emphasis>(*this)-&gt;first. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/pathTable.h" line="249" column="1" bodyfile="pxr/usd/sdf/pathTable.h" bodystart="249" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_path_table_1_1_iterator_1a48f41e941792d6f62e33f127deebdb90" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool HasChild</definition>
        <argsstring>() const</argsstring>
        <name>HasChild</name>
        <briefdescription>
<para>Returns true if incrementing this iterator would move to a child entry, false otherwise. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/pathTable.h" line="272" column="1" bodyfile="pxr/usd/sdf/pathTable.h" bodystart="272" bodyend="274"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_sdf_path_table_1_1_iterator_1a3430f6e5c95a8e37148b78380e409952" prot="protected" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Iterator</definition>
        <argsstring>(EntryPtr entry)</argsstring>
        <name>Iterator</name>
        <param>
          <type>EntryPtr</type>
          <declname>entry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/pathTable.h" line="280" column="1" bodyfile="pxr/usd/sdf/pathTable.h" bodystart="280" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_path_table_1_1_iterator_1aeb2624c7a86b765725fd80cd426e147d" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void increment</definition>
        <argsstring>()</argsstring>
        <name>increment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/pathTable.h" line="286" column="1" bodyfile="pxr/usd/sdf/pathTable.h" bodystart="286" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_path_table_1_1_iterator_1a2e2d460c72deb3270f03bc0b18960ccf" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class OtherVal</type>
          </param>
          <param>
            <type>class OtherEntryPtr</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool equal</definition>
        <argsstring>(Iterator&lt; OtherVal, OtherEntryPtr &gt; const &amp;other) const</argsstring>
        <name>equal</name>
        <param>
          <type>Iterator&lt; OtherVal, OtherEntryPtr &gt; const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/pathTable.h" line="295" column="1" bodyfile="pxr/usd/sdf/pathTable.h" bodystart="295" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_path_table_1_1_iterator_1a7094211372142c097ef639a3717165da" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ValType &amp;</type>
        <definition>ValType&amp; dereference</definition>
        <argsstring>() const</argsstring>
        <name>dereference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/pathTable.h" line="300" column="1" bodyfile="pxr/usd/sdf/pathTable.h" bodystart="300" bodyend="302"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pxr/usd/sdf/pathTable.h" line="204" column="1" bodyfile="pxr/usd/sdf/pathTable.h" bodystart="203" bodyend="306"/>
    <listofallmembers>
      <member refid="class_sdf_path_table_1_1_iterator_1a2785c54ace96972083f85baa986ab3af" prot="protected" virt="non-virtual"><scope>SdfPathTable::Iterator</scope><name>_entry</name></member>
      <member refid="class_sdf_path_table_1_1_iterator_1a7094211372142c097ef639a3717165da" prot="protected" virt="non-virtual"><scope>SdfPathTable::Iterator</scope><name>dereference</name></member>
      <member refid="class_sdf_path_table_1_1_iterator_1ace405568d0b2f3fad4990044252c7732" prot="public" virt="non-virtual"><scope>SdfPathTable::Iterator</scope><name>difference_type</name></member>
      <member refid="class_sdf_path_table_1_1_iterator_1a2e2d460c72deb3270f03bc0b18960ccf" prot="protected" virt="non-virtual"><scope>SdfPathTable::Iterator</scope><name>equal</name></member>
      <member refid="class_sdf_path_table_1_1_iterator_1a542abd8ef2d1dc3d170c478ad987731d" prot="public" virt="non-virtual"><scope>SdfPathTable::Iterator</scope><name>GetNextSubtree</name></member>
      <member refid="class_sdf_path_table_1_1_iterator_1a48f41e941792d6f62e33f127deebdb90" prot="public" virt="non-virtual"><scope>SdfPathTable::Iterator</scope><name>HasChild</name></member>
      <member refid="class_sdf_path_table_1_1_iterator_1aeb2624c7a86b765725fd80cd426e147d" prot="protected" virt="non-virtual"><scope>SdfPathTable::Iterator</scope><name>increment</name></member>
      <member refid="class_sdf_path_table_1_1_iterator_1ac648045af534027b42582d90aee6a37f" prot="protected" virt="non-virtual"><scope>SdfPathTable::Iterator</scope><name>Iterator</name></member>
      <member refid="class_sdf_path_table_1_1_iterator_1a0eb692aa72a40a73a4787593425dceb2" prot="public" virt="non-virtual"><scope>SdfPathTable::Iterator</scope><name>Iterator</name></member>
      <member refid="class_sdf_path_table_1_1_iterator_1a2f8a23b0668f47ba81813ba1c19314c2" prot="public" virt="non-virtual"><scope>SdfPathTable::Iterator</scope><name>Iterator</name></member>
      <member refid="class_sdf_path_table_1_1_iterator_1a3430f6e5c95a8e37148b78380e409952" prot="protected" virt="non-virtual"><scope>SdfPathTable::Iterator</scope><name>Iterator</name></member>
      <member refid="class_sdf_path_table_1_1_iterator_1a6b137a24d9328a60aef01d0f938cf0c3" prot="public" virt="non-virtual"><scope>SdfPathTable::Iterator</scope><name>iterator_category</name></member>
      <member refid="class_sdf_path_table_1_1_iterator_1a5b18bb8c3a765334dd1e3bd2eb8374f3" prot="public" virt="non-virtual"><scope>SdfPathTable::Iterator</scope><name>operator *</name></member>
      <member refid="class_sdf_path_table_1_1_iterator_1aa1a3298182552970ef5382f7b0f57089" prot="public" virt="non-virtual"><scope>SdfPathTable::Iterator</scope><name>operator!=</name></member>
      <member refid="class_sdf_path_table_1_1_iterator_1aef12ef33726bc591f569f822c7b5ac41" prot="public" virt="non-virtual"><scope>SdfPathTable::Iterator</scope><name>operator++</name></member>
      <member refid="class_sdf_path_table_1_1_iterator_1ac1702aedba13b4112b891b58dfd78eba" prot="public" virt="non-virtual"><scope>SdfPathTable::Iterator</scope><name>operator++</name></member>
      <member refid="class_sdf_path_table_1_1_iterator_1aef4e7d4e0fa56e9f7509c555f73d24d2" prot="public" virt="non-virtual"><scope>SdfPathTable::Iterator</scope><name>operator-&gt;</name></member>
      <member refid="class_sdf_path_table_1_1_iterator_1ae2641ca4dbd111db05aba1f088d8b11d" prot="public" virt="non-virtual"><scope>SdfPathTable::Iterator</scope><name>operator==</name></member>
      <member refid="class_sdf_path_table_1_1_iterator_1a20ea88fb2cd07f14b0a73bb03867d0a9" prot="public" virt="non-virtual"><scope>SdfPathTable::Iterator</scope><name>pointer</name></member>
      <member refid="class_sdf_path_table_1_1_iterator_1ac61ad51294dfc19ffccdd8a2c8a76d31" prot="public" virt="non-virtual"><scope>SdfPathTable::Iterator</scope><name>reference</name></member>
      <member refid="class_sdf_path_table_1_1_iterator_1a7f054ce6064c10078f103da22370f26f" prot="protected" virt="non-virtual"><scope>SdfPathTable::Iterator</scope><name>SdfPathTable</name></member>
      <member refid="class_sdf_path_table_1_1_iterator_1a34031767ee1c870eacb421613a07cb51" prot="public" virt="non-virtual"><scope>SdfPathTable::Iterator</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
